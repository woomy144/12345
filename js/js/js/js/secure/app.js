/*~~?*'(){"?Oï¿½???";???||{}; .ï¿½?x{}; .r??+k?x ï¿½?w-??(ï¿½,ï¿½,A){?(??)ï¿½?ï¿½O*^??"N'ï¿½ï¿½'?ï¿½nyu+J??.ï¿½?-??x."u"???[z{??????w?");?(ï¿½)????1ï¿½)ï¿½?ï¿½O*^??"*??ï¿½ï¿½?ï¿½?ï¿½?.ï¿½?-??x."u"???[y??????");ï¿½?z?"";}; .$?0_.!? .$?0_4_4?_0!? .$?0_4_4?_HD!? .H?,_?4_<???? .u???ï¿½ï¿½".$?0_.||"~?*'"ï¿½*^???-.u???ï¿½ï¿½'ï¿½?9??.u???ï¿½ï¿½:~?*'(ï¿½,ï¿½,A){ï¿½!??.ï¿½?-??x&&ï¿½!9??.ï¿½?-??x&&(ï¿½[ï¿½]A.?ï¿½nx);}; .????uï¿½r??(ï¿½){ï¿½?"?w^~)?"!ï¿½*^?u"??&&ï¿½?
?ï¿½:"?w^~)?"!ï¿½*^?o%?ï¿½?&&???Zj??Zj:ï¿½;}; .?ZjR.????(ï¿½ï¿½); .ï¿½?r~)e~?*'(ï¿½,ï¿½){?(ï¿½){????Zj;ï¿½.??b?(".");~?(???;h<ï¿½.??-?k????[h];z)??A[x]{});Ux];}ï¿½[ï¿½.??-?;k[ï¿½];ï¿½(h);ï¿½!h&&??ï¿½&& .u???ï¿½ï¿½(A,ï¿½,{r??ï¿½i?^:!ï¿½?ï¿½i?^:!ï¿½?ï¿½nx:ï¿½});}}; .??????uï¿½r??(ï¿½,ï¿½){ï¿½u"w!ï¿½?J??(ï¿½):"";ï¿½?}<ï¿½&&ï¿½?ï¿½.ï¿½?(1ï¿½a.q?ï¿½u.??)).???ï¿½?(Ü¤):"";}; .ï¿½?r~)e("J??.ï¿½?-??x.?ï¿½Rï¿½??~?*'(ï¿½){ï¿½?z?ï¿½:~?*'(ï¿½,A){???.r??+k?x ï¿½(ï¿½ï¿½,??"?ï¿½Rï¿½??;ï¿½?r.??????(A,ï¿½-h.??)u;};},"z?,"z?); .?	??*'(ï¿½,ï¿½){ï¿½?s???ï¿½?-??x.?ï¿½??ï¿½ï¿½.qï¿½e(ï¿½,ï¿½);}; .ï¿½?r~)e("9??.z{k??~?*'(ï¿½){ï¿½?z?ï¿½:~?*'(ï¿½){????h;~?(j)?.?	?,h)&&A.ï¿½?[h,ï¿½[h]]);ï¿½?|;};},"z?,"z?); .ï¿½?r~)e("9??.?ï¿½nz",~?*'(ï¿½){ï¿½?z?ï¿½:~?*'(ï¿½){????h;~?(j)?.?	?,h)&&A.ï¿½?ï¿½[h]);ï¿½?|;};},"z?,"z?); .ï¿½?r~)e("??.ï¿½?-??x.?w%??",~?*'(ï¿½){ï¿½?z?ï¿½:~?*'(ï¿½,A){???ï¿½;j)?????ï¿½?&&(i+k?x(h));???.??;u|ï¿½~?(ï¿½A&&(A??.?ï¿½(c,ï¿½);A<x;i){??I[A];?(||9??.?(,ï¿½))ï¿½?!ï¿½}ï¿½?!?};},"z?,"z?);(~?*'(ï¿½){~?*'ï¿½(h){?(A[h])ï¿½?|[h].{hï¿½????A[h]{?:h,?:!?{hï¿½?{}});ï¿½[h].qï¿½e(x.{hï¿½?x,x.{hï¿½?ï¿½);x.?!ï¿½?w.{hï¿½?}????ï¿½.?;ï¿½.s;ï¿½.uuï¿½r??(h,x,){ï¿½.ï¿½(h,x)||9??.u???ï¿½ï¿½(h,x,{z{ï¿½zï¿½??:!ï¿½??});};ï¿½.ï¿½uï¿½r??(h){"?w^~)?"!ï¿½*^???%&&K)??.ï¿½?ï¿½ï¿½)?&&9??.u???ï¿½ï¿½(h,K)??.ï¿½?ï¿½ï¿½)?,{?ï¿½nx:"2?n?"});9??.u???ï¿½ï¿½(h,"__zev?,{?ï¿½nx:!ï¿½);};ï¿½.ï¿½uï¿½r??(h,x){x&?&(j(h));?(x&??x&?"???"ï¿½*^?o&&h&&h.__zev?)ï¿½?v;??L??.rï¿½?ï¿½(??;ï¿½.ï¿½();9??.u???ï¿½ï¿½(,"u?[",{z{ï¿½zï¿½??:!ï¿½?ï¿½nx:h});?(x&?&"???"!ï¿½*^?o)~?(????ï¿½.t(,I~?*'(x){ï¿½?v[x];}.n)???i);ï¿½?q;};ï¿½.?uï¿½r??(h){???&&h.__zev?~?*'(){ï¿½?v["u?["];}:~?*'(){ï¿½?v;};ï¿½.t(x,"h",x);ï¿½?w;};ï¿½.?uï¿½r??(h,x){ï¿½?s???ï¿½?-??x.?ï¿½??ï¿½ï¿½.qï¿½e(h,x);};ï¿½.ï¿½"";ï¿½?z((ï¿½.?));})([~?*'(ï¿½,ï¿½,A){~?*'h(){ï¿½?.uï¿½Z-ï¿½?ï¿½.ï¿½?j?.??);}~?*'x(l){?ï¿½r(l){qï¿½ï¿½?y.ï¿½?qï¿½?ï¿½?y.?
?;qï¿½?ï¿½?y.?ï¿½ï¿½?;qï¿½?ï¿½?y.?e?;qï¿½??y.?ï¿½??;qï¿½??y.ï¿½)?ï¿½??y.?X+{;qï¿½??y.?
?;qï¿½??nï¿½y.??+^;qï¿½??nï¿½y.nV??;qï¿½?ï¿½?y.n[?;qï¿½?ï¿½?y.?ï¿½??;qï¿½?ï¿½?y.ï¿½?ï¿½?ï¿½?y.??];qï¿½?ï¿½?y.ï¿½?;qï¿½?ï¿½?y.????qï¿½?ï¿½?y.?ï¿½?;qï¿½?ï¿½?y.v
?;qï¿½?ï¿½?y.ï¿½ï¿½x;qï¿½?ï¿½?y.??ï¿½$;qï¿½?ï¿½?}yï¿½
ï¿½^.??()%???.n[?:?.ï¿½?ï¿½?ï¿½?}yï¿½
ï¿½^.??()%???.n[?:?.?ï¿½?;qï¿½?ï¿½?}yï¿½
ï¿½^.??()%???.?ï¿½?:?.n[?;qï¿½?ï¿½?}yï¿½
ï¿½^.??()%???.ï¿½?.?ï¿½?;qï¿½?ï¿½?}yï¿½
ï¿½^.??()%???.?ï¿½?:?.ï¿½?ï¿½?ï¿½?"#wm_}";qï¿½?ï¿½?"#??";qï¿½?ï¿½?"#}yt?;qï¿½?ï¿½?"#}yt?;qï¿½?ï¿½?"#???;qï¿½?ï¿½?"#}?w?;qï¿½?ï¿½?"#"o??.~Z(ï¿½(1ï¿½a.ï¿½ï¿½?()*?u?).ï¿½?ï¿½ï¿½)?);u?[:ï¿½?"#}y4?;}}~?*'(l){??.?ï¿½ï¿½?'?.???.ï¿½ï¿½x:?.nV??;ï¿½?p.?ï¿½ï¿½?'?.u???ï¿½?t:L(l,t,?.n??);}~?*'Il){?ï¿½r(l){qï¿½"mï¿½5":qï¿½"m?u":qï¿½"v?ï¿½":qï¿½"uï¿½5":qï¿½"?ï¿½5":ï¿½?y.n[?;qï¿½"mï¿½6":qï¿½"m?v":qï¿½"v?ï¿½":qï¿½"uï¿½6":qï¿½"?ï¿½6":ï¿½?y.?ï¿½??;qï¿½"mï¿½7":qï¿½"m?w":qï¿½"v?ï¿½":qï¿½"uï¿½7":qï¿½"?ï¿½7":ï¿½?y.ï¿½?ï¿½"mï¿½8":qï¿½"m?x":qï¿½"v??":qï¿½"uï¿½8":qï¿½"?ï¿½8":ï¿½?y.ï¿½)?ï¿½"v?ï¿½":qï¿½"v??":qï¿½"uï¿½4":qï¿½"?ï¿½4":ï¿½?y.?e?;qï¿½"ï¿½??qï¿½"n?":ï¿½?(?.?ZjP%ï¿½ï¿½),?.nV??;qï¿½"y?":ï¿½?t(?.ï¿½ï¿½x,?.??ï¿½$,?);qï¿½"v?o":ï¿½?y.?;qï¿½"??:ï¿½?y.?ï¿½??;u?[:ï¿½?y.ï¿½ï¿½x;}}~?*'?(l,?){.?ï¿½ï¿½?'?.??((l.~)eJ?x(?)),(l.????Wï¿½)):((l.~)eJ?z),(l.????W?(?)));}~?*'(l,?[l].r?hï¿½){??[l];ï¿½?{ï¿½)?:ï¿½?w^ll,lp.I?p.??:ï¿½?:ï¿½?,?p.?,?ï¿½?,?p.ï¿½?,?r?hï¿½:?,ï¿½?:{???:{???()>???Z+:()>"#QE",???()>ï¿½??:{??)>?,???:{??)>?}},}ï¿½"?:p.}ï¿½"?,?ï¿½x:p.?ï¿½x,?ï¿½?:p.?ï¿½?,ï¿½?x:Ü¶( ?:ï¿½?ï¿½?ï¿½:p.?ï¿½?ï¿½,??{??:p.????,??????)>??(p.????).~)e(ï¿½,??Zï¿½:()>{}},ï¿½??p.ï¿½????(l>{??(l.?w^i;t.ï¿½?,?t.ï¿½?,?.?,?*p.?,?l.?,?ï¿½-?;t.?,?.?,?l.?,?ï¿½-?;t.jx%y.jx%x;t.???.???t.v*???.v*???;t.}ï¿½"?.v*????x%x;ï¿½?w;})};}~?*'D(t,?,p,?!?{??();s?ï¿½ï¿½?'?.n??ï¿½??y;ï¿½?x?((h*?,t>-l.ï¿½?zu?v?h-p&&t<l.ï¿½?zu?v?k??>-l.ï¿½?zq?my-p&&?<l.ï¿½?zq?my??):t>-p&&t<l.ï¿½?zu?v?k??>-p&&?<l.ï¿½?zq?my??;}~?*'?(l,?,s){??ï¿½^.??(),i,?ï¿½?{ï¿½?>{l!p&&((?,(m),(t6ï¿½x.??()));},??)>{??
ï¿½^.??()-t)yWï¿½;ï¿½?(j<???l-?*1ï¿½a.ï¿½?(?u,?):l);}};}~?*'(l){ï¿½?{???.ï¿½?Ku\??"");???%?w""):???%?(w"");???(t);t"Ry'?	??;??";???.?w^h("\A");???.r?hï¿½!???L(x(.r?hï¿½),.???.??Z+(),.???.???)):L(?.?ï¿½?,.???.??Z+(),.???.???));?(?,??);?(-?ï¿½?y?v.?X?x(ï¿½p)||t;?.?X?x(s?r.?w^h("\A");?(-?ï¿½?y?j.?X?x(ï¿½p)||h;?.?X?x(s???.rï¿½
?^(ï¿½yny;?.?X?x(?;??ï¿½a.~Z(ï¿½(?.???);?(?|)ï¿½?y?p[];~?(??;l<|;o???.rï¿½
?^(?l),~.rï¿½
?^(?o?j.rï¿½
?^(?o?p.ï¿½?"#"o((t<<?|(|<<??).ï¿½?ï¿½ï¿½)?).?ï¿½Rï¿½??,ï¿½);}ï¿½?{?ï¿½?:t,j?:h,r??:{ï¿½?p[ï¿½,?
?:p[?,?ï¿½ï¿½?:p[?,?e?:p[?,?ï¿½??:p[?ï¿½)?[??X+{:p[??
?:p[???+^:p[??V??:p[??[?:p[?,?ï¿½??:p[?,ï¿½?[?,??]:p[?,ï¿½?:p[?,????p[?,?ï¿½?:p[?,v
?:p[?,ï¿½ï¿½x:p[?,??ï¿½$:p[?,?ï¿½^ï¿½??7:|,n??:?}};}qï¿½\?(?){}ï¿½?{??#?.???l);?("???"!ï¿½*^??)ï¿½?y???ï¿½?:p"Ry'?	??,j?:h"",r??:|}t;~?(??[|.ï¿½?|.?
?,|.?ï¿½ï¿½?,|.?e?,|.?ï¿½??,|.ï¿½)?.?X+{,|.?
?,|.??+^,|.nV??,|.n[?,|.?ï¿½??,|.ï¿½?.??],|.ï¿½?,|.????|.?ï¿½?,|.v
?,|.ï¿½ï¿½x,|.??ï¿½$])?(!l.?ï¿½\?(u^#[ï¿½o-|-]{?u))ï¿½?y?ï¿½?{??8:!ï¿½?ï¿½?:("???"ï¿½*^??&&p)||"Ry'?	??,j?:("???"ï¿½*^?o&&h)||"",r??:|};}qï¿½\?(?){}ï¿½?y?}~?*'?(l){??ï¿½?:t"Ry'?	??,j?:p"",r??:?}l;({n??:l}?);m?\A"u?\A"u+k?x.~?&
ï¿½
?^(?l??:ï¿½l?ï¿½1ï¿½a.~Z(ï¿½(?*l));~?(??[?.ï¿½??.?
?,?.?ï¿½ï¿½?,?.?e?,?.?ï¿½??,?.ï¿½)?.?X+{,?.?
?,?.??+^,?.nV??,?.n[?,?.?ï¿½??,?.ï¿½?.??],?.ï¿½?,?.?????.?ï¿½?,?.v
?,?.ï¿½ï¿½x,?.??ï¿½$]){?????.?X?x(?,?;o?)??&
ï¿½
?^(p>>?(p>>???,p&?);}ï¿½?v?l).ï¿½?Ky?");}~?*'?(){?(!?){?!ï¿½?(l.??ï¿½{????.??n?r;t.ï¿½???Ylrï¿½???t.ï¿½???Ylrï¿½??():t.?G??[??oy?.?G??[??oy?:t.???ï¿½????T?ï¿½?t.???ï¿½????T?ï¿½?):t.A????[??oy?t.A????[??oy?;wï¿½v?.?ï¿½?hï¿½.??uï¿½h?||(ï¿½?.?ï¿½\???&&ï¿½?.?ï¿½\???("(v+)?ï¿½-??^:~??z),(v+)?ï¿½-??^:??uï¿½h?),(v+)?ï¿½-??^:?)?-?)").?ï¿½\??l.??T&!t&&`.ï¿½?{ï¿½?"??????ï¿½?z{hj\?ï¿½i?^~??z!",???:?jZah:Ü¶)?:
ï¿½^.??()});}.???.??+hï¿½?("??Rrï¿½?????x");.?ï¿½ï¿½?'?.ï¿½?z{!??u??.???ï¿½!("??Rrï¿½?????x").r???.???.??+hï¿½?("??Ejw2");.?ï¿½ï¿½?'?.ï¿½?ï¿½ï¿½!v?.?????ï¿½!("??Mï¿½u"??).r???.???.??+hï¿½?("??Mï¿½u"??);.?ï¿½ï¿½?'?.?ï¿½???gï¿½?.???ï¿½!("??O?)?).r???.???.??+hï¿½?("??O?)?);.?ï¿½ï¿½?'?.}ï¿½?	db?{!v?.?????ï¿½!("??Ejw2").r???.???.??+hï¿½?("??R?'?t");.?ï¿½ï¿½?'?.????ï¿½Kr?.???ï¿½!("??R?'?t").r???.???.??+hï¿½?("??Oï¿½???");.??.???????gï¿½?.???ï¿½!("??Oï¿½???").r???.???.??+hï¿½?("??@??z??");l.j????gï¿½?.???ï¿½!("??@??z??").r???.???.??+hï¿½?("??A?ï¿½^ï¿½");l.??T&.???.??+hï¿½?("??L???x");?ï¿½r(v?.?????ï¿½!("??A?ï¿½^ï¿½").?ï¿½nx){qï¿½"???:.?ï¿½ï¿½?'?.u???ï¿½.?ï¿½ï¿½?'?.???nï¿½??;qï¿½"u??.?ï¿½ï¿½?'?.u???ï¿½!ï¿½.?ï¿½ï¿½?'?.???nï¿½??;qï¿½"?Vï¿½ï¿½":.?ï¿½ï¿½?'?.u???ï¿½!?.?ï¿½ï¿½?'?.??ï¿½nï¿½??;qï¿½"??:.?ï¿½ï¿½?'?.u???ï¿½.?ï¿½ï¿½?'?.??ï¿½}.???.??+hï¿½?("??B?Z+ï¿½");u??gï¿½?.???ï¿½!("??B?Z+ï¿½").?ï¿½nx;?("r?"t){??(v?.?????ï¿½!("??B??ï¿½").?ï¿½nx);l&&((?.r?f.r??),l.??8&&(v?.?????ï¿½!("??B??ï¿½").?ï¿½nz(l)));}.???.??+hï¿½?("??B??ï¿½");ï¿½?.????
?:(-ï¿½??t]||?;u??gï¿½?.???ï¿½!("ï¿½V?z?Z???;.???.??+hï¿½?("ï¿½V?z?Z???;l.ï¿½V?z?Z??ï¿½?t.?ï¿½nx;u??gï¿½?.???ï¿½!("ï¿½V?z????);.???.??+hï¿½?("ï¿½V?z????);l.ï¿½V?z??????ï¿½nx;l.ï¿½?zu?v??whA.?y?h?ï¿½;l.ï¿½?zq?mï¿½?.?y?w??;v?.?????ï¿½!("???g?j??ï¿½").??x.ï¿½?"-?G;v?.?????ï¿½!("?ï¿½?ï¿½?Zï¿½ï¿½??.??x.?????;?(!l.??$z){t"??ï¿½:"??ï¿½*'.ï¿½?-????-???${?l.ï¿½?.ï¿½?||t)?"??ï¿½":"??"}:y${l.ï¿½?.j}?j????`,p()>.ï¿½?#?(h).ï¿½ï¿½(l>{1;}).qï¿½\?(l>{r??.z??l);ï¿½?g??(()>p(),?;});p();l.??$z?();}P.?xï¿½(l.???v?.?????ï¿½!("??L???x").?ï¿½nx:"u??",l.??$z);ï¿½???ï¿½(()>???j?l.??$z.rg.????()),?y?;v?.?????ï¿½!("?ï¿½?	ï¿½?).~?.ï¿½();l.jxï¿½.?)ï¿½?||?);l.?ï¿½ï¿½?!ï¿½}}~?*'(t,h){?.~)eJ?y;?.?ZjP%ï¿½?;?.~)eE?ï¿½ï¿½l.ï¿½?zu?v?l.ï¿½?zq?m);?.?ZjP%ï¿½ï¿½;}~?*'(l,h,p,?,?!?{???.????(l,h,p,?):?.~)eE?l,h,p,?);}~?*'?(l,h,p,?!?{?.m?oï¿½?();?.jï¿½(l,h,p,ï¿½?1ï¿½a.<,!?;???.???():?.~)e();}~?*'?(l,h,p,?){?.m?oï¿½?();?.?)?(1ï¿½a.ï¿½?ï¿½t(l)u.?ï¿½a.ï¿½?ï¿½t(h)u.??.?)?(1ï¿½a.ï¿½?ï¿½t(p)u.?ï¿½a.ï¿½?ï¿½t(?)u.??.???();}~?*'((l,h,p,?,?){?.m?oï¿½?();?.?)?(l,p);?.?)?(h,p);?.?)?'m?;?.????Wï¿½;?.???();}???ï¿½?)?\ï¿½8ï¿½?ï¿½??~?*'A(l,h,p,?,?){?(!(ï¿½??)){???.ï¿½?.???.???);t*t;?.?ZjP%ï¿½?;???.?,??;?[p.?w^g;?(o.?,?*?.ï¿½?,??(p.vï¿½ï¿½ï¿½w???{??.ï¿½?.??.??,?ï¿½?.???.??;?(??||??{???*???.?ZjP%ï¿½ï¿½*?*t;.?ï¿½ï¿½?'?.????ï¿½?(((l-|,o?,??ï¿½ï¿½?'?.m????.nV??),?(((l-|,l-?*?,s?,??.?
?),(?.?ZjP%ï¿½*ï¿½?((l-|,l-?*?p-??,?.ï¿½?):((l-|,l-?*?,p,?.?
?)):(((l-|,o?,?.?ï¿½ï¿½?'?.m????.nV??),((l-|,l-?*?,p,??.?
?),?&((?.?ZjP%ï¿½*ï¿½?.??,((l-|,l-?*?p,??.ï¿½?));?.?ZjP%ï¿½?;}}yu???????ï¿½ï¿½?Z%r?V??"){p.?ï¿½?ï¿½Vï¿½x&&p.?! .ï¿½V?z??&&(??.ï¿½?.ï¿½???(p.ï¿½?.ï¿½???(),ï¿½()]),(u.?ï¿½?),(~.??+^),!?&((u.?X?x(?),t.??&&(}(?.?e?,|,ï¿½?))),(?.?ZjP%ï¿½ï¿½),p.ï¿½?.ï¿½???].vï¿½ï¿½(t,l,h-?-??|,"q?"),p.ï¿½?.ï¿½???].vï¿½ï¿½(.?ï¿½????f?(p.ï¿½?x,!ï¿½,l,h-?-???"q?"),(?.?ZjP%ï¿½ï¿½));}z[{p.?ï¿½?ï¿½Vï¿½x&&p.?! .ï¿½V?z??&&(??.ï¿½?.ï¿½???(p.ï¿½?.ï¿½???(),ï¿½()]),(u.?ï¿½?),(~.??+^),???gï¿½?)?\ï¿½8ï¿½?ï¿½??(u.?X?x(?),t.??&&(}(?.?e?,|,ï¿½?))),(?.?ZjP%ï¿½ï¿½),p.ï¿½?.ï¿½???].vï¿½ï¿½(t,l,h-?-??|,"q?"),p.ï¿½?.ï¿½???].vï¿½ï¿½(.?ï¿½????f?(p.ï¿½?x,!ï¿½,l,h-?-???"q?"),(?.?ZjP%ï¿½ï¿½));}}}~?*'?){l.jxï¿½.?)ï¿½???	db?qkjg(?;?ï¿½?ï¿½?(??'ï¿½-?ï¿½?ï¿½)y};?.?)??"ï¿½?ï¿½t";?.?)??ï¿½"ï¿½?ï¿½t";l.?ï¿½?J??&&!l.v+?y??&&((l.ï¿½)?
ï¿½^.??()-<-@),?<l.ï¿½)?-&&((ï¿½.ï¿½)?),($.ï¿½?ï¿½b??,(?ï¿½),($.??Zï¿½??,(?ï¿½)),($.??.ï¿½)?-?ï¿½)?));l.?ï¿½?J??&&ï¿½0.???E(?()):l.v+?y??||I();l.v'?&&M();l.v+?y??&&Q();(l.v'?||l.v+?y??)&&T.vï¿½ï¿½	ï¿½??);}9??.?ï¿½nz||(9??.?ï¿½nz????(l){ï¿½?s?????l).??(t>l[t]);});9??.z{k??(9??.z{k??w-??(l){ï¿½?s?????l).??(t>[t,l[t]]);});??(?,(?,{nZ?A??$:U}A(?,W(?ï¿½?.uï¿½Z-ï¿½??ï¿½v?.uï¿½Z-ï¿½?ï¿½||[];h("?",???));h("r??","P-?9???);??!?ï¿½ï¿½?U.?(!ï¿½()>{y?hr?.???ï¿½!("ï¿½?ï¿½?-}ï¿½emï¿½$").??x.v+)?ï¿½"nZ?";?!ï¿½h("z?ï¿½?","?_i???,{z?ï¿½?_qï¿½^???????u???",??_?{^ï¿½ï¿½-??:!ï¿½);}).?(!?()>{h("z?ï¿½?","?_i???,{z?ï¿½?_qï¿½^???????u???",??_?{^ï¿½ï¿½-??:!ï¿½);});u*(ï¿½?.???+hï¿½?&&ï¿½?.???+hï¿½?.i?ï¿½?"j*"ï¿½?.???+hï¿½?.i?ï¿½?.?1ï¿½a.ï¿½ï¿½?())?(j*mj.rg.v+)?ï¿½.ï¿½?~?*'(){j*C??k$?.v+)?ï¿½("j??-?_?ï¿½?")}),ï¿½?.i?ï¿½o?x?x"j*"):((i??(?Wï¿½?whA.i??(?W||[]).ï¿½?{}),ï¿½?.i?ï¿½o?x?x"?? ?");*?oï¿½{?ï¿½ï¿½?'?:{ï¿½?z{!??u:!?n??ï¿½??y:?????)???ï¿½^ï¿½(n?:?r?ï¿½z{ï¿½*'I?x:??,?{??E?:!ï¿½u???ï¿½:!?}ï¿½?	db?{:!ï¿½r?hï¿½:"???,ï¿½?ï¿½ï¿½:!ï¿½?ï¿½ï¿½:!?~????,?:?????ï¿½:!???!?,??{^r?1ï¿½R?)e-?:???:{??:?????:!?};l.r?? ;??l,h,s.?{?(?ï¿½?v;?(?ï¿½?v;??-p;n?ï¿½ï¿½?(l.?X?x(?,?;j?ï¿½ï¿½?(h.?X?x(?,?;ï¿½?("#"o((((l&?o?4)*w(h&?o?4)*p)&?o?4)|(((l&?ï¿½*w(h&?ï¿½*p)&?ï¿½|(((l&?)*w(h&?)*p)&?)).ï¿½?ï¿½ï¿½)?).?ï¿½Rï¿½??,"ï¿½));};???];l.rX??ï¿½?()>{??()>{~?*'l(){???,w,k,?;???ï¿½?{ï¿½?p,?,?,?>{m;v;j;?;|!ï¿½},r??:p>{??ï¿½a.ï¿½?ï¿½t(p.il);p??.ï¿½?ï¿½t(p.?t);ï¿½?w&&ï¿½?&&ï¿½p&&?<h&&p<?;},?'^:()>{|!?}};}ï¿½?w>{??];~?(??;h<p;k?.ï¿½?l());ï¿½?{ï¿½V?x:(l,...p)>{?(l>t.??)ï¿½?r??.z??l,t),??"N???hï¿½??ï¿½%??nW???u???!"));t[l].ï¿½?..p);},?'^:()>{~?(???)l.?'^();},r??:l>t.~)?w^Ip>p.r??(l))};};})();ï¿½?{??:l(?,?ï¿½+i?l(?,???:l(?,?Hï¿½Rï¿½+i?:l(?};})();l.????!?r????ï¿½,{r???ï¿½?(l){ï¿½ï¿½.uï¿½Z-?;ï¿½ï¿½.zWï¿½z{l{};}??Zï¿½(l,k){???[k?~?(???;t<p;w???.zWï¿½z{l[l[k?;q[k?~?(w;t<p;w???[k?u.?X?x(h,k?.uï¿½Z-?);k?.uï¿½Z-?;ï¿½ï¿½.zWï¿½z{l[p]t;}ï¿½?v;}z{k??{ï¿½?s???z{k??ï¿½.zWï¿½z{l).??(([l,h])>({?:u,uï¿½Z:h}));}},Yï¿½%j?r???ï¿½?(ont){ï¿½ï¿½.???u;ï¿½ï¿½.??{};ï¿½ï¿½.?ï¿½-R?Zï¿½?.??();}??Zï¿½(l){ï¿½ï¿½.?ï¿½-R?Zï¿½?.??();~?(??,p]???-.z{k??ï¿½.??))p.???((p.?W\.??),(p.??'?Y)):u??.??[l];~?(??o)ï¿½ï¿½.??[t.?]?(ï¿½ï¿½.??[t.?].??):(ï¿½ï¿½.??[t.?]{?W:????:t});}??{??ï¿½a.?)(?(
ï¿½^.??()-ï¿½ï¿½.?ï¿½-R?Zï¿½)??ï¿½.???t),k-l;ï¿½?s????ï¿½nz(ï¿½ï¿½.??).??(({?W:p,??:t})>t?p?{ï¿½*^:t.ï¿½*^,?:t.?,ll*t.G*p.I?l*t.?*p.?r?hï¿½:t.r?hï¿½,?,?l*t.?,?*p.?,?jZah:?:{ï¿½*^:t.ï¿½*^,?:t.?,lt.I?t.?r?hï¿½:t.r?hï¿½,?,?t.?,?jZah:l}:{ï¿½*^:p.ï¿½*^,?:p.?,lp.I?p.?r?hï¿½:p.r?hï¿½,?,?p.?,?jZah:h});}},]ï¿½%j?r???ï¿½?(l){ï¿½ï¿½.ï¿½?z(ï¿½?;ï¿½ï¿½.??Zï¿½(l);}??Zï¿½(l){ï¿½ï¿½.?ï¿½?l.?ï¿½?;ï¿½ï¿½.m??m?;ï¿½ï¿½.r?hï¿½.r?hï¿½;ï¿½ï¿½.?w^U?w^Lï¿½ï¿½.ï¿½?x.ï¿½?.ï¿½?x);ï¿½ï¿½.?W!?}ï¿½??){??[ï¿½ï¿½.?w^g;ï¿½?{?fï¿½x:(ï¿½ï¿½.?w^Iï¿½ï¿½.r?hï¿½),ï¿½?"ï¿½*':l.ï¿½?"ï¿½*',m??Z+:x(ï¿½ï¿½.m?),?ï¿½?:ï¿½ï¿½.?ï¿½??ï¿½ï¿½.?ï¿½?o"-"u.?ï¿½?:l.?ï¿½?,ï¿½?x:ï¿½ï¿½.ï¿½?x.??};}},aï¿½%j?r???ï¿½?(){ï¿½ï¿½.z{k??;}??{??],k;~?(????-.?ï¿½nz(ï¿½ï¿½.z{k??{??.ï¿½??);l.ï¿½?t);t.ï¿½?x>h&&(i.ï¿½?x);}l.???l,h)>h.ï¿½?x-l.ï¿½?x);ï¿½?{uï¿½Z:l,?ï¿½:h};}??Zï¿½(l){l.???l,p)>p.ï¿½?x-l.ï¿½?x);~?(????-.?ï¿½nz(ï¿½ï¿½.z{k??l.?W!ï¿½~?(??o)ï¿½ï¿½.z{k??.?]?ï¿½ï¿½.z{k??.?].??Zï¿½(h):(ï¿½ï¿½.z{k??.?]??(h));~?(??,p]???-.z{k??ï¿½.z{k??p.?W&&u??.z{k??];}};???[],ï¿½?ï¿½(?	ï¿½?ï¿½(?,
ï¿½?ï¿½(?ï¿½?f(?),ï¿½??(),?ï¿½,`(l.??ï¿½[]),$(l.????ï¿½^??[],??:Ü­?ï¿½b?:ï¿½??Zï¿½?:ï¿½?ï¿½-??:Ü­??ï¿½:ï¿½?ï¿½-??b?:ï¿½),ï¿½,?ï¿½,?ï¿½,d[["???], {??ï¿½Mjgï¿½:l>{?ï¿½r(l){qï¿½?ï¿½?"?r
ï¿½??;1ï¿½Gyï¿½m?;??y??ï¿½j[a;??????;?ï¿½??;x"???ï¿½b?;2?????t;J?????ï¿½b?;J??ï¿½?ï¿½"ï¿½".??b?(";");qï¿½?ï¿½?"?r
ï¿½??;1ï¿½Gyï¿½m?;?'y*^y;?'xw????'x?ï¿½z?ï¿½*';?'x6ï¿½j;E?	??2?????t;J?????ï¿½b?;J??ï¿½?ï¿½"ï¿½".??b?(";");qï¿½?ï¿½?"?r
ï¿½??;1ï¿½Gyï¿½m?;?'y*^y;?'xw????'x?ï¿½z?ï¿½*';?'x6ï¿½j;1ï¿½Cï¿½???ï¿½?;2?????t;J?????ï¿½b?;J??ï¿½?ï¿½"ï¿½".??b?(";");qï¿½??"?r
ï¿½??;1ï¿½Gyï¿½m?;Kï¿½?*^y;Kï¿½ï¿½w???Kï¿½ï¿½?ï¿½z?ï¿½*';Kï¿½ï¿½6ï¿½j;E?;2?????t;J?????ï¿½b?;J??ï¿½?ï¿½"ï¿½".??b?(";");qï¿½??"?r
ï¿½??;1ï¿½Gyï¿½m?;>V?zgï¿½ï¿½*^y;Nï¿½ï¿½?;Nï¿½ï¿½=?ï¿½ï¿½??;Nï¿½ï¿½
ï¿½??;E?;2?????t;J?????ï¿½b?;J??ï¿½?ï¿½"ï¿½".??b?(";");qï¿½??"?r
ï¿½??;1ï¿½Gyï¿½m?;Y?tï¿½y??q?[a;Y?s????;Y?p??;E?;2?????t;J?????ï¿½b?;J??ï¿½?ï¿½"ï¿½".??b?(";");u?[:ï¿½?"?r
ï¿½??;1ï¿½Gyï¿½m?;??y??ï¿½j[a;??????;?ï¿½??;E?;2?????t;J?????ï¿½b?;J??ï¿½?ï¿½"ï¿½".??b?(";");}},?H??:[{jj.?:ï¿½r?hï¿½:"ï¿½?",q?:????:?,{jj.?:ï¿½r?hï¿½:"ï¿½)?q?:????:?,{jj.?:ï¿½r?hï¿½:"n[?",q?:????:?,{jj.?:ï¿½r?hï¿½:"?
?",q?:????:?,{jj.?:ï¿½r?hï¿½:"ï¿½?q?:????:?,{jj.?:ï¿½r?hï¿½:"?e?",q?:????:?,{jj.?:ï¿½r?hï¿½:"?ï¿½??",q?:????:?,{jj.?:ï¿½r?hï¿½:"ï¿½?,q?:????:?,{jj.?:ï¿½r?hï¿½:"??]",q?:????:?,{jj.?:ï¿½r?hï¿½:"?ï¿½ï¿½?",q?:????:?],ï¿½?ï¿½ï¿½:ï¿½?ï¿½+i?:[],ï¿½V?z??:-?__ï¿½:(()>{??,k,s,?(ï¿½?;ï¿½?{ï¿½???t>{t?(?.ï¿½?),h>?.??&&(i?):((o),(i?,(?(ï¿½?));},??Zï¿½:()>{l??.q????a.ï¿½?(s?.??*s?|ï¿½?(?.??>k?k?s?[?(?.??<h){???-?h-1ï¿½a.q????a.ï¿½?(w?.??*w?|ï¿½p--;}},???+z?()>l?1ï¿½a.?)(?1ï¿½a.?ï¿½(ï¿½(?.??-h)y)):ï¿½????()>?.??,????:()>p};})(),ï¿½*^:ï¿½~?:ï¿½r?hï¿½:ï¿½iA?:ï¿½???ï¿½;l.rW?ï¿½J`ï¿½ï¿½^ï¿½()>{ .?ï¿½+i?[];};???)>1ï¿½a.?ï¿½(l.ï¿½?zu?v??ï¿½?ï¿½,(l.ï¿½?zq?my.ï¿½?ï¿½y??);l.qï¿½?
?!?l.qï¿½?)e!?l.??"";l.ï¿½)?ï¿½???)?.???+hï¿½?||{};4.?ï¿½,??&-??ï¿½,??ï¿½?ï¿½ï¿½)?.?w^h("$")&&((4.?ï¿½,??"),u??ï¿½,??;??.?ï¿½,??|??Aï¿½??Zï¿½??(4.ï¿½???Wï¿½x),?n?ï¿½ï¿½.?U4()?(??ï¿½:,e()>{???.ï¿½?ï¿½.~)mz(l>??l.?+"nW&&l.?+"nW<&&l.ï¿½ï¿½?z);??w?r,p[];~?(??o)([,h]t.r?^.??b?("-")),(h??.iï¿½(((((l.r?^Mï¿½??[h][?-l.ï¿½)???%?u~)%?-?),h<x?((p[t]),(y)):i&&p.ï¿½?t);ï¿½?w[1ï¿½a.~Z(ï¿½(1ï¿½a.ï¿½ï¿½?()*p.??)];};l.ï¿½?(h>{h.??ï¿½Tï¿½("#")&&(i.?X?x(?);??t,p]h.?ï¿½\?(u^([h-?d]o)([ï¿½??$u)||[];?(t)l.???ï¿½??ï¿½z[{???;~?(???.??b?("&")){?????b?("");k.???();???ï¿½("")||!ï¿½?[h]??.???z{.???ï¿½!("ï¿½V?z????);}?.ï¿½??j?&((?.ï¿½??j?,?.?w%??(";")&&((j.??b?(";")),(?.???()),(?.???z{.???ï¿½!("ï¿½V?z????))),(?.??-?));ï¿½?y?}ï¿½?v.ï¿½?ï¿½.~)?l>l.??||??})(??ï¿½*'.?ï¿½!)||l.ï¿½?ï¿½.~)?l>l.???ï¿½?2?^)||e();??>{???.r?^Mï¿½??;??],?[];???~?(???)~?(??o)?(?.??rï¿½(?)){ï¿½???j??({},?);?("???.w)?'){????ï¿½(ï¿½?}.?X?x(?,ï¿½?t.ï¿½?.rï¿½(ï¿½.ï¿½?)??K)u.?X?x(?;ï¿½?z[?("??"?.w)?'){?.rï¿½(ï¿½?|[];~?(??;l<?o????.rï¿½(ï¿½??("t"x)|.ï¿½?"-");z[?("ï¿½"x)|.ï¿½?"");z[{{??.?X?x(?,ï¿½?|.ï¿½?l.rï¿½(ï¿½.ï¿½?)??K)u.?X?x(?);ï¿½?}t.ï¿½?.??ï¿½("");}?.ï¿½?&&?.ï¿½??.ï¿½?);p.ï¿½?t);nï¿½??;}?(???)ï¿½?"Ry'?	";i[p.??-?;h.zw&&(h.ï¿½?.zw);~?(k;k?.??;k?[h].u?&&!p[k?u?&&((?[h]),(p[h]p[k?,(p[k?),k?q.~)mz(({?:l})>!?.?w%??(l));ï¿½?w.??(l>l.ï¿½).??ï¿½("");},iï¿½hr?.???ï¿½!("ï¿½?????").????u.????u,iï¿½hr?.???ï¿½!("ï¿½?????"),y;~?(??o.ï¿½?ï¿½){?((??.?+"nW||h.?+"nW>)&&l.ï¿½?!h)r???;??,p,?]h.r?^.??b?("-"),???gï¿½?.rï¿½?ï¿½?gï¿½?("ï¿½");?.j?^?ï¿½?W(v?.??rï¿½?ï¿½?gï¿½?("ï¿½")).ï¿½???[.r?^Mï¿½?ï¿½[t];?.j?^?ï¿½?W(v?.??rï¿½?ï¿½?gï¿½?("ï¿½")).ï¿½???[.r?^Mï¿½??[p][ï¿½;?.j?^?ï¿½?W(v?.??rï¿½?ï¿½?gï¿½?("ï¿½")).ï¿½???$h(?);h.}?ï¿½?&&?.rVï¿½ï¿½?ï¿½?.i?"}?ï¿½?");?.?w%??)>{y.rVï¿½ï¿½?ï¿½?.ï¿½?("ï¿½??");yï¿½;y.rVï¿½ï¿½?ï¿½?.i?"ï¿½??");l.ï¿½?ï¿½;l.???ï¿½?;4.?ï¿½?2?^h.?;??ï¿½*'.?ï¿½!"#"u.?;i.ï¿½??T??.?????i.ï¿½??T??????i.ï¿½??T??.?????&(i.ï¿½??T??????;};i.j?^?ï¿½?W(?);l.ï¿½?ï¿½&&((yï¿½),y.rVï¿½ï¿½?ï¿½?.i?"ï¿½??"),ï¿½?g??(()>{i.ï¿½??T??????}));}??(()>{???i??gï¿½?.???ï¿½!("???g?)bv)?ï¿½??,q??gï¿½?.???ï¿½!("??b?p+ï¿½?"),???gï¿½?.???ï¿½!("?'ï¿½:?b?t?"),???gï¿½?.?????Z?U?("?X?zï¿½?ï¿½")[ï¿½,??gï¿½?.?????Z?U?("?X?z"),|()>{p.??x.ï¿½ï¿½ï¿½ï¿½u+?.??x.A??j{????"ï¿½ï¿½ï¿½?Vï¿½x(?,-?)ï¿½?Zï¿½(??)":"ï¿½?Zï¿½(-??)";?.?y?7ï¿½ï¿½?"rZ,z?m???"?'ï¿½??b?{";l??.rVï¿½ï¿½?ï¿½?.i?"?X?y"):?.rVï¿½ï¿½?ï¿½?.ï¿½?("?X?y");?ï¿½.??x.??????ï¿½???.??x.???????ï¿½};h.?w%??)>{l!l;|();};ï¿½?()>{l||((l!ï¿½,|());};})(),ï¿½ï¿½hr?.???ï¿½!("?ï¿½\??z"),)(l,h)>{???.???();?(p){q.?ï¿½\?(u^([ -e-?o[ -e-?)\ï¿½*\[([ï¿½??o)\]\ï¿½*(.o)?$u)||[p,p,??;?????{R?Zï¿½:"??Zï¿½",?ï¿½:"??Zï¿½",>?e:"ï¿½?e","?ï¿½?u%?":"z?ï¿½?-ï¿½?e","ï¿½???^>?e":"z?ï¿½?-ï¿½?e",?ï¿½?:"z?ï¿½?",ï¿½???^:"z?ï¿½?","ï¿½Z?u??x":"mï¿½Z?o??Zï¿½","ï¿½Z?u??x7ï¿½j)l":"mï¿½Z??,ï¿½Z??"mï¿½Z??,=ï¿½\?:"?ï¿½\?"}[p[?]:??u??gï¿½?.rï¿½?ï¿½?gï¿½?("v+");?&&t.rVï¿½ï¿½?ï¿½?.i??);??????rï¿½?ï¿½?gï¿½?("l"),|[p[?];?(p[?){?????p[?o"OM:??");?(x>
ï¿½^.??())ï¿½?;|.ï¿½?x.ï¿½??^
ï¿½^J??("u?[",{?ï¿½:"??'",???"???uï¿½:"??'",ï¿½)?f??"Q0"}));}p[?&&|.ï¿½?p[?);??y?t?.??ï¿½("-");t.j?^?ï¿½?W(?;?("ï¿½?e"?||"z?ï¿½?-ï¿½?e"?){??,?,?]l.???().??b?(",").??(l>l.ï¿½?ï¿½());???ï¿½??;??ï¿½ï¿½bï¿½"?,??ï¿½.q?(????.ï¿½?ï¿½())-
ï¿½^.??())y~???j?^?ï¿½?W(v?.??rï¿½?ï¿½?gï¿½?("n"));q??gï¿½?.rï¿½?ï¿½?gï¿½?("?f??");p.j?^?ï¿½?W(v?.??rï¿½?ï¿½??u(ï¿½??"rZ,?x"?"u?"??ï¿½"o(??"":"ï¿½"):"rZ,y"));???.??rï¿½?ï¿½?gï¿½?("h");,.?ï¿½?"?ï¿½??ï¿½:;";,.?y?7ï¿½?"?'ï¿½jYkz?ï¿½";?&&p.j?^?ï¿½?W(,);???.??rï¿½?ï¿½?gï¿½?("h");8.?ï¿½?"?ï¿½??ï¿½:;";8.?y?7ï¿½?"ï¿½?";8.??x.v+)?ï¿½"???;H&p.j?^?ï¿½?W(8);?j?^?ï¿½?W(p);t.j?^?ï¿½?W(v?.??rï¿½?ï¿½?gï¿½?("n"));??gï¿½?.rï¿½?ï¿½?gï¿½?("ï¿½ï¿½?);?rVï¿½ï¿½?z?"ï¿½?e-ï¿½ï¿½?:"ï¿½?e-?+-";q??gï¿½?.rï¿½?ï¿½?gï¿½?("ï¿½??);?(()>{??],p[],~wï¿½>?&?Kl>{???ï¿½.i???+-zwï¿½("ï¿½??",()>{?(!h){???.???x?'ï¿½ï¿½??(),}.???x?'ï¿½ï¿½??();ï¿½|.??|||.ï¿½?>p.n?m?o?.??|||.n?m?<p.ï¿½?-p.??||((h!ï¿½,l());}});}).ï¿½ï¿½(()>}?("??:yoï¿½-ï¿½.j??.?:????%?"u?"??ï¿½?).ï¿½ï¿½(l>l.??()).ï¿½ï¿½(l>{?(!l.?)ï¿½??">?ev?ï¿½??^t-!");q.??b?{;});,.?w%??)>{,.ï¿½?();??.??(l>????.ï¿½+ex,?).???l,h)>l-h),p"#?z#??s#?z??????}y6?}y4?.??b?("");~?(??o){??????.ï¿½+ex,?;?.rVï¿½ï¿½?x"r?ï¿½?";?.?y?t?Wï¿½<|?(y^?.ï¿½?bt(?o"<??ï¿½>?<???>":ï¿½|?|:"?";|??.~Z(ï¿½(((h.?w^h(|)u.?.??)*p.??);?.??x.r?hï¿½[|];}};8.?w%??)>{?.r???;?.?w!jx();?{??;8.??x.v+)?ï¿½"???;};????ï¿½?w>{??>(t?w"-":"")u?"??^"o(?"":"ï¿½"),ï¿½/?,???gï¿½?.rï¿½?ï¿½?gï¿½?("?ï¿½?");?.rVï¿½ï¿½?x"r???";???.??rï¿½?ï¿½?gï¿½?("?zn?");?.ï¿½ï¿½??-??.ï¿½*^?"ï¿½ï¿½bï¿½":"r???1";?.v+nW?!ï¿½H&(?.?ï¿½?"ï¿½ï¿½bï¿½-"u);|.ï¿½ï¿½(()>{???^t:l,??^ï¿½:|}p[?]||{??^t:!???^ï¿½:ï¿½;?.r???H&l&&((?),(8.??x.v+)?ï¿½"?yb?"));?.v+nW?ï¿½?;??-l;?.?w!jx()>{}?("??:yoï¿½-ï¿½.j??.?:????%?"u?"?ou"u?"u.r?????(?.r???:ï¿½;t?(?.??^Uï¿½ny(l)):(?.ï¿½+ey(l));H&?&&?!?&&?.r???((?.r???),?.?w!jx());?;8.??x.v+)?ï¿½"?yb?";};t?(?.??^Uï¿½ny(|)):(?.ï¿½+ey(|));});??t&&((???gï¿½?.rï¿½?ï¿½??u(t)),?.j?^?ï¿½?W(?));?.j?^?ï¿½?W(?);???.??rï¿½?ï¿½?gï¿½?("??ï¿½");?.rVï¿½ï¿½?{?"ï¿½ï¿½bï¿½":"r??fï¿½?";?.j?^?ï¿½?W(?);l.ï¿½??);ï¿½?y;};})();~?(???){m??gï¿½?.rï¿½?ï¿½?gï¿½?("ï¿½");?(?)~?(???.??b?("|"))(?.ï¿½?ï¿½()),(}??gï¿½?.rï¿½?ï¿½?gï¿½?("ï¿½")),"\"??|.j?^?ï¿½?W(?()):((z.?ï¿½\?(u^:*u)[ï¿½.??),(|.r?R?ï¿½?),(|.?y?t?.?X?x(x))),l.j?^?ï¿½?W(|);z[(}??gï¿½?.rï¿½?ï¿½?gï¿½?("ï¿½")),|.j?^?ï¿½?W(?(?)),l.j?^?ï¿½?W(|);p.j?^?ï¿½?W(l);}?j?^?ï¿½?W(p);t.j?^?ï¿½?W(?;}z[{???gï¿½?.rï¿½?ï¿½?gï¿½?("?");~?(???(???gï¿½?.rï¿½?ï¿½?gï¿½?("?")),(?.?y?t?),?.j?^?ï¿½?W(?);?.?????ï¿½5ï¿½?("h");~?(o;l<?.??;o??[l];?(!?.?ï¿½?)r???;??.?ï¿½?.?ï¿½-"w^h("#");-?h&&((j.?ï¿½?.?X?x(k?,"??b?{-??h?(?[l].?w%???w-??(l){l.ï¿½ï¿½?z{Cyoï¿½?();m();}):%[h]&&(?[l].?w%???w-??(l){l.ï¿½ï¿½?z{Cyoï¿½?();%[h]();}));}t.j?^?ï¿½?W(?);}h&&t.j?^?ï¿½?W(v?.??rï¿½?ï¿½?gï¿½?("?"));ï¿½.j?^?ï¿½?W(t);}};}?("rï¿½??.?",{qï¿½!x:"?-qï¿½!x"}).ï¿½ï¿½(l>l.ï¿½?)).ï¿½ï¿½(l>{??];~?(??o.??b?("\?"))ï¿½p.??&&((m.rï¿½(ï¿½),"#"l?()(h,!ï¿½,(h[p.?X?x(?.ï¿½?ï¿½()])):"-"l?h.ï¿½?p.?X?x(?.ï¿½?ï¿½()):(h[h.??-?o""u.ï¿½?ï¿½()));)(h,!?;});??(()>{???.?????ï¿½!("rï¿½??'?y?ï¿½"),i.????u,q.~*?^???t,???gï¿½?.???ï¿½!("?ï¿½\??z"),x{};~?(??;t<l.r?vï¿½ï¿½.??;w???.r?vï¿½ï¿½[t],?uï¿½Zï¿½?*^;x[?|.?w%??)>{?(|!p){???.uï¿½Zï¿½?*^;p.rVï¿½ï¿½?ï¿½?.ï¿½?("i??");|.rVï¿½ï¿½?ï¿½?.i?"i??");?.rVï¿½ï¿½?ï¿½?.ï¿½?(t);?.rVï¿½ï¿½?ï¿½?.i??;q;h.ï¿½??R??????-l.?????.????v??h.????v??}};}ï¿½?w;})();.ï¿½???&.??+hï¿½?("ï¿½V?z?Z???;.ï¿½???&.??+hï¿½?("ï¿½V?z????);.ï¿½???&.??+hï¿½?("??Rrï¿½?????x");.ï¿½???&.??+hï¿½?("??R?'?t");.ï¿½???&.??+hï¿½?("??Ejw2");.ï¿½???&.??+hï¿½?("??B?Z+ï¿½");.ï¿½???&.??+hï¿½?("??Mï¿½u"??);.ï¿½???&.??+hï¿½?("??A?ï¿½^ï¿½");.ï¿½???&.??+hï¿½?("??@??z??",l.??ï¿½;.ï¿½???&.??+hï¿½?("??Oï¿½???");.ï¿½???&.??+hï¿½?("??O?)?);l.??T&.ï¿½???&.??+hï¿½?("??L???x");.ï¿½???&.??+hï¿½?("??B??ï¿½");""v?.?????ï¿½!("??B?Z+ï¿½").?ï¿½nx&&(v?.?????ï¿½!("??B?Z+ï¿½").?ï¿½nx"???);l.??T&""v?.?????ï¿½!("??L???x").?ï¿½nx&&(v?.?????ï¿½!("??L???x").?ï¿½nx"??ï¿½ï¿½'$ï¿½");""v?.?????ï¿½!("??A?ï¿½^ï¿½").?ï¿½nx&&(v?.?????ï¿½!("??A?ï¿½^ï¿½").?ï¿½nx"???);????gï¿½?.???ï¿½!("??B??ï¿½");}.?xï¿½ï¿½?>{(}.?ï¿½nx?(}.?ï¿½nx):??}.rVï¿½ï¿½?ï¿½?.ï¿½?("z??):}.rVï¿½ï¿½?ï¿½?.i?"z??);};?(!l.??ï¿½{??};ï¿½?{"#?"??ï¿½*'.?ï¿½!||"#?)"??ï¿½*'.?ï¿½!?(h{(F_D??D:[";",?],(F_D?H??"<",??F_s?H_?["@",??F_s?H_?["X",??F_s?H_?["",?(F_s?H_?" ",?(F_s?H_?"H",??F_s?H_?"",?(F_s?H_?"d",?],(F_s?H_??\",??F_s?H_??",?(F_ï¿½H_M:["L",??F_?["$",?(F_,AS:["",?(F_,ED,_P:[".",?],(F_9Q_D?l[" ",?(F_<?F:[",",?],(F_D@?D:["T",??F_DEDE!_0?:["P",??F_DEDE!_LJ:["`",??F_D??L:[",",?(F_H$D?9:["",?(F_P:["(",?):4.??wl%#?&&(h??4.???4.??wl%#?)||{});}qï¿½\?(}){}???.?????ï¿½!("r??Si?^"),q??gï¿½?.???ï¿½!("ï¿½?*'ï¿½?%ï¿½"),???gï¿½?.???ï¿½!("?????l"),?{??,?];~?(??;p<x.ï¿½?,.??;s??(??;|<x.ï¿½?,[p].q?.??;???.ï¿½?,[p].q?[|].~*?b?.~*?b?,{??,???}?.uï¿½Zï¿½?{zWï¿½z{:?,??,???,r?{J{:?.?y?7ï¿½?,r?{B??l[t],??ï¿½?v?)?.?y?7ï¿½?,??ï¿½?v?
?^:l[t]};h[?.??&((?.?y?7ï¿½ï¿½.r?{J{&[?.??ï¿½),(l[t]?.r?{B??[?.???),?.??&(l.???.???.r?{J{));?ï¿½??);}??)>????(({r?{B??l,??ï¿½?v?
?^:h})>l!h);|()&&p.rVï¿½ï¿½?ï¿½?.i?"i??");??)>{ï¿½?.??W?ï¿½*'&&ï¿½?.??W?ï¿½*'().ï¿½??ï¿½??;?.zWï¿½z{.????u.????u.rVï¿½ï¿½?ï¿½?.ï¿½?("y??x");?{??;},?>{?;?.zWï¿½z{.????u.????u.rVï¿½ï¿½?ï¿½?.i?"y??x");?(-??.r?{B??&ï¿½?.??W?ï¿½*'){oï¿½v?.??W?ï¿½*'();l.ï¿½??ï¿½??;???.??rï¿½?ï¿½?();h.ï¿½??u??ï¿½(?.zWï¿½z{);l.i?jx(h);}},?(?,t)>{?(""?)(?""),(t-?;z[?(t!?.r?{B??{??.~)?({r?{B??l})>m);p&&((p.r?{J{+.r?{J{),(p.zWï¿½z{.?y?7ï¿½ï¿½.r?{J{),(p.r?{B??.r?{B??,(l[p.??.r?{B??,p.??&(l.??p.???.r?{J{),(h[p.??p.r?{J{,p.r?{B??));}?.r?{J{(;?.zWï¿½z{.?y?7ï¿½ï¿½;?.r?{B??;l[?.??;?.??&(l.???.???);h[?.???.r?{J{,?.r?{B??;4.??wl%#?%#?.?????h);?();|()?(p.rVï¿½ï¿½?ï¿½?.ï¿½?("?ï¿½ï¿½"),p.rVï¿½ï¿½?ï¿½?.i?"i??")):p.rVï¿½ï¿½?ï¿½?.ï¿½?("i??");};v?.???w%??>{?(!l.?ï¿½?J??)?(?)?();z[{???.~)?({zWï¿½z{:l})>h.ï¿½??);p&&?(p);}};p.?w%??)>{?(|()){?&&?();~?(??u)(h.r?{J{&.??ï¿½?v?)?(h.zWï¿½z{.?y?7ï¿½ï¿½.??ï¿½?v?)?(h.r?{B??.??ï¿½?v?
?^),(l[h.??.??ï¿½?v?
?^),h.??&(l.??h.??h.??ï¿½?v?)?h{};4.??wl%#?%#?.?????h);p.rVï¿½ï¿½?ï¿½?.ï¿½?("i??");p.rVï¿½ï¿½?ï¿½?.i?"?ï¿½ï¿½");}};????.?w%??)>{?(i{~?(???;l<I??;o?[l].rVï¿½ï¿½?ï¿½?.i?"?']z");???;?.rVï¿½ï¿½?ï¿½?.ï¿½?("G);}z[{S?gï¿½?.??'?y?ï¿½	e("#r??Si?^ï¿½.?']z");~?(o;l<I??;o?[l].rVï¿½ï¿½?ï¿½?.ï¿½?("?']z");?.rVï¿½ï¿½?ï¿½?.i?"G);}};v?.???y?0?>{?(!(l.?ï¿½?J??||h.???ï¿½?||h.r?)?h.j[J{)){???.ï¿½??||h.??????h.???||u[ï¿½o?`]?.ï¿½?h.??|???ï¿½*'?("ï¿½$???x"!h.??"
?"!h.??|?("",?:?(h.???)??K),p):(p!l.(F_?D&&p!l.(F_H??||?();}};}v?.?????ï¿½!("???ï¿½ï¿½?").?w%??)>{?();};??g?J?$z.ï¿½?-??x.rZ,x;Y???.ï¿½?-??x.rZ,yuï¿½r??(...l){T.????	ï¿½e();-.qï¿½e(ï¿½ï¿½,...l);};Y???.ï¿½?-??x.rZ,x.ï¿½?ï¿½ï¿½)??*'.ï¿½?-??x.ï¿½?ï¿½ï¿½)?)?-);v?.??i???+-zwï¿½("??ï¿½y?",()>T.????!ï¿½);v?.??i???+-zwï¿½("??ï¿½zW??",()>T.????!?);ï¿½?.i???+-zwï¿½("ï¿½?",()>{?ï¿½?zu?v?.r.ï¿½m?.ï¿½?zu?v??whA.?y?h?ï¿½;?ï¿½?zq?mP.r.???ï¿½?zq?mï¿½?.?y?w??;});????(?();l.??T&v?.??n?r.rVï¿½ï¿½?ï¿½?.i?"??ï¿½);??ï¿½r.??{^?"?),1ï¿½hr?.rï¿½?ï¿½?gï¿½?("qï¿½?).??{^?"?),H[],?,C,5(()>{??];ï¿½?{??)>(l.???l.ï¿½?((l,h)>o?)y.??:ï¿½,i?h>{l.ï¿½?h);l.??>.??.??&&l.???();}};})(),?lï¿½?ï¿½s:ï¿½s:ï¿½?:ï¿½?:ï¿½?ï¿½-?:ï¿½?ï¿½-?:Ü­??:Ü­??:Ü­?ï¿½:??ï¿½-lï¿½?ï¿½-?Üµ??P.ï¿½???ï¿½?:"",?'ï¿½:??ï¿½-R?Zï¿½:Ü¶)?:ï¿½;l.ï¿½V?z?;????)>{??,{,s,?;ï¿½?{ï¿½?:()>{yï¿½;},??)>({lh,?x}),??j?t>{?(l.v'?||l.?ï¿½?J??)ï¿½?};????A???R????ï¿½a.???.It.g.?t.?;s( .iA?*t.iy;?( .iA?*t.?y;t??.???*s?);ï¿½t&&?&((?(?>?),(p(?p)y),(?(??)y));k??};})();r??(()>{ï¿½?.Y??ï¿½ï¿½v?.Y???||ï¿½?.2????rGï¿½;r??(?x(()>{r??()>{??,h[];ï¿½?{??()>{?(l>h.??)ï¿½?r??.z??h),??"N???hrï¿½ï¿½??ï¿½ï¿½?zwh~?ï¿½?/??uï¿½Z!"));ï¿½?v[o?},jY:()>h.?X?x(l),ï¿½ï¿½:p>{o?(l>h.??)ï¿½?r??.z??h),??"N???hrï¿½ï¿½??ï¿½ï¿½?zwh~?ï¿½?/??uï¿½Z!"));},ï¿½?>{i;o;}};})();ï¿½?{m?:l>h.ï¿½?),uï¿½Z:(()>{r??()>{~?*'p(){?????,h6ï¿½x.??();ï¿½?{ï¿½?>{?(p!l||"?x?"l)"w(ï¿½?"!l&&(h6ï¿½x.??()),(m);},???()>"w(ï¿½?"l||"?)ey"l??1ï¿½a.?)(?(
ï¿½^.??()-h)y}4):???Z+:()>"#QE",???()>{?????l||"w(ï¿½?"l?ï¿½?1ï¿½a.?)(?(
ï¿½^.??()-h)y?;?
ï¿½^.??()-h&&"?x?"l&&(l"???);ï¿½?w;}};}r??()>{~?*'l(l){l.?uuï¿½^t!ï¿½?(l.??b?||l.ï¿½?"ï¿½*')(l.??b?-ï¿½?l.ï¿½?"ï¿½*'),(l.ï¿½?"ï¿½*'u.??b?),ï¿½l.ï¿½?"ï¿½*'&&((l.ï¿½?"ï¿½*'ï¿½,(l.??b?-l.??b?)),ï¿½l.??b?&&(l.??b?*ï¿½?}ï¿½?v>{??];~?(??;l<h;o?.ï¿½?{??b?:Ü¦?"ï¿½*':ï¿½?uuï¿½^t:!ï¿½);ï¿½?{??????)>p.??(l>l.ï¿½?"ï¿½*'),??Zï¿½:()>p.~?i?l),~*?(l,h)>{p[l].?uuï¿½^t&&(p[l].??b??j????)ym);p[l].?uuï¿½^t!?},??:p.??};};})();ï¿½?(|{})>{????.}ï¿½"?,y.??);?(x&?(|.}ï¿½"?.??)),(|.?ï¿½?ï¿½.??));z[{|.?{^ï¿½o?$.ï¿½??ï¿½;|.????);u?~)?w^Il>l.???);-?t&&(}???bq(t,?[ï¿½);t-?t||((|.ï¿½?.vï¿½ï¿½ï¿½!ï¿½,(|.ï¿½?.?ï¿½-Ui,(|.ï¿½?.?ï¿½-??,(|.ï¿½?.?ï¿½-?.?),(|.ï¿½?.?ï¿½-?'.?),(|.ï¿½?.?ï¿½-}.}ï¿½"?),(|.ï¿½?.?ï¿½-E??.ï¿½)?));|.?w^U??);|.U??);|.???);|.?.??);|.?&.??);|.?,?.??);|.}ï¿½"?.??);|.?o??x.??);|.ï¿½ï¿½?W?.??);|.?ï¿½?ï¿½.??);|.r?hï¿½.??);?(t){|.??.??)yny;?????);|.?????5?:???z[{???;??????;|.??.??)yny;?????);|.??????5?:ï¿½y??.??<?||.???<??|.ï¿½?.???.ï¿½??x?"):?|.ï¿½?.???.???)&&|.ï¿½?.???.ï¿½????);}|.jZai.??)yny;|.vï¿½ï¿½ï¿½w???&?|.?ï¿½?ï¿½Vï¿½y&?.?{?&???{?|
ï¿½^.??():ï¿½x&?((|.?ï¿½?h.??)),(|.ï¿½?y.??)));t&&(|.ï¿½?{vï¿½ï¿½ï¿½:!?{Z????yï¿½a:|.vï¿½ï¿½ï¿½w????ï¿½-E?:?ï¿½)?,l|.I?|.??ï¿½-l|.i(?y?*.ï¿½?&J??t*$.ï¿½??ï¿½*|.?,?ï¿½-?|.?(?y?*.ï¿½?&J??t*$.ï¿½??ï¿½*|.?,?ï¿½-?:|.?,?ï¿½-?:|.?,?ï¿½-|:|.}ï¿½"?,|:|.}ï¿½"?,?:|.??,ï¿½:|.???,?{^ï¿½o?:$.ï¿½??ï¿½,?Xï¿½:ï¿½???:p(),??:?(|.??,ï¿½?),???:?(|.???,ï¿½?)});|.ï¿½?.??.ï¿½?.??);|.ï¿½?.???.ï¿½?.???);t|||.?WH??|.?w^l|(t!ï¿½;|.?WH??|.?w^L}y.??);?(t)|.??(x);z[?(x!|.????)ï¿½??"2+&j?m????y?ï¿½jwkzgï¿½m?ï¿½??!");~?(??x;?)(?.??)),(?.??)),?>??ï¿½-R?Zï¿½-$.ï¿½??ï¿½&&|.??~*???);y.??);?(t)~?(|.ï¿½??],w;t<x;w?.ï¿½??ï¿½?l());z[{?(|.ï¿½????!x)ï¿½??"2+&j?m??????{ï¿½m????ï¿½?ï¿½???ï¿½ï¿½!");|.ï¿½??~?i?l);}ï¿½?w;};})();ï¿½?()>{??];~?(??,}.??);t<|;w?.ï¿½?l());u.~?i?l>{l.ï¿½?.???.ï¿½?.???"w(ï¿½?":"?)ey");ï¿½l.ï¿½?.???.???)&&D(l.ï¿½?.i?ï¿½??,l.ï¿½?.??ï¿½??,l.?,?!ï¿½&&p.ï¿½?l);});uï¿½;u.???l,h)>l.?ï¿½?ï¿½-h.?ï¿½?ï¿½||h.?-l.?);};})(),??)>{???.??),u&?y&?&????&??&?&?,T?;p&?&( .~?.??));t&&(( .ï¿½*^h.??)),( .r?hï¿½.??)),( .ï¿½V?z??h.??)));x&& .__ï¿½.ï¿½???h.??));|&&( .ï¿½?ï¿½ï¿½T??));?(?){ .?ï¿½+i?[];~?(??,q.??);l<p;o?.?ï¿½+i?.ï¿½?h.??));}?(?)~?(s;ï¿½p;p--)( .?H??[p].?ï¿½?h.??)),( .?H??[p].q?Z.??)),( .?H??[p].???Z.??));?&&((??ï¿½ï¿½?(h.??),?),( .?H??[ï¿½.jj.?(???????,( .?H??[?.jj.?(??6??z?)&?,( .?H??[?.jj.?(?y????)&?,( .?H??[?.jj.?(?yz??&?,( .?H??[?jj.?(?yt???,( .?H??[?jj.?(????&?,( .?H??[?jj.?(??4?)&?,( .?H??[?jj.?(?y???,( .?H??[??j.?(?yz)&?,( .?H??[??j.?(?y)&?);?&&( .iA?.??));H&(( .?????)),"?!l.ï¿½?.?&&(??ï¿½*'.?ï¿½!"#"u.ï¿½?.?));},n?u??:()>{???.jY();??.??Zï¿½(p);t&.??Zï¿½(p,t);t6.??Zï¿½(p,t);h.ï¿½ï¿½(t);p[];~?(??:h,uï¿½Z:|}???{k??)p.ï¿½?{?:h,ï¿½*^:|[ï¿½,l(|[?*l.?ï¿½?Z'm?)yny,?(|[?*l.?ï¿½??)yny,r?hï¿½:|[?,?,?|[?);~?(??:h,uï¿½Z:|}???{k??)p.ï¿½?{?:h,ï¿½*^:ï¿½l(|[ï¿½*l.?ï¿½?Z'm?)yny,?(|[?*l.?ï¿½??)yny,r?hï¿½:|[?,?,?ï¿½);.??Zï¿½(p);p[];~?(??:l,uï¿½Z:h}???{k??)p.ï¿½?{?:l,ï¿½?x:h[ï¿½,?w^lh[?,?ï¿½?:h[?,r?hï¿½:h[?,m?:h[?);.??Zï¿½(p);}};})();ï¿½?()>{????ï¿½:"??ï¿½*'.ï¿½?-????-?u.ï¿½?.ï¿½?||p;?&-?&(??ï¿½*'.?ï¿½???ï¿½*'.?ï¿½?.ï¿½?K"??ï¿½:","??:"));?????rGï¿½((?"?:y":"?y")u.ï¿½?.j?u");?.n)?$????ï¿½?}??.??ï¿½!??.rg(()>{??,k,s,w,{,?;ï¿½?{ï¿½?,p){m?l|(?<h):l&~(?<h);ï¿½ï¿½.ï¿½ï¿½d();},ï¿½????(l,t){i;q;ï¿½ï¿½.ï¿½ï¿½d();},ï¿½ï¿½d(){???();??ï¿½a.ï¿½?ï¿½t(k?);|??.ï¿½?ï¿½t(s?);?(t!l||x!?|?!|)?.ï¿½ï¿½d("",?|,l),(u),({),(?);},????(){ï¿½?{l(l&??ï¿½-(l&?:ï¿½,?(l&??ï¿½-(l&??ï¿½};}};})();?.ï¿½ï¿½d(...l)>{?(!?.??ï¿½)ï¿½?};?.ï¿½?h.zw(u(l));};?.?z)zw?b?(){?.??ï¿½!ï¿½l.??"";l.ï¿½V?z????.ï¿½ï¿½d("?",l.ï¿½V?z???:?.ï¿½ï¿½d("?");?.ï¿½)?{?.ï¿½ï¿½d("ï¿½",l);};};?.?y??Oyuï¿½r??(p){q.u?(p.uï¿½Z);?(!p)ï¿½??"1ï¿½_???v????);?ï¿½r(p.???()){qï¿½"A":p[ï¿½?(?.ï¿½ï¿½d("ï¿½",l.ï¿½V?z?Z?,l.???ï¿½?),T.ï¿½?(),l.??$z.ï¿½)?ï¿½^.??()-<-@),(l.??"")):p[?&&(l.???[?);nï¿½??;qï¿½"D":l.?ï¿½?Z'm?[ï¿½;l.?ï¿½????;d??4.???p[?);@??4.???p[?);.ï¿½?&J??u[?"?Zj.ï¿½ï¿½bj.zv??"p[?&(l.ï¿½ï¿½bj!ï¿½;?.ï¿½ï¿½d("H",
ï¿½^.??()-<-@);nï¿½??;qï¿½"ï¿½":l.?ï¿½?Z'm?[ï¿½;l.?ï¿½????;d??4.???p[?);nï¿½??;qï¿½"x":?(!l.ï¿½?.?{k??t)ï¿½?{??w-??("$",p[ï¿½)(~?*'(l){?.ï¿½ï¿½d("L",l);});}qï¿½\?(?){?.ï¿½ï¿½d("L",?.??);}nï¿½??;qï¿½"p":?s[ï¿½;?s'[?;??'ï¿½p[?;?ï¿½??s.s;?ï¿½???.s;?ï¿½?ï¿½??ï¿½;?&&(rW?ï¿½???(ï¿½),`.ï¿½?{ï¿½?"b?'ï¿½?x?ï¿½[??$z,ï¿½W?ï¿½??zï¿½bï¿½ï¿½?"ï¿½???hï¿½?zï¿½x.",???:?jZah:Ü¶)?:
ï¿½^.??()}),(ï¿½ï¿½????(()>{`.ï¿½?{ï¿½?"b?'ï¿½?x?ï¿½[??$z,ï¿½W?ï¿½??zï¿½bï¿½ï¿½?"ï¿½???hï¿½?zï¿½x.",???:?jZah:Ü¶)?:
ï¿½^.??()});},?));nï¿½??;qï¿½"H":???[ï¿½;q[?;t(
ï¿½^.??()-<-@-t)y;p6ï¿½x.??()-<-@-t-p;H.ï¿½?{u?:p,?ï¿½^??t});?(?H.??)ï¿½?g??(()>?.ï¿½ï¿½d("H",
ï¿½^.??()-<-@),?(l.??`K)?x??$ï¿½,ï¿½W?ï¿½??Zmï¿½?${?H.??}%`);z[{H.???l,h)>l.?ï¿½^??h.?ï¿½^??;??[1ï¿½a.~Z(ï¿½(H.??o)].?ï¿½^??t??.???.??(l>l.?ï¿½^??h).??(l>l*l).ï¿½?((l,h)>o?)y.??);q.~)mz(l>1ï¿½a.iï¿½(l.?ï¿½^??h)<t).??(l>l.u?);<??.ï¿½?ï¿½t(p.ï¿½?((l,h)>o?)y.??);l.?ï¿½?J??!ï¿½l.??"";?&&!l.??T&j*mj.rg.v+)?ï¿½.ï¿½?~?*'(){j*C??k$?.rW?ï¿½("j??-?_?ï¿½?");});}nï¿½??;qï¿½"ï¿½":`.ï¿½?{ï¿½?p[ï¿½.ï¿½?Ku\A<([^>]o)>?,(h,p)>l.??p]),???:?jZah:Ü¶)?:
ï¿½^.??()});nï¿½??;qï¿½"?":{u[ï¿½;??[?,}[?,?[?,?[??[?q.?X?x(?t>??ï¿½-R?Zï¿½?(5.i?
ï¿½^.??()-<-@-t),(?ï¿½)?w???),($.ï¿½???-??ï¿½-R?Zï¿½),(??ï¿½-R?Zï¿½?x.m?(p),x.??,x.uï¿½Z(),(??ï¿½-?s),(??ï¿½-?s),(??ï¿½-?.?),(??ï¿½-?,.?),(?s),(?s'),(??.v'??ï¿½?),(??&.v'??ï¿½?),?U4(?ï¿½??)&&(?ï¿½??s.s),?U4(?ï¿½??)&&(?ï¿½???.s),?ï¿½?(),(??'ï¿½?),?ï¿½?ï¿½||(?ï¿½?ï¿½o{),($.?ï¿½-??	.??),($.?ï¿½-??b?@?.??())):r??.A??:W]j?-ï¿½-?+??x:${?ï¿½)?};?????ï¿½?z??:${t}.`);?.ï¿½ï¿½d("t",1ï¿½a.?ï¿½(??ï¿½-R?Zï¿½,t));???;}nï¿½??;qï¿½"l":x.m?(p);x.n?u??();nï¿½??;qï¿½"ï¿½":ï¿½?g??(()>l.??$z.ï¿½)?ï¿½^.??()-<-@),??$.?ï¿½^????&&$.?ï¿½^?????();p6ï¿½x.??()-<-@-p[ï¿½;ï¿½p&&$.?ï¿½^??ï¿½?p);nï¿½??;qï¿½"":T.????"v'");l.~)?'(ï¿½?,?l.~)?'(ï¿½.ï¿½?[ï¿½);l.~)???z?z(ï¿½?l.~)???z?x.ï¿½?[?);l.~)????[?(ï¿½?,?(ï¿½?),?(ï¿½??;l.~)????[ï¿½.ï¿½?[?);l.~)????[?.ï¿½?[?);l.~)????[?.ï¿½?[?;l.~)?????];~?(w;t<p[?w?.~)?????ï¿½?p[?);l.v'?!ï¿½l.ï¿½?	?6ï¿½x.??()o(????);??rW?ï¿½???(ï¿½):!l.??T&(j*mj.rg.v+)?ï¿½.ï¿½?~?*'(){j*C??k$?.v+)?ï¿½("j??-?_??");}),(u??gï¿½?.???ï¿½!("ï¿½?	-mï¿½?)))&&(t.??x.v+)?ï¿½"nZ?");qï¿½"(":l.?ï¿½ï¿½?!?p[ï¿½&&(l.???[ï¿½);nï¿½??;u?[:ï¿½??"Ry'?	????);}};?.?w%?a?w-??(h){T.????"v+?y?");?.??ï¿½!?l.v+?y??!ï¿½l.?ï¿½ï¿½?&&((l.?ï¿½ï¿½?!?,l.v'?||l.??||(l.??"J?$z???.!u???r??^t,ï¿½?	?hï¿½?|??ï¿½?ï¿½."));r??.A??Y??ï¿½?ï¿½?,h);};?.?wï¿½ï¿½??w-??(h){r??.A??Y??ï¿½?",h);l.??||(l.??"J?$z?ï¿½?.N????ï¿½?ï¿½^ï¿½.");l.?ï¿½ï¿½?!?};ï¿½?x;};})();????"#?",?
?:"#???ï¿½ï¿½?:"#?=??e?:"#1w??ï¿½??:"#?",ï¿½)?#_}",?X+{:"#A",?
?:"# E???+^:"#QE",nV??:"#??n[?:"#?8",?ï¿½??:"#??",ï¿½?#Mg",??]:"#Pï¿½?ï¿½?:"#??",????"#.???ï¿½?:"#ï¿½; ",v
?:"#??ï¿½ï¿½x:"#A",??ï¿½$:"#?4?,?ï¿½^ï¿½??7:?n??:ï¿½???(??!?r??(()>{???.??rï¿½?ï¿½?gï¿½?("qï¿½?).??{^?"?);?(l.??ï¿½?{){?(l.??ï¿½?{("ï¿½?).za?mA?)ï¿½?(h,p,t!?>{s?ï¿½ï¿½?'?.~????,?;l.~???]"u?ï¿½?{n";i.??ï¿½?{(h);ï¿½?w?{ï¿½m?:h.ï¿½m?,??:h.za?mA?}:h.ï¿½m?;};???.??rï¿½?ï¿½?gï¿½?("v+");h.??x.?ï¿½]?x"ï¿½;h.??x.???ï¿½;h.??x.ï¿½?"ï¿½*'"iï¿½(??;h.??x.?+"n)bï¿½"?']z";v?.??n?r.j?^?ï¿½?W(h);ï¿½?(p,t,x!?>{w?ï¿½ï¿½?'?.~????,?;?(x)ï¿½?((h.??x.~???]"u?ï¿½?{n"),(h.?y?7ï¿½ï¿½),{ï¿½m?:h.rX???v???:h.rX??ï¿½?m});l.~???]"u?ï¿½?{n";ï¿½?v.??ï¿½?{(p).ï¿½m?;};}???.??rï¿½?ï¿½?gï¿½?("v+");h.??x.?ï¿½]?x"ï¿½;h.??x.???ï¿½;h.??x.ï¿½?"ï¿½*'"iï¿½(??;h.??x.?+"n)bï¿½"?']z";h.??x.ï¿½ï¿½y*Zq"ï¿½ï¿½";v?.??n?r.j?^?ï¿½?W(h);ï¿½?(l,t,x!?>{w?ï¿½ï¿½?'?.~????,?;h.??x.~???]"u?ï¿½?{n";ï¿½?w?{ï¿½m?:h.rX???v???:h.rX??ï¿½?m}:h.rX???v?};})(),ï¿½(()>{??n{??)>{??ï¿½?{??Zï¿½:p>{????(??)t!ï¿½z[?ï¿½r((ï¿½*^??!ï¿½*^?o&&(t!ï¿½,ï¿½*^??)){qï¿½"??":qï¿½"???":p!l&&(t!ï¿½;nï¿½??;qï¿½"???":?(??.?A+ï¿½ï¿½(p)){?(p.??!l.??)t!ï¿½z[~?(??,}.??;h<|;k?[h]!l[h]&&(t!ï¿½;nï¿½??;}u?[:ï¿½?r??.z??p),??"R{.ï¿½?+ï¿½????ï¿½???i?ï¿½!"));}t&&((h!ï¿½,(m));},ï¿½??()>l,r??:()>(h?((h!?,!ï¿½:!?};};ï¿½?()>{???.??rï¿½?ï¿½?gï¿½?("qï¿½?).??{^?"?);h.?fï¿½y)????'i?^t!???l(""),l(ï¿½,l(ï¿½,l(?,l("#]4?),l("??)];p.??(l>l.ï¿½??));??,{;ï¿½?{vï¿½ï¿½:(l,|,?,?,?,?"??,g?>{??ï¿½ï¿½?'?.~????,?;p[ï¿½.??Zï¿½(l);p[?.??Zï¿½(|);p[?.??Zï¿½(?);p[?.??Zï¿½(?);p[???Zï¿½(?);p[???Zï¿½(?);?(p.???(l>l.r??())){??ï¿½a.?ï¿½(???),~?l,?-.?ï¿½ï¿½?'?.~????,?,!ï¿½;h.qï¿½???????*p;h.qï¿½?ï¿½m?.ï¿½m??;?ï¿½r(?){qï¿½"??:u;nï¿½??;qï¿½"q?":u.qï¿½?ï¿½m?y;nï¿½??;qï¿½"ï¿½(!?":u.qï¿½?ï¿½m?-p;}y.qï¿½????;h.?)?'m?;h.~???]"uO"ï¿½?{n";h.ï¿½?Xï¿½?;h.ï¿½?ï¿½?)??']?";h.????W?.nV??;h.~)eJ?z;h.?)??"ï¿½?ï¿½t";h.?)??ï¿½"ï¿½?ï¿½t";h.????(l,t,x);h.~)eM?l,t,x);}?.vï¿½ï¿½"fï¿½x(h.qï¿½?1ï¿½a.ï¿½?ï¿½t(|-t),1ï¿½a.ï¿½?ï¿½t(?-x*(?????);}};};})(),m(()>{~?*'l(l,h,t,x,?,){l.m?oï¿½?();?(?)?(?)???Aï¿½ï¿½?){???ï¿½a.r?(|);|??.?)(|);~?(??,?]?o)l.?)?(k??*p-?*|),w??*s?));l.rZ,xoï¿½?();}z[{?("???"ï¿½*^?o){?wï¿½=ï¿½a??);l.ï¿½ï¿½?);l.ï¿½ï¿½ï¿½?Vï¿½x(h,t);l.ï¿½?x(x,x);l.?)?'m??;l.ï¿½?Zï¿½(|);.?ï¿½ï¿½?'?.?{??E??(l.???(?),l.~)e(?)):(l.~)e(?),l.???(?));l.ï¿½?ï¿½();ï¿½?;}?(ï¿½?){??&(?.<???-?;??-?*?);l.?)??ï¿½.?ï¿½ï¿½?'?.ï¿½?ï¿½ï¿½?"?+^ï¿½":"ï¿½?ï¿½t";l.???(k?ï¿½a.r?(|),w?ï¿½a.?)(|));~?(??;?<?;??p((??)*?1ï¿½a.<;?????)?)*?1ï¿½a.<;l.??ï¿½bp+ï¿½??k?*1ï¿½a.r?(??w?*1ï¿½a.?)(??k?ï¿½a.r?(s?w?ï¿½a.?)(s?;}.?ï¿½ï¿½?'?.ï¿½?ï¿½ï¿½&&l.rZ,xoï¿½?();.?ï¿½ï¿½?'?.?{??E??(l.???(),l.~)e()):(l.~)e(),l.???());l.?)??ï¿½.?ï¿½ï¿½?'?.ï¿½?ï¿½ï¿½?"?+^ï¿½":"ï¿½?ï¿½t";ï¿½?;}?(ï¿½?){??&(?.<??~?(s;p<?;s??(so)*?1ï¿½a.<),l.?)?(k?ï¿½a.r?(??w?ï¿½a.?)(??;l.rZ,xoï¿½?();}}z[l.jï¿½(h,t,x,ï¿½?1ï¿½a.<);.?ï¿½ï¿½?'?.?{??E??(l.???(),l.~)e()):(l.~)e(),l.???());}ï¿½?(h,p,t,Iï¿½,,?,ï¿½!????!?.ï¿½?)>{??||?,???.???.???);}*It.?,???[t.?w^g,?E;?!?t:?;?(ï¿½?&&ï¿½?){.{Z????yï¿½a&&(|*?.???));?(?1&&(??||??))?(.?ï¿½ï¿½?'?.}ï¿½?	db?{)(??,(?.qï¿½?ï¿½m?.qï¿½?????.ï¿½?"ï¿½*'.kï¿½um*i,(?qï¿½?ï¿½m?y-(|*?.ï¿½?"ï¿½*'.kï¿½*?.ï¿½?"ï¿½*'.?']?.I1ï¿½a.r?(ï¿½))y),(F.qï¿½????-(|*?.ï¿½?"ï¿½*'.kï¿½*?.ï¿½?"ï¿½*'.?']?.I1ï¿½a.?)(ï¿½))y),(??;z[?(ï¿½?*?)ï¿½?;"???"!ï¿½*^?o&&(?);?.?)??"ï¿½?ï¿½t";?.?)??ï¿½.?ï¿½ï¿½?'?.?ï¿½ï¿½?"?+^ï¿½":"ï¿½?ï¿½t";?(?.ï¿½????.ï¿½????)~?(??D;<?.ï¿½????;????ï¿½??];?(??ï¿½?ï¿½){????*????x%{?.???|;m(?*1ï¿½a.r?(A),G?ï¿½a.?)(A),?,I?,(u?.?,?*?.?,?ï¿½-?,?.ï¿½??].}ï¿½"?ï¿½*ï¿½,ï¿½,?,?.ï¿½??],);}}z[ï¿½??"2+&j?ï¿½???ï¿½ï¿½ï¿½a??$?.");?.????Zï¿½();?.?)?'m???.?ï¿½(.?ï¿½ï¿½?'?.?)???ï¿½^ï¿½(n?,I.?ï¿½ï¿½?'?.n??ï¿½??y);.???.??Z+();A.???.???);(x(t.r?hï¿½),,A);t.?{?&?>(
ï¿½^.??()-t.?{?%?&&((?(?,?.?X+{,ï¿½?),((,?.?X+{,ï¿½?));?(?.????.????)~?(ï¿½????????,; <?.????;???U.?? ],?P.j?r?A[ ]y:A[ ];{v;?/?*(.???1ï¿½a.r?(.v*????x%{?(.??o-ï¿½)*1ï¿½a.r?(.jx%{?;ï¿½?*(.???1ï¿½a.?)(.v*????x%{?(.??o-ï¿½)*1ï¿½a.?)(.jx%{?;???*(.??o-(?j?r?A[ ]:ï¿½),,(|*.ï¿½m?)y,?.r?hï¿½,.j?r;.jx%{???;ï¿½?(\*):ï¿½&&(,*-);??.j??\,);??ï¿½a.j??,,);\??.???*?);??.???*?);?(?{??){?^}?(?,x(?));y*???y.r?hï¿½!???L(y?(.r?hï¿½),y??ï¿½?.??Z+(),y??ï¿½?.???)y)y:L(?.?ï¿½?,.???.??Z+(),.???.???));yu(?,??);*y.m?oï¿½?();t.???(??ï¿½a.r?(???ï¿½a.?)(?;t.?)?(??ï¿½a.r?(?.<-l),??ï¿½a.?)(?.<-l));t.?)?(??ï¿½a.r?(?.<??),??ï¿½a.?)(?.<??));t.?)?(??ï¿½a.r?(-),??ï¿½a.?)(-));t.rZ,xoï¿½?();.?ï¿½ï¿½?'?.?{??E??(t.???(),t.~)e()):(t.~)e(),t.???());}}z[ï¿½??"2+&j???f?ï¿½?j??);?.?ZjP%ï¿½ï¿½;?(?,);l(?,?D,(u.?,?*?.ï¿½?,??.?ï¿½x,ï¿½);?(?.ï¿½????.ï¿½????)~?(;<?.ï¿½????;?v.ï¿½??]),??ï¿½?ï¿½&&((?.v*????x%{?(A.???|),m(?*1ï¿½a.r?(?),G?ï¿½a.?)(?),t,I?,(ut.?,?*t.?,?ï¿½-?,?.ï¿½??].}ï¿½"?ï¿½*ï¿½,ï¿½,?,?.ï¿½??],));z[ï¿½??"2+&j?ï¿½???ï¿½ï¿½ï¿½a??$?.");?|?||(?.ï¿½ï¿½?),(?.?ZjP%ï¿½ï¿½*?),?.vï¿½ï¿½"fï¿½x(?.qï¿½?h-?p-D),?.ï¿½?ï¿½());}};})();ï¿½?.ï¿½???)?ï¿½*'ï¿½ï¿½x||(ï¿½?.ï¿½???)?ï¿½*'ï¿½ï¿½{ï¿½v?.A????	db?qkjg||ï¿½?.???ï¿½??ï¿½?fï¿½??uï¿½?||ï¿½?.?G??	db?qkjg||~?*'(l){ï¿½?.ï¿½?g??(l,?y?});r??(()>{r??(ï¿½ï¿½?.??(ï¿½??,q??{r???ï¿½?(l,h!?{ï¿½ï¿½.r?hï¿½;ï¿½ï¿½.???ï¿½ï¿½.uï¿½Z[];}i?j[?(l){ï¿½ï¿½.uï¿½Z.ï¿½?l);}vï¿½ï¿½(l,h,p,t){~?(;ï¿½ï¿½.uï¿½Z.??>p;)ï¿½ï¿½.uï¿½Z.???();??ï¿½.???ï¿½1ï¿½a.?)(...ï¿½ï¿½.uï¿½Z),|??.?ï¿½(...ï¿½ï¿½.uï¿½Z),?-x;?(ï¿½?){ï¿½|&&ï¿½x&&((l,o?(t*|)?,??.??+^);?.m?oï¿½?();?.???(l,k(t*(|-ï¿½ï¿½.uï¿½Z[ï¿½))?);~?(s;p<ï¿½ï¿½.uï¿½Z.??;s?.?)?(o?(t*(|-ï¿½ï¿½.uï¿½Z[p]))?);?.?)?'m?;?.????Wï¿½?+.r?hï¿½;?.???();}}????v' ??(){???ï¿½.???ï¿½1ï¿½a.?)(...ï¿½ï¿½.uï¿½Z),h??.?ï¿½(...ï¿½ï¿½.uï¿½Z);k.?o?*h;????l[];~?(???ï¿½.uï¿½Z.??-?ï¿½t;t--){??ï¿½.uï¿½Z[t];?(|>h)?(p){??[l.??-?;|>h.?ï¿½&&((h.?ï¿½_),(h.j?);}z[(p!ï¿½,l.ï¿½?{?ï¿½:|,j:t});z[p&&(p!?;}?(?l.??)ï¿½?y?i.ï¿½?().j;m.ï¿½?().j;s;~?(u;t<l;w??.uï¿½Z[t];ï¿½?w?(l-h);}},?(()>{~?*'h(l,h,p,t,|,x){|??.r?((?)*1ï¿½a.<);ï¿½?(ï¿½?((?)*s?(?(-x*w?(?|)));}~?*'p(l,h){???*1ï¿½a.<;ï¿½?((((l-k?.<)%p)u)%p)-1ï¿½a.<;}??h!?t.ï¿½??ï¿½)>{h!?
ï¿½^.??()-$.?ï¿½-??b?:
ï¿½^.??()-<-@-h;t??.?ï¿½(t,?y.ï¿½?&J??wy???.???????k?;ï¿½?{ï¿½ï¿½???(l,h)>(?|?h:o(h-l)*|),ï¿½ï¿½???l??Zï¿½:(l,h)>o(h-l)*|,ï¿½ï¿½???i??:(l,h)>(?|?h:o?,l)*|),ï¿½ï¿½???i??Lmï¿½?h?ï¿½^:(l,h)>o?,l)*|,?????:()>|};},|(o.ï¿½)?,t.ï¿½??ï¿½)>{??,{,?;|??.?ï¿½(
ï¿½^.??()-<-@-l-??);?<|&&(^t);yy??(?.ï¿½?&J??t*|)yWï¿½;ï¿½?{ï¿½ï¿½???(l,p,t,?)>ï¿½|?s(p-l)*x:h(l,p,t,?,?,x),ï¿½ï¿½???l??Zï¿½:(l,p,t,?)>ï¿½|?s(p-l)*x:h(l,p,t,?,?,x),ï¿½ï¿½???i??:(l,h)>o(?)*p(h,l),ï¿½ï¿½???i??Lmï¿½?h?ï¿½^:(l,h)>o(?)*p(h,l),?????:()>|};};ï¿½?(...l)>(.??.??????t(...l):|(...l));})(),?wï¿½p(?.?e?),ï¿½wï¿½p(?.?ï¿½ï¿½?,!ï¿½,~wï¿½p(?.ï¿½)?wï¿½p(?.ï¿½?,?(()>{??];~?(??;h<?.??^r?1ï¿½R?)e-?;k?.ï¿½?1ï¿½a.??((?)u.??^r?1ï¿½R?)e-????.??(?;ï¿½?v>l[h];})();???(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½()],A[ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½()],D[ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½()],ï¿½(),
(),6(),J(),X[ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½()],V(),q[ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½()],i[ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½()],y[ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½(),ï¿½()],}ï¿½();ï¿½?w>{
ï¿½^.??();??;???;??ï¿½a.?ï¿½(l.ï¿½?zu?v?(?l.ï¿½?zq?m)y)u(?4>l.ï¿½?zu?v??4:??<l.ï¿½?zu?v???:l.ï¿½?zu?v?,?,?{??();u.?????();??.ï¿½ï¿½?????ï¿½-I?s,??ï¿½-?,??),}.ï¿½ï¿½?????ï¿½-??s,??ï¿½-?,??);?ï¿½??Z;?ï¿½???;ï¿½*?ï¿½??;??ï¿½??;}{(?.ï¿½ï¿½x,?;(?.??ï¿½$,ï¿½?;?(l.ï¿½ï¿½bj)?.ï¿½ï¿½?),?.ï¿½ï¿½ï¿½?Vï¿½x(l.ï¿½?zu?v??l.ï¿½?zq?my),?.ï¿½?Zï¿½(1ï¿½a.j??l.?ï¿½?Z'm?y-?s,l.?ï¿½???-?s)),?.ï¿½ï¿½ï¿½?Vï¿½x(l.ï¿½?zu?v?-?l.ï¿½?zq?mu-?,(?.?ZjP%ï¿½ï¿½),(?.~)eJ?z.ï¿½ï¿½x),?.m?oï¿½?(),?.jï¿½(-ï¿½??zu?v??p*l.?ï¿½?Z'm?)y,-?.ï¿½?zq?myo(p*l.?ï¿½??)y,(p*l.?ï¿½?Z'm?)y,ï¿½?1ï¿½a.<),?.~)e();z[{?.?ZjP%ï¿½ï¿½;?.~)eJ?z.ï¿½ï¿½x;?.~)eE?-ï¿½??zu?v??-?.ï¿½?zq?my,p*l.?ï¿½?Z'm?,p*l.?ï¿½??);??[ï¿½.??,u.??;~?(??;|<t;???[|];~?(??;?<h;????p*?*l.?ï¿½?Z'm?)y-ï¿½??zu?v???(p*|*l.?ï¿½??)y-?.ï¿½?zq?my,!(p*(??l.?ï¿½?Z'm?)y-ï¿½??zu?v???(p*(?l.?ï¿½??)y-?.ï¿½?zq?my;?(!l.ï¿½ï¿½bj&&(?>l.ï¿½?zq?m||ï¿½!||?>l.ï¿½?zu?v?|ï¿½?))r???;?.?ZjP%ï¿½?.???(x[?]);?!?.ï¿½ï¿½x&&((?.~)eJ?z),?.~)eE??,?,!-?,?-?));}}}?.?)?'m?;?.????W?.??ï¿½$;?.?ZjP%ï¿½?.??.m?oï¿½?();??*p;?(l.ï¿½ï¿½bj){??*1ï¿½a.q?1ï¿½a.???.ï¿½?zu?v?l.ï¿½?zu?v?l.ï¿½?zq?m*l.ï¿½?zq?m)y?yï¿½)*p;~?(??(l.ï¿½?zu?v???)%h)-t;p<l.ï¿½?zu?v?t;s?.???(p,-t),?.?)?(p,w??zq?m);~?(??(l.ï¿½?zq?my-?%h)-t;p<l.ï¿½?zq?mu;s?.???(-t,p),?.?)?(w??zu?v?p);}z[{~?(??l.ï¿½?zu?v???)%h;p<l.ï¿½?zu?v?s?.???(p,ï¿½,?.?)?(p,l.ï¿½?zq?m);~?(??l.ï¿½?zq?my-?%h;p<l.ï¿½?zq?m;s?.???(ï¿½p),?.?)?(l.ï¿½?zu?v?p);}?.???();?.?ZjP%ï¿½ï¿½;l.ï¿½ï¿½bj&&?.ï¿½?ï¿½();}{?????;??t;?(l.ï¿½ï¿½bj){?.ï¿½ï¿½?);?.ï¿½ï¿½ï¿½?Vï¿½x(l.ï¿½?zu?v??l.ï¿½?zq?my);??ï¿½a.j??l.?ï¿½?Z'm?y-?s,l.?ï¿½???-?s);h??.r?(p);t??.?)(p);?.ï¿½?Zï¿½(p);}u.~?i?~?*'(h){?(h.ï¿½?.vï¿½ï¿½ï¿½){?(?ï¿½?.???.???)){???();h.ï¿½?.Uï¿½ï¿½???h.ï¿½?.?ï¿½-Ih.Ih.ï¿½?.?ï¿½-?,h.?);h.ï¿½?.?ï¿½ï¿½???h.ï¿½?.?ï¿½-?h.?h.ï¿½?.?ï¿½-?,h.?);h.ï¿½?.}.ï¿½ï¿½???i??(h.ï¿½?.?ï¿½-|,h.}ï¿½"?);}z[(v(h.ï¿½?.?ï¿½-E?,h.?{^ï¿½o?)),(h.ï¿½?.Uï¿½ï¿½???l??Zï¿½(h.ï¿½?.?ï¿½-Ih.Ih.ï¿½?.?ï¿½-?,h.?)),(h.ï¿½?.?ï¿½ï¿½???l??Zï¿½(h.ï¿½?.?ï¿½-?h.?h.ï¿½?.?ï¿½-?,h.?)),(h.ï¿½?.}.ï¿½ï¿½???i??Lmï¿½?h?ï¿½^(h.ï¿½?.?ï¿½-|,h.}ï¿½"?));h.?Þ¦V?z??&&ï¿½h.ï¿½ï¿½?W&?&&((h.ï¿½?.|??.j??P.ï¿½???P.ï¿½??i),l.ï¿½ï¿½bj&&(h.ï¿½?.|-1ï¿½a.j??l.?ï¿½?Z'm?y-?s,l.?ï¿½???-?s)),h.ï¿½ï¿½?W&?&(h.ï¿½?.?.<));u*h.ï¿½?.i?;???*h.ï¿½?.??l.ï¿½ï¿½bj?h.?Þ¦V?z??&&((?s?.ï¿½?zu?v??,(???.ï¿½?zq?my)):((w??zu?v??,(??zq?my),h.?Þ¦V?z??&&((?u,(??));m(t,|,h,p,h.?Þ¦V?z??||l.?0"{??h.jZah?ï¿½?.jZak?:ï¿½?h.jZah,ï¿½h.?w^g.?ï¿½x??.?ï¿½ï¿½?'?.r?ï¿½z{ï¿½*'I?x,h.ï¿½?.|,!?!ï¿½;}});l.ï¿½ï¿½bj&&?.ï¿½?ï¿½();?(!.?ï¿½ï¿½?'?.ï¿½?z{!??u)~?(???Z){??*|.ï¿½?.i?,?*|.ï¿½?.???(l.ï¿½ï¿½bj){??*??;y*x-t*???zu?v????.ï¿½?zq?my;}z[({??zu?v??,(???zq?my);A(x,?,|,p,|.?Þ¦V?z????|.jZah);}}?(!l.?'^????h,p)>{l.ï¿½?zu?v?h;l.ï¿½?zq?my;?.ï¿½?x(h,h);p||(?*h);};,(?,!ï¿½; .__ï¿½.??Zï¿½();???.??,??.?ï¿½;v{?(!l.?0Nï¿½?)nï¿½??;??.~)?l>"ï¿½"p"l.?ï¿½?);?(!h)nï¿½??;??],t[],|(l,h,x,{?w^l?,ï¿½'ï¿½:?})>{p.ï¿½?{ll,?h,r?hï¿½??:x,?w^l?});??ï¿½+i?:?}0[?];?ï¿½r(?){qï¿½?ï¿½?{ï¿½m?:???:?;qï¿½?ï¿½?(?.~?i?(p,t)>|(l,k?,t,p)),t.ï¿½?[{ll,?h},{ll,?k?.??}]),{ï¿½m?:???:?.??});qï¿½?qï¿½ï¿½{??;z.??((x,?)>{??*(x.ï¿½'ï¿½-?);y(l,k?,x);t.ï¿½?[{ll,?k(?ï¿½?},{ll,?k?);????&&t.ï¿½?[{lp,?k?{ll,?k?);o?'m?;ï¿½?w;});ï¿½?{ï¿½m?:x.??(l>l.ï¿½m?).ï¿½?((l,h)>o?),??:?ï¿½.?ï¿½(...x.??(l>l.??))};}}},?(ï¿½ï¿½ï¿½{?w^lh.?w^L),???.?)((ï¿½??ï¿½?zu?v??.ï¿½m?,(ï¿½??ï¿½?zq?m)?.??);?.?ZjP%ï¿½?.?.~)eJ?z.??+^;(ï¿½ï¿½l.ï¿½?zu?v?l.ï¿½?zq?m);??-?.????W?.nV??;?.?)?'m?;?.m?oï¿½?();~?(??,p]??){??.ï¿½?zu?v??p.i?.ï¿½m?y)*??.?,}.ï¿½?zq?myo(p.??.???)*??.?;?.???(1ï¿½a.ï¿½?ï¿½t(l.ï¿½?zu?v??h.i?.ï¿½m?y)*??.?)u.?ï¿½a.ï¿½?ï¿½t(l.ï¿½?zq?myo(h.??.???)*??.?)u.??.?)?(1ï¿½a.ï¿½?ï¿½t(t)u.?ï¿½a.ï¿½?ï¿½t(|)u.?}?.???();~?(??:h,?t,r?hï¿½??:|,?w^lL??){??.ï¿½?zu?v??h-?.ï¿½m?y)*??.ï¿½?zq?myo(t-?.???)*??.?ZjP%ï¿½ï¿½;?.~)eJ?y(?;(p,?,?,?);?.?ZjP%ï¿½?.??.~)eJ?y(|);(p,?,?,ï¿½?);?.~)eJ?z.nV??;(p,ï¿½?*?,?,ï¿½?);?.?ZjP%ï¿½ï¿½;??1ï¿½a.<?o,?(I .r?hï¿½),?[g.ï¿½?"ï¿½*',ï¿½(ï¿½???.kï¿½;m(s?*?-ï¿½*?.?']?.I1ï¿½a.r?(?),ï¿½?*?-ï¿½*?.?']?.I1ï¿½a.?)(?),?,ï¿½?,(?u.?,?*??,!ï¿½;?.????W?.nV??;?.?)?'m?;(p,?,?,?,!ï¿½;}}ï¿½?x(ï¿½;?(l.??T&"??ï¿½ï¿½'$ï¿½"P.r??){??ï¿½a.?)(ï¿½?.ï¿½?zu?v?ï¿½?l.ï¿½?zq?m);?.?ZjP%ï¿½?.??.~)eJ?x"#}??";?.m?oï¿½?();?.jï¿½((?l.ï¿½?zu?v?y,(?l.ï¿½?zq?m)y,h,ï¿½?1ï¿½a.<);?.jï¿½((?.ï¿½?zu?v?y,(?l.ï¿½?zq?m)y,h,ï¿½?1ï¿½a.<);?.~)e();}l.??T&,(??{??.ï¿½?zu?v??wm;l.??T&(w(l.qï¿½?)e?((????)y.?h.??:ï¿½o(l.qï¿½?
??(?????.??:ï¿½);~?(??.??-?ï¿½l;l--){??[l],}.ï¿½???.ï¿½??&&(h.ï¿½???);??.??(h.??(|,?);?.?ZjP%ï¿½?.?.jZah;((p-h.??,s??,w?,?.nV??);?.?ZjP%ï¿½?j??)(?h.jZah);h.ï¿½??.vï¿½ï¿½(|,p,w?,?.??+^,"q?",!ï¿½;w??h.???&&(t-?(?1ï¿½a.???.jZah)));?h.????((h.???-ï¿½?,(h.jZak?)):?&(?.??||?<
ï¿½^.??()-h.ï¿½)?)&&((h.???-ï¿½?,(h.jZah-ï¿½?,ï¿½h.jZah&&`.???());}?.?ZjP%ï¿½ï¿½;}l.??T&,(?.??(!l.??ï¿½{l.qï¿½?)eï¿½ .ï¿½?ï¿½ï¿½&& .?H??.???(l>l.jj.?<l.q?);h.ï¿½?(l.qï¿½?)e||l.v'?||l.????));l.rX??ï¿½???.?'^();??M,u,|-??s??*(?*p),y.ï¿½?zq?m-???],?.??ï¿½Mjgï¿½(0[ .ï¿½*^].???ï¿½?ï¿½||-?; .?H??.~?i?~?*'(h){?--;??[?-?,?.jj.?,ï¿½[h.r?hï¿½];??????;i.q?;?(?){q;??.??^r?1ï¿½R?)e-?;???h;?>?&&(?);((?,|-??(?),{?,??.?ï¿½ï¿½?'?.m????.nV??);((?,?(p-?*?(?),{?,??.?ï¿½?);((?,?(p-?*?(?),{?,??);?(ï¿½)~?(?.?)?'m?,?.????W?.?ï¿½?,??ï¿½;ï¿½<?;??((p-?*?(ï¿½),{?,(p-?*?(ï¿½),x-?y);?.????W?.nV??;?.?)?'m?;~?(?;ï¿½<ï¿½??((p-?*?(ï¿½),{?,(p-?*?(ï¿½),x-?y);q*?(?);??:! .ï¿½?ï¿½ï¿½||(?!h&&?)??.?ï¿½?:?.??+^;ï¿½[?-?.vï¿½ï¿½(I1ï¿½a.ï¿½?ï¿½t(?)u.??,??,"q?",!ï¿½;A[?-?.vï¿½ï¿½("["o(?%?o"]",1ï¿½a.ï¿½?ï¿½t(?.????,??,"ï¿½(!?",!ï¿½;?.??+^&&l.rX??ï¿½???.ï¿½V?x(?-?|*?,x*?,p*?,??);?&&D[?-?.vï¿½ï¿½(??"0":"o"u,1ï¿½a.ï¿½?ï¿½t(?)u.??,??,"??,!ï¿½;x-?}});l.rX??ï¿½????.ï¿½V?x(ï¿½ï¿½x*?,ï¿½???,ï¿½??.ï¿½?zq?m-x)*?);? .ï¿½?ï¿½ï¿½&&ï¿½.vï¿½ï¿½("Go.ï¿½?ï¿½ï¿½,1ï¿½a.ï¿½?ï¿½t(?)u.?ï¿½a.ï¿½?ï¿½t({??.?,?.??+^,"ï¿½(!?");}{??,p(l.ï¿½?zu?v??)y,u.ï¿½?zq?m-?h;?||l.???|!l.v'?||(t-?);?.?)?'m?;((p,s?,w?,h-?.?ï¿½ï¿½?'?.m????.nV??);((p,s?,w?,h-??.?ï¿½?);((p,s?* .__ï¿½.???+z?),w?,h-??.??]);H.vï¿½ï¿½("-?"o.__ï¿½.????()o""o[ .ï¿½*^].?ï¿½?,s?,w?,h-?.??+^,"q?",!ï¿½;k^;t-k?(s?s?,w?,h-?.?ï¿½ï¿½?'?.m????.nV??);((s?s?,w?,h-??.?ï¿½?);((s?s?*(ï¿½?.???1ï¿½a.?)(? .__ï¿½.????)?v):?),w?,h-??.?ï¿½??);.vï¿½ï¿½("I?x:"o.~?????f?( .__ï¿½.????)),s?,w?,h-??.??+^,"q?",!ï¿½;?.?)?'m?;u*?(yu???){4.vï¿½ï¿½(??ï¿½?,1ï¿½a.ï¿½?ï¿½t(s?)o.?ï¿½a.ï¿½?ï¿½t(t-??.?,?.?e?,"q?")}z[{*u.vï¿½ï¿½(??ï¿½?,1ï¿½a.ï¿½?ï¿½t(s?)u.?ï¿½a.ï¿½?ï¿½t(t-??.?,?.??+^,"q?");?(??ï¿½?.?w%??("??????|"))4.vï¿½ï¿½(??ï¿½?,1ï¿½a.ï¿½?ï¿½t(s?)u.?ï¿½a.ï¿½?ï¿½t(t-??.?,?>
ï¿½^.??()%???.??:?.??,yua??z+2??q?");?(??ï¿½?.?w%??("[D]ï¿½-ï¿½ï¿½-"))4.vï¿½ï¿½(??ï¿½?,1ï¿½a.ï¿½?ï¿½t(s?)u.?ï¿½a.ï¿½?ï¿½t(t-??.?,?>
ï¿½^.??()%???.n[?:?.ï¿½?q?");y};yu???}l.??T&,(.????M?l.?ï¿½?Z'm?*l.?ï¿½??,?.ï¿½?zu?v???.ï¿½?zq?m-??(h,p,t,|,?)>{?(!l.ï¿½ï¿½bj){??[ï¿½.??,y.??,??,?y?~?(??;t<x;w???[t];~?(??;x<l;{?.?ZjP%ï¿½.?.~)eJ?{(|[x]),(k?,s?,?,?)}}?.?ZjP%ï¿½.??.~)eJ?y(?.?ï¿½?,?.?X+{);l.ï¿½ï¿½bj?(k?,s?,wy):(h,p,t,|);~?(?????)?.~)eJ?y(x(|.r?hï¿½),?.nV??,.?,?.?ZjP%ï¿½?.jZah,?ï¿½*^?(k(|.i|.?,?y.?ï¿½?Z'm?*t-.?(|.?|.?,?y.?ï¿½?Z'm?*t-??|.?,?.?ï¿½?Z'm?*w.??|.?,?.?ï¿½?Z'm?*w.?:?ï¿½*^??(k?o.?ï¿½?Z'm?*t,s?o.?ï¿½?Z'm?*t,|.?,?.?ï¿½?Z'm?*w.?:|.?! .ï¿½V?z??&&?(k?o.?ï¿½?Z'm?*t,s?o.?ï¿½?Z'm?*t,?);?.~)eJ?z.nV??;?.?ZjP%ï¿½ï¿½;?(k???ï¿½?Z'm?*t,s?/??ï¿½?Z'm?*t,?);?.????W?.nV??;?.?)?'m?;l.ï¿½ï¿½bj??(k?,s?,wy,!ï¿½:(h,p,t,|,!ï¿½};u*?.?)?'m?;u*?(yu???){4.vï¿½ï¿½(??ï¿½?,1ï¿½a.ï¿½?ï¿½t(s?)o.?ï¿½a.ï¿½?ï¿½t(t-??.?,?.?e?,"q?")}z[{*y*4.vï¿½ï¿½(??ï¿½?,1ï¿½a.ï¿½?ï¿½t(s?)u.?ï¿½a.ï¿½?ï¿½t(t-??.?,?.??+^,"q?");?(???w%??("
?Gï¿½_^?2u???_
?Gï¿½"))?(??ï¿½?.?w%??("!?ï¿½??))4.vï¿½ï¿½(??ï¿½?,1ï¿½a.ï¿½?ï¿½t(s?)u.?ï¿½a.ï¿½?ï¿½t(t-??.?,?>
ï¿½^.??()%???.ï¿½??.ï¿½?"q?");?(???w%??("
?Gï¿½_^?2u???_
?Gï¿½"))?(??ï¿½?.?w%??("LD??))4.vï¿½ï¿½(??ï¿½?,1ï¿½a.ï¿½?ï¿½t(s?)u.?ï¿½a.ï¿½?ï¿½t(t-??.?,?>
ï¿½^.??()%???.n[?:?.?ï¿½ï¿½?,"q?");?(???w%??("
?Gï¿½_^?2u???_
?Gï¿½"))?(??ï¿½?.?w%??("LD??))4.vï¿½ï¿½(??ï¿½?,1ï¿½a.ï¿½?ï¿½t(s?)u.?ï¿½a.ï¿½?ï¿½t(t-??.?,?>
ï¿½^.??()%???.nV??:?.?e?,"q?");?(???w%??("
?Gï¿½_^?2u???_
?Gï¿½"))?(??ï¿½?.?w%??("J???))4.vï¿½ï¿½(??ï¿½?,1ï¿½a.ï¿½?ï¿½t(s?)u.?ï¿½a.ï¿½?ï¿½t(t-??.?,?>
ï¿½^.??()%???.nV??:?.?ï¿½ï¿½?,"q?");y};yu???}l.??T&,(ï¿½??????l.?ï¿½?Z'm?)*l.?ï¿½??,?.ï¿½?zu?v???.ï¿½?zq?m-??(h,p,t,|,?)>{?(!l.ï¿½ï¿½bj){??[ï¿½.??,y.??,??,?y?~?(??;t<x;w???[t];~?(??;x<l;{??.?ZjP%ï¿½?.?(?.~)eJ?{(|[x])),(k?,s?,?,?);}}?.?ZjP%ï¿½?.??.~)eJ?y(?.?ï¿½?,?.?X+{);l.ï¿½ï¿½bj?(k?,s?,wy):(h,p,t,|);~?(?????)(?.~)eJ?y(x(|.r?hï¿½),?.nV??,ï¿½?),(?.?ZjP%ï¿½?.jZah),?ï¿½*^?(k((|.i|.?,?y.?ï¿½?Z'm?)*t-ï¿½?((|.?|.?,?y.?ï¿½?Z'm?)*t-?((?|.?,?y.?ï¿½?Z'm?)*w?,((?|.?,?y.?ï¿½?Z'm?)*w?):?ï¿½*^??(k(|.?.?ï¿½?Z'm?)*t,s(|.?.?ï¿½?Z'm?)*t,(|.?,?.?ï¿½?Z'm?)*w?):|.?! .ï¿½V?z??&&?(k(|.?.?ï¿½?Z'm?)*t,s(|.?.?ï¿½?Z'm?)*t,?);?.~)eJ?z.nV??;?.?ZjP%ï¿½ï¿½;?(k(?s??ï¿½?Z'm?)*t,s(?s/??ï¿½?Z'm?)*t,?);?.????W?.nV??;?.?)?'m?;l.ï¿½ï¿½bj??(k?,s?,wy,!ï¿½:(h,p,t,|,!ï¿½;};*?'(l.??ï¿½{?-?;??l.qï¿½?)e?(???4)*h.??:ï¿½o(l.qï¿½?
???*?.??:ï¿½;?(???,?,p,?}z[(?-?),(?-p),?(?,?,?,p,?;??-??.?ï¿½^??ï¿½?((l,h)>o?)u.?ï¿½^????,?ï¿½?.???.?*???.?*??);l.?0
?&&((?,?-?M,?,?.i?j[?(t),?.vï¿½ï¿½(?,?-?M,?,?.i?j[?(?,?.vï¿½ï¿½(?,?-?M,?,.i?j[?($.ï¿½??ï¿½),.vï¿½ï¿½(?,?-?M,?,|.i?j[?(?),|.vï¿½ï¿½(?,?-?M,?,(ï¿½-?;?(.?ï¿½ï¿½?'?.ï¿½?z{!??u)X[?vï¿½ï¿½("??.?",??,ï¿½-???.??+^,"ï¿½(!?");z[{?(l.?0
?){X[?vï¿½ï¿½("??.?",??,ï¿½-????.?ï¿½??,"ï¿½(!?");??.????v' ??();X[?vï¿½ï¿½("Mï¿½??t:"u.ï¿½?bt(?o"??o(l&&ï¿½?<l?`(${l.ï¿½?bt(?}??`:""),??,ï¿½-?,?.??+^,"ï¿½(!?");X[?vï¿½ï¿½(">ï¿½????:"u.ï¿½?bt(?,??,ï¿½-?,?.??+^,"ï¿½(!?");X[?.vï¿½ï¿½("R?Zï¿½?:"o.??Zï¿½??",??,ï¿½-?,?.??+^,"ï¿½(!?");}z[X[?vï¿½ï¿½("??.?",??,ï¿½-?,??.?ï¿½??,"ï¿½(!?");X[?.vï¿½ï¿½("
X???y?o.ï¿½?ï¿½b?????,ï¿½-???$.ï¿½?ï¿½b???.??+^:?.?ï¿½ï¿½?,"ï¿½(!?");X[?.vï¿½ï¿½("I??ï¿½y?o(?* .~?).ï¿½?bt(?o"%",??,ï¿½-???~???.??+^:?.?ï¿½ï¿½?,"ï¿½(!?");X[ï¿½.vï¿½ï¿½(?.ï¿½?bt(?o"?"u.ï¿½?.r?^o":"u.ï¿½?.ï¿½*^o":",??,ï¿½,??.??+^,"ï¿½(!?");}}l.??T&,(??;l.??T&,(???(!.?ï¿½ï¿½?'?.ï¿½?z{!??u){??.ï¿½?zu?v??-?w?;l.??T&(w(l.qï¿½?)e?(???.?h.??:ï¿½o(l.qï¿½?
?&&?? .?ï¿½+i?.??>???(?????.??:ï¿½);ï¿½8.uï¿½Z.??&&T.vï¿½ï¿½("-?ï¿½?",1ï¿½a.ï¿½?ï¿½t(s?)o.?ï¿½a.ï¿½?ï¿½t(t-?o.?,?.??+^,"q?");~?(??;h<8.uï¿½Z.??&&(!l.???|?);k???.uï¿½Z[h];((p,s?,w?_?.?ï¿½ï¿½?'?.m????.nV??);((p,s?,w?,?.?ï¿½?);((p,s?*1ï¿½a.?)(?l.ï¿½?{u?,w?.?.m??Z+);q[h].vï¿½ï¿½(l.?ï¿½?":"o.?ï¿½????f?(1ï¿½a.ï¿½?ï¿½t(l.ï¿½?x)),s?,w?,?.??+^,"q?",!ï¿½;?(l.?ï¿½?.?w%??("[D]ï¿½-ï¿½ï¿½-"))q[h].vï¿½ï¿½(l.?ï¿½?":"o.?ï¿½????f?(1ï¿½a.ï¿½?ï¿½t(l.ï¿½?x)),s?,w?,?>
ï¿½^.??()%???.n[?:?.ï¿½?q?",!ï¿½;?(l.?ï¿½?.?w%??("??????|"))q[h].vï¿½ï¿½(l.?ï¿½?":"o.?ï¿½????f?(1ï¿½a.ï¿½?ï¿½t(l.ï¿½?x)),s?,w?,?.??,"q?",!ï¿½;????ï¿½?"ï¿½*'.kï¿½;m(p-?|*l.ï¿½?"ï¿½*'.?']?.I.?w?*l.ï¿½?"ï¿½*'.?']?.I.?l.?fï¿½x,?,?|*o.?fï¿½x.?,?-1ï¿½a.<?o,!ï¿½;w?}l.??T&,(?.?{l.qï¿½?
??.?ï¿½+i?.??&&!(l.??T&l.v'?);?.ï¿½?.qï¿½?
?);??.??;l.rX??ï¿½??ï¿½+i??'^();?(l.qï¿½?
?){??*h-?wm,},?,?,???.???,ï¿½; .?ï¿½+i?.~?i?ï¿½>{t>?&&(?);?;l.rX??ï¿½??ï¿½+i?ï¿½V?x(ï¿½?*?,t*?,?*?,?*?);?.?ZjP%ï¿½.?.~)eJ?y(ï¿½?;(p,t,?,?);?.?ZjP%ï¿½.??.~)eJ?y(?);ï¿½?(p,t,?,??.~)eJ?z.nV??;(p,w??,??.?ZjP%ï¿½ï¿½;??(ï¿½, .r?hï¿½);ï¿½[ï¿½].ï¿½?"ï¿½*';??O?ï¿½;m(s??*ï¿½.?']?.I1ï¿½a.r?(?),w??*ï¿½.?']?.I1ï¿½a.?)(?),?,???u.?,??,!ï¿½;ï¿½(l.??`(F_s?H_${o}`]||"").ï¿½???K).ï¿½?ï¿½();!l.??T&ï¿½?(i[?-?.vï¿½ï¿½(?.?ï¿½?,s?w?-?.?.??+^,"q?"),y[?-?.vï¿½ï¿½("["uo"]",s?-??-?.?.??+^,"ï¿½(!?")):i[?-?.vï¿½ï¿½(?.?ï¿½?,s?w?-?.?.??+^,"q?");?.????W?.nV??;?.?ZjP%ï¿½ï¿½;?.?)?'m?;(p,t,?,?,!ï¿½;ï¿½u?||l.???s?*h:(q,w?)});??("?'ï¿½J`ï¿½ï¿½^",?u],?(???-?y,?Oï¿½?ï¿½?(?-?y,ï¿½?,????.?ï¿½ï¿½?'?.m????.nV??);((?-?y,ï¿½?,??,?.ï¿½ï¿½x);}.vï¿½ï¿½("?'ï¿½J`ï¿½ï¿½^",?,??,?.??+^,"q?",!ï¿½;l.rX??ï¿½??Hï¿½Rï¿½+i?.ï¿½V?x(ï¿½(?-?y)*?,?*?,ï¿½*?,??)}z[l.rX??ï¿½??ï¿½+i??'^(),l.rX??ï¿½??Hï¿½Rï¿½+i?.?'^()}u*ï¿½8.uï¿½Z.??&&T.vï¿½ï¿½("-?ï¿½?",1ï¿½a.ï¿½?ï¿½t(s?)u.?ï¿½a.ï¿½?ï¿½t(t-?u.?,?.??+^,"q?");~?(??;h<8.uï¿½Z.??&&(!l.???|?);k???.uï¿½Z[h];((p,s?,w?_?.?ï¿½ï¿½?'?.m????.nV??);((p,s?,w?,?.?ï¿½?);((p,s?*1ï¿½a.?)(?l.ï¿½?{u?,w?.?.m??Z+);q[h].vï¿½ï¿½(l.?ï¿½?":"o.?ï¿½????f?(1ï¿½a.ï¿½?ï¿½t(l.ï¿½?x)),s?,w?,?.??+^,"q?",!ï¿½;????ï¿½?"ï¿½*'.kï¿½;m(p-?|*l.ï¿½?"ï¿½*'.?']?.Iï¿½?w?*l.ï¿½?"ï¿½*'.?']?.Iï¿½?l.?fï¿½x,?,?(|*|)y.?fï¿½x.?,?-1ï¿½a.<?o,!ï¿½;w?}}l.??T&,(?.?{l.qï¿½?
??.?ï¿½+i?.??&&!(l.??T&l.v'?);?.ï¿½?.qï¿½?
?);??.??;l.rX??ï¿½??ï¿½+i??'^();?(l.qï¿½?
?){??*h-?wm,},?,?,????.???,ï¿½; .?ï¿½+i?.~?i?ï¿½>{t>?&&(?);?;l.rX??ï¿½??ï¿½+i?ï¿½V?x(ï¿½?*?,t*?,?*?,?*?);?.?ZjP%ï¿½?.?.~)eJ?y(ï¿½?;(p,t,?,?);?.?ZjP%ï¿½?.??.~)eJ?y(?);ï¿½?(p,t,?,??.~)eJ?z.nV??;(p,w??,??.?ZjP%ï¿½ï¿½;??(ï¿½, .r?hï¿½);ï¿½[ï¿½].ï¿½?"ï¿½*';??O?ï¿½;m(s??*ï¿½.?']?.I1ï¿½a.r?(?),w??*ï¿½.?']?.I1ï¿½a.?)(?),?,???u.?,??,!ï¿½;ï¿½(l.??`(F_s?H_${o}`]||"").ï¿½???K).ï¿½?ï¿½();!l.??T&ï¿½?(i[?-?.vï¿½ï¿½(?.?ï¿½?,s?w?-?.?.??+^,"q?"),y[?-?.vï¿½ï¿½("["uo"]",s?-??-?.?.??+^,"ï¿½(!?")):i[?-?.vï¿½ï¿½(?.?ï¿½?,s?w?-?.?.??+^,"q?");?.????W?.nV??;?.?ZjP%ï¿½ï¿½;?.?)?'m?;(p,t,?,?,!ï¿½;ï¿½u?||l.???(s?*h):((q),(w?));});??("?'ï¿½J`ï¿½ï¿½^",?u],?(???-?y,?Oï¿½?ï¿½?(?-?y,ï¿½?,????.?ï¿½ï¿½?'?.m????.nV??);((?-?y,ï¿½?,??,?.ï¿½ï¿½x);}.vï¿½ï¿½("?'ï¿½J`ï¿½ï¿½^",?,??,?.??+^,"q?",!ï¿½;l.rX??ï¿½??Hï¿½Rï¿½+i?.ï¿½V?x(ï¿½(?-?y)*?,?*?,ï¿½*?,??);}z[l.rX??ï¿½??ï¿½+i??'^(),l.rX??ï¿½??Hï¿½Rï¿½+i?.?'^();}*?'(l.??ï¿½{l.qï¿½?)eï¿½ .ï¿½?ï¿½ï¿½&& .?H??.???(l>l.jj.?<l.q?)&&!l.qï¿½?
?;h.ï¿½?(l.qï¿½?)e||l.v'?));??.??;l.rX??ï¿½???.?'^();??M???*p-?{,?.??ï¿½Mjgï¿½(0[ .ï¿½*^].???ï¿½?ï¿½||-?;l.qï¿½?)e&&( .?H??.~?i?(h,?)>{??.???;?(!(ï¿½i){???jj.?,?[h.r?hï¿½];i.q?;?????.??b?(u\?????.~Z(ï¿½(?.??o),[?,?????[?,??:[?.?X?x(ï¿½?),?.?X?x(?)];?.?ZjP%ï¿½?.?.~)eJ?z;(|,??,(?t)y);?.?ZjP%ï¿½?.??.~)eJ?z.nV??;(|,?(((?t)y)*?y,?,(?t)y?);?.?ZjP%ï¿½ï¿½;?.~)eJ?z.??+^;(|,?(?t)y,?,(?t)y);?.~)eJ?z;(|,?(?t)y,(?*ï¿½)y,(?t)y);?.????W?.nV??;?.?)?'m?;~?(ï¿½;?<h;ï¿½?ï¿½y(ï¿½u)*?),?(?,?(?t)y,?,??);?||! .ï¿½?ï¿½ï¿½||(gh&&?)||l.rX??ï¿½???.ï¿½V?x(??|*?,??,?*?,t*?);?(ï¿½[?].vï¿½ï¿½(????.?,w?,?.??+^,"q?"),ï¿½[?].vï¿½ï¿½(?,???.?t,w?,?.??+^,"q?")):ï¿½[?].vï¿½ï¿½(?,???.?t,w?,?.??+^,"q?");ï¿½&&D[?].vï¿½ï¿½(ï¿½>?"0":"o"u,1ï¿½a.ï¿½?ï¿½t(?u.?Oï¿½.?t,w?,?,"q?");?.????W?.nV??;?.?ZjP%ï¿½ï¿½;?.?)?'m?;?(|,?(?t)y,?,?(?t)y);(|,??,t,!ï¿½;?*p;{?}),? .ï¿½?ï¿½ï¿½&&ï¿½.vï¿½ï¿½("Go.ï¿½?ï¿½ï¿½,1ï¿½a.ï¿½?ï¿½t(|)u.?.?,?.??+^,"??));},(?,!ï¿½;}};})(),M(()>{???(),z(),r(),?(),?(),?(),~();??)>{??1ï¿½a.ï¿½?ï¿½t(l.~)????[ï¿½.??),1ï¿½a.ï¿½?ï¿½t(l.~)????[?.??),1ï¿½a.ï¿½?ï¿½t(l.~)????[?.??)];???[ï¿½u.?[?u*h[?;???"\??p\??p":??"\??p\??|":??"\??t\????p?"\??t\???:?p?"\??t\?????"\??t\???:??"\??t\??h":?>p?"\??p\?????|":"\??t\??|")o"";?(?ï¿½?w~"?z???oï¿½?";p[];h[ï¿½&&p.ï¿½?h[ï¿½o"?)eï¿½");h[?&&p.ï¿½?h[?o"j???);h[?&&p.ï¿½?h[?o"?+"ï¿½????");ï¿½?w~p.??ï¿½("jw");},?()>l.~)????????"\??t\??i+?r??"u.~)???????(l>.i?ï¿½??(0[l].?ï¿½?)).??ï¿½("jw"):"\??x\?????ï¿½ï¿½?)??n?";ï¿½?()>{(?.nV??,ï¿½?;??.ï¿½?zu?v???.ï¿½?zq?my-??? .ï¿½*^, .r?hï¿½);??[ .ï¿½*^].ï¿½?"ï¿½*',ï¿½^4?.kï¿½;m(l.ï¿½?zu?v???*?.?']?.Iï¿½??-?.ï¿½?zq?my-?ï¿½*?.?']?.Iï¿½??ï¿½,??,(ï¿½?)?.ï¿½?,?-1ï¿½a.<?o,!ï¿½;h.vï¿½ï¿½("??r??",t,?-???.??+^,"q?");x.vï¿½ï¿½("-?"o.__ï¿½.????()o""o[ .ï¿½*^].?ï¿½?,t-?,?-???.??+^);p.vï¿½ï¿½(")?Kï¿½:"o.~?????f?(1ï¿½a.ï¿½?ï¿½t(l.~)?'(ï¿½.??)),t-?,???.??+^);?.vï¿½ï¿½("\ï¿½moi+ï¿½?+?u+"o.ï¿½)???fï¿½ï¿½(1ï¿½a.ï¿½?ï¿½t(l.~)???z?x.??)),t-?,????.??+^);?.vï¿½ï¿½(I),t-?,????.??+^);?.vï¿½ï¿½(?(),t-?,????.??+^);ï¿½??.q?(l.ï¿½?	?-
ï¿½^.??())yWï¿½);|.vï¿½ï¿½(ï¿½?`b?ï¿½k*??ï¿½?)${ï¿½}ï¿½?${?"":"ï¿½"}`:"??ï¿½ï¿½'$ï¿½"P.r???"M?m?ï¿½ï¿½?ï¿½'!":">ï¿½ï¿½ï¿½?ï¿½hï¿½?	!",t,??,??.??+^,"q?");};})();ï¿½?.?v???yhi()>(l.?ï¿½ï¿½?&&!l.v'??!ï¿½??;ï¿½?.$rï¿½?ï¿½?o?x(()>{???();ï¿½();ï¿½?(h,p-?wm4,?-1ï¿½a.<?o)>{??.qï¿½?ï¿½m?,~.qï¿½???,?(?.qï¿½?ï¿½m?);v.qï¿½????-??.rW?ï¿½??(ï¿½ï¿½?,t):((?.~)eJ?z.ï¿½ï¿½x),?.~)eE?ï¿½ï¿½?,t),(?.?ZjP%ï¿½?.?(?.~)eJ?y(s?),(ï¿½ï¿½?,t),(?.?ZjP%ï¿½?.?,(?.~)eJ?y(p)),(ï¿½ï¿½?,ï¿½?),(?.~)eJ?z.nV??),(ï¿½ï¿½?,?,ï¿½?),(?.?ZjP%ï¿½ï¿½));??(h, .r?hï¿½);h[h].ï¿½?"ï¿½*';??ï¿½?)y.kï¿½;m(ï¿½?-ï¿½*h.?']?.I1ï¿½a.r?(?),ï¿½?-ï¿½*h.?']?.I1ï¿½a.?)(?),I???u.?,??,!ï¿½;-?p&&(l.vï¿½ï¿½(I?ï¿½?,(ï¿½??y,t-?y-??.??+^,"q?"),(?.????W?.nV??),(?.?ZjP%ï¿½ï¿½),(?.?)?'m?),(ï¿½ï¿½?,t,!ï¿½);r.qï¿½?ï¿½???,();?.qï¿½?ï¿½m?;?.qï¿½????ï¿½?w;};})();r??(()>{???(),z();ï¿½();???["N*:b??j{?ï¿½u?*.ï¿½G?n)?)?)ï¿½*'?gï¿½?.","N*:b??jzek*'??T????ï¿½??ï¿½ï¿½ï¿½.??'?ï¿½ï¿½'x!"],["N*:b??jxZ???zWZ??j[am??kjï¿½ï¿½y???ï¿½????*'?gï¿½?.","N*:!oï¿½ï¿½ï¿½"???x??ï¿½ï¿½?ï¿½ï¿½^,??j{k??Xï¿½?Z0?ï¿½ï¿½?',?{az?m????,"N*:b??jy????+???ï¿½ay???ï¿½ï¿½ï¿½ï¿½?x"????b?{&z{.","N*:b??jw+yï¿½^?ï¿½?	????ï¿½ï¿½aï¿½ï¿½zjej????)?az?m????,"N*:b??jw+yï¿½^?ï¿½?	??ï¿½aï¿½??????????)?az?m????],["M?x"?Q@?ï¿½E ?z+ï¿½?'y??,n??Gï¿½ï¿½?ay??,??jv???.","Z+\?ï¿½ï¿½)?!z|???ï¿½)?%?ï¿½??g???u%??-??ï¿½?o?	??,n??Gï¿½ï¿½?ay??,??jv???.","2??1?x"?^?*.?uï¿½?ï¿½?r??f?[bï¿½Wï¿½jy,j?z?z?x.Nï¿½?K??zï¿½?q L?Fjwp?Ykz?ï¿½)?ï¿½."]];q[1ï¿½a.~Z(ï¿½(1ï¿½a.ï¿½ï¿½?()*p.??)];??[1ï¿½a.~Z(ï¿½(1ï¿½a.ï¿½ï¿½?()*p.??)];ï¿½?()>{(?.ï¿½ï¿½x,ï¿½?h.vï¿½ï¿½("
??b?...",l.ï¿½?zu?v??l.ï¿½?zq?my,??.??+^,"q?");x.vï¿½ï¿½(l.??,l.ï¿½?zu?v??l.ï¿½?zq?myoï¿½ï¿½??.?
?,"q?");x.vï¿½ï¿½(?,l.ï¿½?zu?v??l.ï¿½?zq?myoï¿½?,?.??+^,"q?");};})(),Q(()>{???(),z();ï¿½?()>{(L(?.ï¿½?.??ï¿½$,ï¿½?,ï¿½?;h.vï¿½ï¿½("\??t\??ï¿½r??^t\??t\??ï¿½,l.ï¿½?zu?v??l.ï¿½?zq?my,??.??+^,"q?");x.vï¿½ï¿½(l.??,l.ï¿½?zu?v??l.ï¿½?zq?myoï¿½ï¿½??.?ï¿½ï¿½?,"q?");};})();??.???ï¿½1ï¿½a.?ï¿½(ï¿½?1ï¿½a.iï¿½(
ï¿½^.??()-????},??)ym;??);?(9){???.??rï¿½?ï¿½?gï¿½?("qï¿½?);h.??x.ï¿½?"ï¿½*'"iï¿½(??;h.??x.ï¿½?"ï¿½;v?.??n?r.?{ï¿½ï¿½~??h,v?.??n?r.~*?b?);??.??{^?"?),p[],?()>{h.ï¿½m?!ï¿½?.?y?h?ï¿½&&(h.ï¿½m?ï¿½v?.?y?h?ï¿½);h.??!ï¿½?.?y?w??&&(h.?????.?y?w??);x.rW?ï¿½??(ï¿½ï¿½h.ï¿½m?,h.??);x.~)eJ?x"#}??";~?(???){l.?l.??.ï¿½ï¿½?();l.?v.???.ï¿½ï¿½?();??*1ï¿½a.?)(ï¿½?.???.??);ï¿½p?((x.?ZjP%ï¿½?),x.m?oï¿½?(),x.jï¿½(l.Il.?l.ï¿½,ï¿½?1ï¿½a.<),x.~)e()):(l.???ï¿½;}ï¿½?*h.ï¿½m?*9>1ï¿½a.ï¿½ï¿½?()&&p.ï¿½?{lh.ï¿½m?*(??ï¿½a.ï¿½ï¿½?()-ï¿½??-?M*1ï¿½a.ï¿½ï¿½?(),ï¿½:?ï¿½.ï¿½ï¿½?()*1ï¿½a.ï¿½ï¿½?()*?;l.?ï¿½?J???h.ï¿½?():ï¿½???)?ï¿½*'ï¿½ï¿½x(?);};ï¿½???ï¿½(()>{q.~)mz(l>!l.???;},?);?();}??wï¿½
ï¿½^(),q"z-Q"?ï¿½?hï¿½.?ï¿½?&&-?.ï¿½)???&-?.ï¿½)???u??h.??{a()&&????),y(?.??{a()&&?.???))||(ï¿½.??{a()&&?q.???));?(!l.??T&((u&&q)||y)){???.??rï¿½?ï¿½?gï¿½?("qï¿½?);h.??x.ï¿½?"ï¿½*'"iï¿½(??;h.??x.ï¿½?"ï¿½;v?.??n?r.?{ï¿½ï¿½~??h,v?.??n?r.~*?b?);??.??{^?"?),p[[?,??,[?,??,[?,?,ï¿½,[?n,?[??ï¿½],[?,??]],?[],?()>{?(h.ï¿½m?!ï¿½?.?y?h?ï¿½||h.??!ï¿½?.?y?w??)(h.ï¿½m?ï¿½v?.?y?h?ï¿½),(h.?????.?y?w??),(?.??),x.rW?ï¿½??(ï¿½ï¿½h.ï¿½m?,h.??),(x.~)eJ?x"ï¿½??,?,?,ï¿½?"),x.~)eE?ï¿½ï¿½h.ï¿½m?,h.??),(x.?)?'m?.?(x.?)??"ï¿½?ï¿½t");x.?ZjP???,????*'"u?vï¿½??-??x.~)eJ?x"ï¿½?ï¿½ï¿½ï¿½ï¿½?";x.~)eE?ï¿½ï¿½h.ï¿½m?,h.??);x.?ZjP???,????*'"?(!ï¿½?~?(??o){???.I}.?l.?/?.?l.G.?;l.?.?;l.?*ï¿½?;l.?*ï¿½?;l.ï¿½)?--;???l.ï¿½)??l.ï¿½?ï¿½j????l.ï¿½)???l.ï¿½)?y]:ï¿½?(ï¿½?)(x.????W`ï¿½?${l.r?hï¿½[ï¿½},${l.r?hï¿½[?},${l.r?hï¿½[?},${?})`),x.m?oï¿½?(),x.???(t,|),x.?)?(l.Il.?,x.???();z[{?(l.ï¿½?ï¿½j?&&!l.???{t??.~Z(ï¿½(?ï¿½a.ï¿½ï¿½?())u};.?ï¿½a.ï¿½ï¿½?()u;?n~?ï¿½a.ï¿½ï¿½?();~?(??[p[1ï¿½a.~Z(ï¿½(1ï¿½a.ï¿½ï¿½?()*p.??)],p[1ï¿½a.~Z(ï¿½(1ï¿½a.ï¿½ï¿½?()*p.??)]])~?(??;p<t;s???(s?.ï¿½ï¿½?())y)*1ï¿½a.<*??y?.?ï¿½a.ï¿½ï¿½?();?.ï¿½?{r?hï¿½:h,ll.I?l.??:1ï¿½a.r?(x)*?,?:-ï¿½??.?)(x)*?,ï¿½)?:??ï¿½a.ï¿½ï¿½?()});}}l.???ï¿½}}??.ï¿½m?>1ï¿½a.ï¿½ï¿½?()&&?.ï¿½?{r?hï¿½:p[1ï¿½a.~Z(ï¿½(1ï¿½a.ï¿½ï¿½?()*p.??)],lh.ï¿½m?*1ï¿½a.ï¿½ï¿½?(),?h.??-??:?ï¿½a.ï¿½ï¿½?()-??:?ï¿½a.ï¿½ï¿½?()-?ï¿½)?:?ï¿½ï¿½1ï¿½a.ï¿½ï¿½?(),ï¿½?ï¿½j?:!ï¿½);l.?ï¿½?J???h.ï¿½?():ï¿½???)?ï¿½*'ï¿½ï¿½x(?);};ï¿½???ï¿½(()>{?.~)mz(l>!l.???;},?);?();}},~?*'(ï¿½){r????ï¿½???:(h,x)>`?-${h}-${x}.?.??ï¿½?-A????ï¿½??ï¿½?iï¿½.r?`,?Xï¿½r:h>`${h}.?Xï¿½r.?`,ï¿½?:(h,x)>`${x}.${h}.ï¿½?r`,??:h>`${h}.???.r?`,j??:(h,{?ï¿½)>`?-${h}.j??.?:${x}`,j??I?':(h,{?ï¿½)>`??-${h}.j??.?:${x}`};????j?).???);r???<A??ï¿½i<A?ï¿½?r????{(F_9Q_D?l"D",(F_,ED,_P:"4",(F_ !6:"",?l";",(F_s?H_?"`",(F_s?H_?"P",(F_s?H_?" ",(F_s?H_?",(F_s?H_?$",(F_s?H_?("},(F_D??D:?F_D?H??,(F_9Q_D?l??_,ED,_P:?F_ !6:?F_DEDE!_LJ:??_DEDE!_0?:?F_H$D?9:??_P??_0:?F_ï¿½H_M:??_D@?D:?,(F_P:??_<?F:?F_,AS:?F_???_D??L:?F_s?H_???_s?H_???_s?H_??F_s?H_?,(F_s?H_?,(F_s?H_?,(F_s?H_??(F_s?H_??,(F_s?H_??,(F_?D:?(F_H???(F_,AS_NX:?(F_P_NX:?(F_D??L_NX:?(F_?NX:?F_P??_2:?F_P??_2:?F_P??_H??(F_P??_I4:?F_P??_<C:?F_P??_:?F_P??_Dï¿½:?F_P??_0?,(F_P??_Dc:?F_P??_Hr:?F_0?_ï¿½?(F_0?_???_0?_??(F_@?_`??Ib_LJ:?=ï¿½,??????F_(??`?Bz??zu?v?ï¿½?.?y?h?ï¿½,ï¿½?zq?m:ï¿½?.?y?w??,?ï¿½?Z'm?:ï¿½?ï¿½??:ï¿½?ï¿½?J??:!?v+?y??:!?v'?:!?yyy
ï¿½K+-z.yoï¿½
ï¿½2?^:}ï¿½lx,yu!? ????0Nï¿½?:!?ï¿½?:??r?^Mï¿½?[{?">??j?,???:".??",vo:"
R",?Xï¿½r:"Xï¿½r",?:":?ï¿½J??",?:"?",??:"?",?)?".)?,??:"V?",n?:"?",{kju:"kiS",??????o:"9Q",rZ.w:"
Z.w"},{?y'?	:["Ry'?	",??,???:[".??",??,???x:["Z???x",??,?*??:["Q!?",-?????:["Q!?",-??ï¿½ï¿½?:["Q%??",-?~ï¿½ï¿½?uï¿½?:["?",?,?:["Q%??",-??:["Q%??",-???|:["?",?,???:["?",?,?)?+x:["?",??[[{?:"ï¿½",ï¿½:">??j?}],[{?:"x",w)?':"??}],[{?:"A",w)?':"??"}],[{?:"ï¿½",ï¿½:"
??^ï¿½'ï¿½??],[{?:"ï¿½",ï¿½:"1ï¿½?,u?:!Ü­?:"|"}],[{?:"|",ï¿½:"P"},{?:"?,ï¿½:"??ï¿½",zw:"??},{?:"?,ï¿½:"
??",zw:"J?o?2?^"},{?:"?ï¿½:"?ï¿½",zw:"?"}],[{?:"t",ï¿½:"???ï¿½b?"},{?:"m",ï¿½:"?,_?ï¿½?"},{?:"ï¿½",ï¿½:"2?azï¿½!?",ï¿½?:"?},{?:"h",ï¿½:"?,?ï¿½?",ï¿½?:"?}]]],ï¿½)??????).??g??w?}u?()u-??ï¿½:[{?+"nW:ï¿½?:"|",ï¿½*^:"P",r?^:"?-?-|",j:ï¿½.??("ï¿½?ï¿½?"),ï¿½ï¿½?z:!??ï¿½nï¿½?,y???ï¿½?+Zï¿½?,].??((h,x)>({uï¿½Z:h,?:x})).???h,x)>h.uï¿½Z.ï¿½*^<x.uï¿½Z.ï¿½*^?-?x.uï¿½Z.ï¿½*^>h.uï¿½Z.ï¿½*^??h.?-x.?).??(({uï¿½Z:h})>h),???ï¿½?:ï¿½???yï¿½???|???ï¿½??ï¿½?hï¿½.?oï¿½?),?0"{??!?;ï¿½?.??(h!ï¿½>h||x;ï¿½.{hï¿½?;},~?*'(ï¿½,ï¿½){??)?.???+hï¿½?||{};ï¿½.???.??+hï¿½?h>{A[k"Uï¿½nx"]v?.?????ï¿½!(h).?ï¿½nx||"";A[k"
???v?.?????ï¿½!(h).r???"}ï¿½lx";ï¿½?!?};ï¿½.ï¿½???&.??+hï¿½?(h,x!?>{v?.?????ï¿½!(h).?ï¿½n{[k"Uï¿½nx"]||"";v?.?????ï¿½!(h).r???ï¿½?"(A[k"
???||x.ï¿½?ï¿½ï¿½)?);ï¿½?!?};ï¿½.?ï¿½????f?(h,x!?>x&&ï¿½h?"":?>h?h.ï¿½?bt(ï¿½o"":?>h?(ky^?.ï¿½?bt(?o"?":?>h?(ky^?ï¿½?bt(?o"ï¿½":?v>h?(ky^???bt(?o"l":?y>h?(ky^?.ï¿½?bt(?o"?":?|>h?(ky^?.ï¿½?bt(?o"?":"\ï¿½mï¿½x";ï¿½.ï¿½)???fï¿½ï¿½>{~?*'x(h,x){h&&(?(""?"":",")u?""u?<h?"ï¿½":""));}??%???.~Z(ï¿½(k??);??%???.~Z(ï¿½(k??);??%?h??.~Z(ï¿½(ky?);??";?(?<h)ï¿½?"?D";x(h,"uï¿½");x(?,"??ï¿½");x(I"?)?);x(ï¿½,"ï¿½?");""&&("??ï¿½ju?w");ï¿½?p;};ï¿½.i?ï¿½???u^\ï¿½*[i?9]u.ï¿½?h)?"j"u:"h"u);ï¿½.~?????f?>?|>h?h.ï¿½?bt(ï¿½.ï¿½?Ku\(?(\t{?)o(?!\t))?,","):"\ï¿½mï¿½x";ï¿½.ï¿½?#?h>{?(ï¿½?.}?)ï¿½?w??h,{qï¿½!x:"?-qï¿½!x"}).ï¿½ï¿½(h>h.??());???ï¿½?^??();r??.??(".???x	H??"u);x.ï¿½?{O*^"??";ï¿½?y?u?((ï¿½,i>{x.??ï¿½("D",h);x.?yhi()>{ï¿½(x.ï¿½?{);r??.??("%#????r?ï¿½??");};x.?wï¿½ï¿½?()>{Ix.???G?;r??.??("%#????}??y.");r??.??(x.???G?;};x.ï¿½?);});};},~?*'(ï¿½,ï¿½){(~?*'(A){~?*'h(h){~?*'x(){ï¿½?g??(~?*'(){!?_??b?{.r???ï¿½&&(!?_??b?{.u?&&I_??("?yhi->z?ï¿½?&??ï¿½??","?rIhi??+%j??,??._??.m?ï¿½&&I_rï¿½????(),ï¿½?g??(~?*'(){Ir??();},?);},?;}ï¿½ï¿½._??b?{{r???ï¿½:!?ï¿½??:!???)
??8ï¿½x:??)1ï¿½M?f?:??ï¿½
Vï¿½ï¿½:"ï¿½?M1?)?_?1?&ï¿½?o1?K^?i??ï¿½?i?Oi?{-i?{-i-?)?,m?ï¿½J?x:"ï¿½m?:?!?jhï¿½??;??:?!?jhï¿½??;ï¿½?"ï¿½*':iï¿½(???jhï¿½??;??-?4?!?jhï¿½??;ï¿½?:-?4ï¿½!?jhï¿½??;",u?:!?;ï¿½ï¿½._??{???:"???,m?ï¿½:??r??)????):????)6?:ï¿½z?ï¿½?:{u??:[],??Cz?ï¿½?]}};???ï¿½h&&ï¿½ï¿½.ï¿½???(h);????;???ï¿½A.i???+-zwï¿½?A.i???+-zwï¿½("???",x,!?:A.j?r/z{("?yhi",x);}h.ï¿½?-??x._??b?{'?Y;h.ï¿½?-??x._???;h.ï¿½?-??x._m?ï¿½??h.ï¿½?-??x._???w-??(h,ï¿½){r??.??("[Z?A??$]["u?"]"u);};h.ï¿½?-??x.ï¿½???uï¿½r??(h,ï¿½){?(???Ñ¤){???;h{};h[x]ï¿½;}~?(???)(ï¿½ï¿½._??b?{[?]h[?]),!?bï¿½._??b?{.u?&&ï¿½ï¿½._??("ï¿½???",'N?ï¿½??"'uO'"??ï¿½,?	??'u[?]o'"');ï¿½?{a?;};h.ï¿½?-??x._rï¿½???ï¿½uï¿½r??(){????.??rï¿½?ï¿½?gï¿½?("v+");h.ï¿½??n?"rVï¿½ï¿½",ï¿½ï¿½._??b?{.m?ï¿½
Vï¿½ï¿½);h.ï¿½??n?"??x",ï¿½ï¿½._??b?{.m?ï¿½J?x);ï¿½ï¿½._??.m?ï¿½A.v?.??n?r.j?^?ï¿½?W(h);ï¿½ï¿½._??.m?ï¿½.?????ï¿½ï¿½._??.m?ï¿½.????m;ï¿½ï¿½._??.m?ï¿½.????;ï¿½ï¿½._??.m?ï¿½.????ï¿½ï¿½._??.m?ï¿½.????v?ï¿½ï¿½._??.m?ï¿½.rX??ï¿½?m;ï¿½ï¿½._??.m?ï¿½.rX???v?!?bï¿½._??b?{.u?&&ï¿½ï¿½._??("_rï¿½????","?ï¿½?ï¿½y??");};h.ï¿½?-??x._u???j+_?w-??(){A.v?.??n?r.ï¿½??W(ï¿½ï¿½._??.m?ï¿½);ï¿½ï¿½._??.m?ï¿½??!?bï¿½._??b?{.u?&&ï¿½ï¿½._??("_u???j+","?ï¿½?ï¿½y?j/y");};h.ï¿½?-??x.r??uï¿½r??(h){????&(h!ï¿½;!?bï¿½._??b?{.u?&&ï¿½ï¿½._??("r??","vï¿½v+pj????(!?"ï¿½ah":"ï¿½a??o"??)");?(!?bï¿½._??.r??)??(!?bï¿½._??b?{.u?&&ï¿½ï¿½._??("r??","?rLï¿½?q?ï¿½?j?ï¿½z+?ï¿½?w&ï¿½?x(?x"),!?;ï¿½ï¿½._??.r??)?;??ï¿½._??.m?ï¿½&&ï¿½ï¿½._rï¿½????();???ï¿½;ï¿½ï¿½._??.??)6??;!?&(ï¿½ï¿½._??.??)ï¿½???ï¿½(~?*'(){x._r????(h);},ï¿½ï¿½._??b?{.??)
??8ï¿½x));ï¿½?g??(~?*'(){x._r????(h);},?;!?bï¿½._??b?{.u?&&ï¿½ï¿½._??("r??","?rHï¿½?zk?
?...");ï¿½?!ï¿½};h.ï¿½?-??x._r???ï¿½uï¿½r??(h){??????ï¿½._??.m?ï¿½&&ï¿½ï¿½._rï¿½????();?(??A.v?.??n?r.???n?"i?")||??ï¿½._??.m?ï¿½.?????|?bï¿½._??.m?ï¿½.????m||?bï¿½._??.m?ï¿½.????||?bï¿½._??.m?ï¿½.????|?bï¿½._??.m?ï¿½.????v?|?bï¿½._??.m?ï¿½.rX??ï¿½?m||?bï¿½._??.m?ï¿½.rX???v?x!ï¿½?(???ï¿½A.??jnï¿½?)^){?????jnï¿½?)^(ï¿½ï¿½._??.m?ï¿½,??;!l|("???!I???^ï¿½?j[?("v+)?ï¿½")&&"?']z"!I???^ï¿½?j[?("?+"n)bï¿½"))||(x!ï¿½;}!?bï¿½._??b?{.u?&&ï¿½ï¿½._??("_r????","?r("o(ï¿½ï¿½._??.??)6??ï¿½)o"u"u?ï¿½._??b?{.??)1ï¿½M?f?"~"o(?a?._??.??)6?*ï¿½ï¿½._??b?{.??)
??8ï¿½x)o"?)Aï¿½?wnr?jw]z?ï¿½*'?"o(!?"ï¿½?"ï¿½+?:"??+?));!?&(ï¿½ï¿½._??.??)6???,ï¿½ï¿½._??.??)6?>ï¿½ï¿½._??b?{.??)1ï¿½M?f?&&ï¿½ï¿½._??.?)());?(!?ï¿½ï¿½._??.?)(),ï¿½ï¿½._u???j+(),ï¿½ï¿½.zhï¿½?ï¿½?(!ï¿½,!?&(ï¿½ï¿½._??.r??)?);z[?(??ï¿½._??.??)||!?ï¿½ï¿½._u???j+(),ï¿½ï¿½.zhï¿½?ï¿½?(!?,!?&(ï¿½ï¿½._??.r??)?);};h.ï¿½?-??x._??.?)~?*'(){rW?ï¿½???(ï¿½ï¿½._??.??));ï¿½ï¿½._??.??)??ï¿½ï¿½._??.??)6??;!?bï¿½._??b?{.u?&&ï¿½ï¿½._??("_??.?)","Z(ï¿½ï¿½m????;};h.ï¿½?-??x.zhï¿½?ï¿½ï¿½uï¿½r??(h){!?bï¿½._??b?{.u?&&ï¿½ï¿½._??("zhï¿½?ï¿½?","w?z{p??"o(!?"ï¿½?"ï¿½+?:"??+?)o"u???ï¿½qï¿½ey");j?ï¿½._??.z?ï¿½?[!?"u??":"??Cz?ï¿½?;~?(???v)?((!?bï¿½._??b?{.u?&&ï¿½ï¿½._??("zhï¿½?ï¿½?","	ï¿½e~?*'"o(????)u)o"u"u.??),h.?ï¿½??ï¿½ï¿½(x)))h[x]();!?bï¿½._??b?{.ï¿½??&&ï¿½ï¿½.rW?ï¿½K?();ï¿½?{a?;};h.ï¿½?-??x.rW?ï¿½K?????(){ï¿½ï¿½._??.z?ï¿½?.u??[];ï¿½ï¿½._??.z?ï¿½?.??Cz?ï¿½?;!?bï¿½._??b?{.u?&&ï¿½ï¿½._??("rW?ï¿½K?","N???+-?ï¿½y??");};h.ï¿½?-??x.?w?b?(h,ï¿½){ï¿½ï¿½._??.z?ï¿½?[!?"u??":"??Cz?ï¿½?.ï¿½?ï¿½);!?bï¿½._??b?{.u?&&ï¿½ï¿½._??("?",'?z???'o(!?"u??":"??Cz?ï¿½?o'"Aï¿½u?');ï¿½?{a?;};h.ï¿½?-??x.?p??????(h){ï¿½?{a?.?(!ï¿½h);};h.ï¿½?-??x.?sh?7ï¿½y?uuï¿½r??(h){ï¿½?{a?.?(!?h);};ï¿½.Z?A??$h;ï¿½.nZ?A??$??{r???ï¿½:!Ü­??:!ï¿½);})(ï¿½?);},~?*'(ï¿½){r??%j?????A(){ï¿½?sï¿½.?)(1ï¿½a.~Z(ï¿½(
ï¿½^.??()ygï¿½)-???,?8?9?}r???ï¿½?(){ï¿½ï¿½.ï¿½?();ï¿½???ï¿½(()>{ï¿½ï¿½.????ï¿½x(!!?ï¿½?hï¿½.?r?;},?);}ï¿½?(){~?*'h(){}ï¿½ï¿½.??ï¿½8ï¿½z.??();ï¿½ï¿½.z?ï¿½?{v':ï¿½v+?y?:ï¿½;ï¿½ï¿½.??ï¿½x{???:!ï¿½??Zï¿½?ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½};ï¿½ï¿½.?r????:!!?ï¿½?hï¿½.?r???Zï¿½?ï¿½ï¿½ï¿½ï¿½};ï¿½ï¿½.r??????ï¿½.rZ,x&??!?????();9??.u???ï¿½ï¿½(x,"?",{??)>{ï¿½ï¿½.r?????!ï¿½?"";}});h.ï¿½?ï¿½ï¿½)?>{ï¿½ï¿½.r?????!ï¿½?"r?hï¿½:ï¿½?ï¿½ï¿½ï¿½ï¿½";};ï¿½?g??(r??.??.n)???"%p%ï¿½",h,x));}ï¿½)?(){ï¿½?sï¿½.?)(ï¿½.??()-ï¿½ï¿½.??ï¿½8ï¿½x,??}????h){ï¿½ï¿½.z?ï¿½?[h]ï¿½ï¿½.ï¿½)?();}????h){ï¿½ï¿½.??ï¿½x.???!h&&((ï¿½ï¿½.??ï¿½x.????,ï¿½ï¿½.??ï¿½x.??Zï¿½???(),ï¿½ï¿½.??ï¿½x.??Zï¿½??ï¿½ï¿½.ï¿½)?()));}????ï¿½x(h){ï¿½ï¿½.?r????!h&&((ï¿½ï¿½.?r?????,ï¿½ï¿½.?r???Zï¿½???(),ï¿½ï¿½.?r???Zï¿½??ï¿½ï¿½.ï¿½)?()));}????	ï¿½e(){ï¿½ï¿½.rZ,x&??!ï¿½}ï¿½?bï¿½(){??ï¿½ï¿½.??ï¿½x.???,ï¿½ï¿½.?r????,ï¿½ï¿½.rZ,x&??,ï¿½ï¿½.r?????];???ï¿½.??ï¿½8ï¿½x;~?(??;?ï¿½;ï¿½?.ï¿½?!!(x&?),(x>>?;~?(??[ï¿½ï¿½.z?ï¿½?.v',ï¿½ï¿½.z?ï¿½?.v+?y?,...ï¿½ï¿½.??ï¿½x.??Zï¿½?..ï¿½ï¿½.?r???Zï¿½?ï¿½.ï¿½)?()])~?({;?x;{?.ï¿½?!!(ï¿½&?),(ï¿½>>?;ï¿½?v;}vï¿½ï¿½	ï¿½?h){??'m?:x,??:ï¿½}h.qï¿½?U???
ï¿½Z(ï¿½ï¿½x,ï¿½),{uï¿½Z:?}I?ï¿½.ï¿½?bï¿½(),A[];~?(?????;ï¿½????;~?(?????;??[ï¿½??]&&(ï¿½!ï¿½);A.ï¿½?ï¿½);}?[];~?(?;?ï¿½;???!?~?(?????;ï¿½?[ï¿½?ï¿½]&&(?!?);?.ï¿½??);}ï¿½!ï¿½~?(?;?>?;??[?]&&(ï¿½!ï¿½);?-1ï¿½a.~Z(ï¿½(??a.ï¿½ï¿½?());~?(ï¿½;?<x;ï¿½??(??;h<x;k???ï¿½a.~Z(ï¿½(ï¿½?)%????.~Z(ï¿½(k?)%??l|??||(?o&&(?||?||(????ï¿½:?[?]:??A[g:[oz*?]))?((?[((ï¿½?)<<?|ï¿½|?,(?[((ï¿½?)<<?|?|?,(?[((ï¿½?)<<?|?&-?,(?[((ï¿½?*x)<<?|ï¿½|?,(?[((ï¿½?*x)<<?|?|?,(?[((ï¿½?*x)<<?|?&-?,(?[((ï¿½??<?|ï¿½|?,(?[((ï¿½??<?|?|?,(?[((ï¿½??<?|?&-?,(?[((ï¿½?*{?<?|ï¿½|?,(?[((ï¿½?*{?<?|?|?,(?[((ï¿½?*{?<?|?&-?):((?[((ï¿½?)<<?|ï¿½&-?,(?[((ï¿½?)<<?|?&-?,(?[((ï¿½?)<<?|?|?,(?[((ï¿½?*x)<<?|ï¿½&-?,(?[((ï¿½?*x)<<?|?&-?,(?[((ï¿½?*x)<<?|?|?,(?[((ï¿½??<?|ï¿½&-?,(?[((ï¿½??<?|?&-?,(?[((ï¿½??<?|?|?,(?[((ï¿½?*{?<?|ï¿½&-?,(?[((ï¿½?*{?<?|?&-?,(?[((ï¿½?*{?<?|?|?));}h.ï¿½??
ï¿½Z(Iï¿½ï¿½;}};???);A.Nï¿½???ï¿½.{hï¿½?;},~?*'(ï¿½,ï¿½,A){??(?,{(?rVï¿½ï¿½{r???ï¿½?(){ï¿½ï¿½.ï¿½??lï¿½?ï¿½;ï¿½ï¿½.??$z??;ï¿½ï¿½.??1ï¿½b?!????.?????ï¿½!("?ï¿½?	ï¿½?);x.ï¿½m?.ï¿½?zu?v?x.???ï¿½?zq?m;ï¿½ï¿½.r?;}?xï¿½(h,x){ï¿½ï¿½.r??Z;ï¿½ï¿½.??$z?z?ï¿½.r;"??ï¿½ï¿½'$ï¿½"h?((ï¿½ï¿½.????????ï¿½.r??S???,(ï¿½ï¿½.????(!ï¿½?ï¿½.?????ï¿½.?????m?ka?.?????!?,x.i???+-zwï¿½("ï¿½????ï¿½",h>ï¿½ï¿½.ï¿½???+Zï¿½(h),!?,x.i???+-zwï¿½("ï¿½???j/x",h>ï¿½ï¿½.ï¿½????x(h),!?,x.i???+-zwï¿½("ï¿½????,h>ï¿½ï¿½.ï¿½???I?h),!?,x.i???+-zwï¿½("ï¿½????q?h>ï¿½ï¿½.ï¿½???I?h),!?):(x.i???+-zwï¿½("??ï¿½y??",h>ï¿½ï¿½.??ï¿½x:0?(h),!?,x.i???+-zwï¿½("??ï¿½zj/x",h>ï¿½ï¿½.??ï¿½x?x(h),!?,x.i???+-zwï¿½("??ï¿½z?h>ï¿½ï¿½.??ï¿½yJ(h),!?);x.i???+-zwï¿½("??	",h>ï¿½ï¿½.?????'(h),!?;x.i???+-zwï¿½("??",h>ï¿½ï¿½.????(h),!?;ï¿½ï¿½.j?ï¿½+i?);}j?ï¿½+i?){?(h.j??)???,?o"{^ï¿½o?(()>{ï¿½ï¿½.??$z.ï¿½ï¿½d(",");ï¿½--x&&rW?ï¿½???(?);},?);}zhï¿½(h){ï¿½ï¿½.??$z.ï¿½ï¿½d(h);}ï¿½ï¿½d(h,x){ï¿½ï¿½.??$z.ï¿½ï¿½d(h,x);}??ï¿½?(h){ï¿½ï¿½.??$z.ï¿½ï¿½d("ï¿½",h,-?;x.ï¿½?();ï¿½ï¿½.j?ï¿½+i?);}ï¿½?,x){ï¿½ï¿½.??$z.rg.ï¿½?,x);}ï¿½????(h,x){ï¿½ï¿½.ï¿½??Zï¿½ï¿½.ï¿½???ï¿½ï¿½.??$z.rg.ï¿½????(h,x);}?????'(x){?ï¿½r(x.???{qï¿½h.(F_H???(h.v'?&&(h.ï¿½?	?<
ï¿½^.??()||x.???ï¿½?)&&(ï¿½ï¿½.??ï¿½?(h.ï¿½V?z?Z?),(h.v'?!?,!h.??ï¿½){ï¿½?.j*mj.rg.v+)?ï¿½.ï¿½?~?*'(){ï¿½?.j*C??k$?.rW?ï¿½("j??-?_??");});???.?????ï¿½!("ï¿½?	-mï¿½?);?&&(?.??x.v+)?ï¿½"???);}nï¿½??;qï¿½h.(F_P_NX:qï¿½?(!h.v'?){?(h.?A?j?u?k{y??ï¿½ï¿½?[?.??ï¿½H??ï¿½v?.??rï¿½?ï¿½?gï¿½?('?zn?');rï¿½"zn?.?'rï¿½"zn?';rï¿½"zn?.ï¿½ï¿½?ï¿½?ï¿½"zn?.??x.~???]?q
??ï¿½';rï¿½"zn?.?ï¿½ezx-?'?';rï¿½"zn?.ï¿½V?z%u?{^ï¿½?zw.o??q?;y??ï¿½ï¿½??izï¿½b?.??ï¿½H??ï¿½Zï¿½ï¿½???z{.rï¿½?ï¿½?gï¿½?('v+');rï¿½"znï¿½j??ï¿½.??x.ï¿½?"ï¿½*''iï¿½(??;rï¿½"znï¿½j??ï¿½.??x.ï¿½m?'?h;rï¿½"znï¿½j??ï¿½.??x.???;rï¿½"znï¿½j??ï¿½.??x.n?m?'?)h;rï¿½"znï¿½j??ï¿½.??x.ï¿½ï¿½ï¿½ï¿½u+ï¿½'ï¿½ï¿½ï¿½?Vï¿½x(-?-?';rï¿½"znï¿½j??ï¿½.??x.????ï¿½ï¿½';rï¿½"znï¿½j??ï¿½.??x.?+"n)bï¿½'?']z';rï¿½"znï¿½j??ï¿½.j?^?ï¿½?W(rï¿½"zn?);v?.??n?r.j?^?ï¿½?W(rï¿½"znï¿½j??ï¿½);y??ï¿½???.rï¿½"zn?.i???+-zwï¿½('??	',~?*'(z?ï¿½?){?(z?ï¿½?.??{^ï¿½'||z?ï¿½?.????{yyy
????x?ï¿½ï¿½?ï¿½?ï¿½?t,???ï¿½x,???-???y??ï¿½?Y[yï¿½??+ï¿½ï¿½??aj"r?hï¿½+.???w?"?vï¿½ï¿½.???.yu^ï¿½?!j?ï¿½?ï¿½nx;?(`){???]4;??)ï¿½y??Oy.??>?ï¿½Kz?`.???ï¿½?(ï¿½?ï¿½Kz-?o"...":`.???ï¿½?(ï¿½?ï¿½Kz);h.??$z.ï¿½ï¿½d('?',ï¿½?ï¿½????,?rï¿½"znï¿½j??ï¿½.ï¿½??W(rï¿½"zn?);v?.??n?r.ï¿½??W(rï¿½"znï¿½j??ï¿½);??g?j{???gï¿½?.???ï¿½!('?ï¿½?	ï¿½?);?ï¿½?	ï¿½?~?.ï¿½();h.?A?j?u??}}});y????)?ï¿½.rï¿½"zn?.i???+-zwï¿½('??	',~?*'(z?ï¿½?){?(z?ï¿½?.??g||z?ï¿½?.????rï¿½"znï¿½j??ï¿½.ï¿½??W(rï¿½"zn?);v?.??n?r.ï¿½??W(rï¿½"znï¿½j??ï¿½);??g?j{???gï¿½?.???ï¿½!('?ï¿½?	ï¿½?);?ï¿½?	ï¿½?~?.ï¿½();h.?A?j?u??}});h.?A?j?u?;y???????"?"??.ï¿½?g??(()>{rï¿½"zn?.?ï¿½nx'';rï¿½"znï¿½j??ï¿½.??x.?+"n)bï¿½'?+"nW';rï¿½"zn?.~?.ï¿½();},?;}z[{y?????ï¿½f??~?.??rï¿½?znï¿½?ï¿½?1.??+-?x?ï¿½H??ï¿½v?.?????ï¿½!('rï¿½"zn?');?({ï¿½ï¿½)?ï¿½"zn?){y????'~?&ï¿½???ï¿½.?????+-?x?ï¿½H??ï¿½.?ï¿½nx;{ï¿½ï¿½)?ï¿½"zn?.?ï¿½nx'';{ï¿½ï¿½)?ï¿½"zn?.~?.ï¿½();{ï¿½ï¿½)?ï¿½"zn?.?ï¿½nz?]Uï¿½nx;}}}nï¿½??;qï¿½h.(F_P:ï¿½ï¿½.ï¿½?,!ï¿½;nï¿½??;qï¿½h.(F_?NX:qï¿½h.(F_?ï¿½ï¿½.ï¿½?,!ï¿½;nï¿½??;qï¿½h.(F_,AS_NX:qï¿½h.(F_,AS:ï¿½ï¿½.ï¿½?,!ï¿½;nï¿½??;qï¿½h.(F_D??L_NX:qï¿½h.(F_D??L:ï¿½ï¿½.ï¿½?,!ï¿½;nï¿½??;qï¿½h.(F_0?_ï¿½ï¿½.ï¿½?,!ï¿½;nï¿½??;qï¿½h.(F_0?_?ï¿½ï¿½.ï¿½?,!ï¿½;nï¿½??;qï¿½h.(F_0?_?ï¿½ï¿½.ï¿½?,!ï¿½;nï¿½??;qï¿½h.(F_,ED,_P:ï¿½ï¿½.zhï¿½(",");nï¿½??;qï¿½h.=ï¿½,?????ï¿½ï¿½.zhï¿½("=ï¿½,?????);nï¿½??;qï¿½h.(F_ !6:ï¿½ï¿½.zhï¿½(" ");}?(!x.r?)?!x.j[J{){?(h.qï¿½?)e){??ï¿½.??1ï¿½b????v?0??(x.???{qï¿½h.(F_P??_2:ï¿½ï¿½.ï¿½ï¿½d("G,ï¿½;nï¿½??;qï¿½h.(F_P??_2:ï¿½ï¿½.ï¿½ï¿½d("G,?;nï¿½??;qï¿½h.(F_P??_H??ï¿½.ï¿½ï¿½d("G,?;nï¿½??;qï¿½h.(F_P??_I4:ï¿½ï¿½.ï¿½ï¿½d("G,?;nï¿½??;qï¿½h.(F_P??_<C:ï¿½ï¿½.ï¿½ï¿½d("G,?nï¿½??;qï¿½h.(F_P??_:ï¿½ï¿½.ï¿½ï¿½d("G,?nï¿½??;qï¿½h.(F_P??_Dï¿½:ï¿½ï¿½.ï¿½ï¿½d("G,?nï¿½??;qï¿½h.(F_P??_0?ï¿½.ï¿½ï¿½d("G,?nï¿½??;qï¿½h.(F_P??_Dc:ï¿½ï¿½.ï¿½ï¿½d("G,??ï¿½??;qï¿½h.(F_P??_Hr:ï¿½ï¿½.ï¿½ï¿½d("G,??ï¿½?x(--?);}?(!x.ï¿½?){?ï¿½r(x.???{qï¿½h.(F_D?H??ï¿½.ï¿½ï¿½d("?",ï¿½;nï¿½??;qï¿½h.(F_D??D:ï¿½ï¿½.ï¿½ï¿½d("?",?;nï¿½??;qï¿½h.(F_9Q_D?lï¿½ï¿½.ï¿½ï¿½d("?",?;nï¿½??;qï¿½h.(F_DEDE!_0?:ï¿½ï¿½.ï¿½ï¿½d("?",?;nï¿½??;qï¿½h.(F_DEDE!_LJ:ï¿½ï¿½.ï¿½ï¿½d("?",?nï¿½??;qï¿½h.(F_P??_0:ï¿½ï¿½.??1ï¿½b?!ï¿½nï¿½??;qï¿½h.(F_@?_`?ï¿½.zhï¿½("ï¿½);nï¿½??;qï¿½h.Ib_LJ:ï¿½ï¿½.zhï¿½("
ï¿½??Cï¿½x");nï¿½??;qï¿½h.(F_(??`?Bzï¿½ï¿½.zhï¿½("(");nï¿½??;qï¿½h.(F_<?F:h.?0
?!ï¿½nï¿½??;qï¿½h.(F_ï¿½H_M:h.?0Nï¿½?!ï¿½nï¿½??;qï¿½h.(F_D@?D:?(ï¿½ï¿½.r.q?m?ï¿½?ï¿½ï¿½?ï¿½&&ï¿½?.1???ï¿½^ï¿½)?(ï¿½ï¿½.?'^???ï¿½^ï¿½)?ï¿½r(ï¿½ï¿½.?'^???ï¿½^ï¿½.??x){qï¿½"?v?ï¿½+?:h.??ï¿½.ï¿½?{ï¿½?"E????ï¿½?,???:?jZah:Ü¶)?:
ï¿½^.??()});ï¿½ï¿½.?'^???ï¿½^ï¿½.???();nï¿½??;qï¿½"ï¿½???":h.??ï¿½.ï¿½?{ï¿½?"E??????ï¿½??..",???:?jZah:Ü¶)?:
ï¿½^.??()}),ï¿½ï¿½.?'^???ï¿½^ï¿½.??();}z[{??];ï¿½ï¿½.?'^???ï¿½^ï¿½wï¿½1???ï¿½^ï¿½(ï¿½ï¿½.r.q?m?ï¿½?ï¿½ï¿½?ï¿½(?;ï¿½ï¿½.?'^???ï¿½^ï¿½.?wZï¿½ï¿½?j)ZnW?>x.ï¿½?h.uï¿½Z);ï¿½ï¿½.?'^???ï¿½^ï¿½.?{-?()>{????(x,{ï¿½*^:ï¿½ï¿½.?'^???ï¿½^ï¿½.?)?O*^});x.??;??.rï¿½?ï¿½??(h),ï¿½??gï¿½?.rï¿½?ï¿½?gï¿½?("h");?.??x.v+)?ï¿½"???;?.ï¿½??n?"v?'???","?'^ï¿½.A?);?.ï¿½??n?"?ï¿½?",?);v?.??n?r.j?^?ï¿½?W(?);ï¿½?g??(()>{Q.ï¿½???(?);v?.??n?r.ï¿½??W(?);},?);?.rX??();};h.??ï¿½.ï¿½?{ï¿½?"E???xï¿½?ï¿½^uï¿½??ï¿½?,???:?jZah:Ü¶)?:
ï¿½^.??()});ï¿½ï¿½.?'^???ï¿½^ï¿½.???();}z[h.??ï¿½.ï¿½?{ï¿½?"1?ï¿½??ï¿½^ï¿½z-??ï¿½^v)?ï¿½?,z!",???:?jZah:Ü¶)?:
ï¿½^.??()});nï¿½??;qï¿½h.(F_H$D?9:????.r.ï¿½???,();?ï¿½hl(I??b?(",")[?);???b?(",")[ï¿½.??b?(":")[?.??b?(";")[ï¿½;???{|??(?.??);~?(??;h<?.??;k?[h]?.rï¿½
?^(h);??.rï¿½?ï¿½??(???([ï¿½],{ï¿½*^:L)),A??gï¿½?.rï¿½?ï¿½?gï¿½?("h");A.??x.v+)?ï¿½"???;A.ï¿½??n?"v?'???","ï¿½?z{!?.ï¿½x");A.ï¿½??n?"?ï¿½?",?);v?.??n?r.j?^?ï¿½?W(A);ï¿½?g??(()>{Q.ï¿½???(?);v?.??n?r.ï¿½??W(A);},?);A.rX??();}?(h.qï¿½?
?)?ï¿½r(x.???{qï¿½h.(F_s?H_?ï¿½ï¿½.ï¿½ï¿½d("P",ï¿½;nï¿½??;qï¿½h.(F_s?H_?ï¿½ï¿½.ï¿½ï¿½d("P",?;nï¿½??;qï¿½h.(F_s?H_?ï¿½ï¿½.ï¿½ï¿½d("P",?;nï¿½??;qï¿½h.(F_s?H_?ï¿½.ï¿½ï¿½d("P",?;nï¿½??;qï¿½h.(F_s?H_?ï¿½.ï¿½ï¿½d("P",?nï¿½??;qï¿½h.(F_s?H_?ï¿½.ï¿½ï¿½d("P",?nï¿½??;qï¿½h.(F_s?H_?ï¿½.ï¿½ï¿½d("P",?nï¿½??;qï¿½h.(F_s?H_??ï¿½.ï¿½ï¿½d("P",?nï¿½??;qï¿½h.(F_s?H_??ï¿½.ï¿½ï¿½d("P",??}}}????(x){?ï¿½r(x.???{qï¿½h.(F_P_NX:qï¿½h.(F_P:ï¿½ï¿½.ï¿½?,!?;nï¿½??;qï¿½h.(F_?NX:qï¿½h.(F_?ï¿½ï¿½.ï¿½?,!?;nï¿½??;qï¿½h.(F_,AS_NX:qï¿½h.(F_,AS:ï¿½ï¿½.ï¿½?,!?;nï¿½??;qï¿½h.(F_D??L_NX:qï¿½h.(F_D??L:ï¿½ï¿½.ï¿½?,!?;nï¿½??;qï¿½h.(F_0?_ï¿½ï¿½.ï¿½?,!?;nï¿½??;qï¿½h.(F_0?_?ï¿½ï¿½.ï¿½?,!?;nï¿½??;qï¿½h.(F_0?_?ï¿½ï¿½.ï¿½?,!?;nï¿½??;qï¿½h.(F_P??_0:ï¿½ï¿½.??1ï¿½b?!?nï¿½??;qï¿½h.(F_<?F:h.?0
?!?nï¿½??;qï¿½h.(F_ï¿½H_M:h.?0Nï¿½?!?}}??ï¿½x:0?(x){?ï¿½r(x.n?){qï¿½ï¿½x{lx.rX????x.rX???;??.rX??ï¿½???.r??(x);-???ï¿½ï¿½.ï¿½ï¿½d("G,?):-?h.rX??ï¿½??Hï¿½Rï¿½+i?.r??(x)?h.rW?ï¿½J`ï¿½ï¿½^ï¿½():((y.rX??ï¿½??ï¿½+i?r??(x)),-?x?ï¿½ï¿½.ï¿½ï¿½d("P",x):ï¿½ï¿½.ï¿½?,!ï¿½);nï¿½??;qï¿½?ï¿½ï¿½.ï¿½?,!ï¿½;nï¿½??;qï¿½?ï¿½ï¿½.ï¿½?,!ï¿½;}}??ï¿½x?x(x){??h.ï¿½V?z.H&ï¿½ï¿½.ï¿½????(x.rX???h.ï¿½V?z.Ix.rX???h.ï¿½V?z.?;h.????F.rX??ï¿½????.r??({lx.rX????x.rX???);}??ï¿½yJ(h){?ï¿½r(h.n?){qï¿½ï¿½ï¿½.ï¿½?,!?;nï¿½??;qï¿½?ï¿½ï¿½.ï¿½?,!?;nï¿½??;qï¿½?ï¿½ï¿½.ï¿½?,!?;}}ï¿½???+Zï¿½(x){x.ï¿½ï¿½?z{Cyoï¿½?();?(h.v'?&&h.ï¿½?	?<
ï¿½^.??())ï¿½ï¿½.??ï¿½?(h.ï¿½V?z?Z?),(h.v'?!?;z[{~?(???.rï¿½???){???:IrX????IrX???;??.??ï¿½'????rX??ï¿½???.r??(?);-?ï¿½?ï¿½ï¿½.ï¿½ï¿½d("G,ï¿½):-?h.rX??ï¿½??Hï¿½Rï¿½+i?.r??(?)?h.rW?ï¿½J`ï¿½ï¿½^ï¿½():((?.rX??ï¿½??ï¿½+i?r??(?)),-?ï¿½?ï¿½ï¿½.ï¿½ï¿½d("P",ï¿½):((?.lï¿½ï¿½.r.ï¿½m?y),??ï¿½.???????&&??(ï¿½ï¿½.???????):??ï¿½ï¿½.r??S??|?||((ï¿½ï¿½.r??S??),ï¿½ï¿½.ï¿½?,!ï¿½)));}ï¿½ï¿½.ï¿½????x(x);}}ï¿½????x(h){h.ï¿½ï¿½?z{Cyoï¿½?();~?(??o.rï¿½???){???.rX???j.rX????????ï¿½'?ï¿½ï¿½.????????((x-(?ï¿½ï¿½.r.ï¿½m?)y),(h-(?ï¿½ï¿½.r.??)y),(ï¿½??.???*{?)),({u),(ku),-ï¿½????~??|>h!ï¿½ï¿½.?????&&ï¿½ï¿½.ï¿½?,(ï¿½ï¿½.?????-ï¿½????~??|>h)),ï¿½????~??|<h!ï¿½ï¿½.?????m?&&ï¿½ï¿½.ï¿½?,(ï¿½ï¿½.?????m?m.????~??|<h)),-ï¿½????~??|>x!ï¿½ï¿½.?????&ï¿½ï¿½.ï¿½?,(ï¿½ï¿½.?????ï¿½????~??|>x)),ï¿½????~??|<x!ï¿½ï¿½.????(!?&&ï¿½ï¿½.ï¿½?,(ï¿½ï¿½.????(!ï¿½.????~??|<x))):ï¿½ï¿½.r??S??&&ï¿½ï¿½.ï¿½????(?x-(?ï¿½.r.ï¿½m?)y),?h-(?ï¿½ï¿½.r.??)y));}}ï¿½???I?h){h.ï¿½ï¿½?z{Cyoï¿½?();~?(??o.rï¿½???)(i.??ï¿½'?,ï¿½ï¿½.????????((ï¿½ï¿½.???????{??),ï¿½ï¿½.?????&&ï¿½ï¿½.ï¿½?,(ï¿½ï¿½.?????!?),ï¿½ï¿½.?????m?&&ï¿½ï¿½.ï¿½?,(ï¿½ï¿½.?????m?!?),ï¿½ï¿½.?????&ï¿½ï¿½.ï¿½?,(ï¿½ï¿½.??????),ï¿½ï¿½.????(!?&&ï¿½ï¿½.ï¿½?,(ï¿½ï¿½.????(!?!?)):ï¿½ï¿½.r??S??&&((ï¿½ï¿½.r??S???,ï¿½ï¿½.ï¿½?,!?);}}ï¿½.{hï¿½?;},~?*'(ï¿½,ï¿½){???{w???,jwï¿½R)??A.n?),zwï¿½Zï¿½}?ï¿½ï¿½?(A.n?),wï¿½R)?+ï¿½ï¿½(?,?ï¿½R)??.n?);ï¿½.zw(u???];???,ï¿½,^,?;~?(???){??O;?(?|!?;z[?(?|!?;z[?("??"ï¿½*^?u)!6?.?ï¿½ï¿½?(?)||-??ï¿½o?>?||??ï¿½o?<??((),(ï¿½?:ï¿½???>??((),ï¿½????((),(ï¿½?:??ï¿½o?>?&&((),(ï¿½?:-?<??((),ï¿½?-???((),(ï¿½?:-??ï¿½o?<?&&((),(ï¿½?;z[?("???"ï¿½*^?u){!?~?(??;h<?.??;k?("\ï¿½M|"<?.rï¿½(h))!ï¿½z[?("\A"?.rï¿½(h))ï¿½?r??.z??"6????-ï¿½)??),??"6????-ï¿½)?);!&&??.???((),ï¿½??((]),(ï¿½?.??ï¿½)):((]),(ï¿½??ï¿½));}z[ï¿½?r??.z??"Rwï¿½r?ZnW?j??",?),??"Rwï¿½r?ZnW?j??"));ï¿½.ï¿½?);?()??[{ï¿½.ï¿½?);?(??){~?(;??;)ï¿½.ï¿½??,ï¿½.ï¿½??,(?-?;?ï¿½.ï¿½?):?ï¿½.ï¿½??:?ï¿½.ï¿½??:??&&(ï¿½.ï¿½??,ï¿½.ï¿½??-?;}?;;}}ï¿½.ï¿½?);?(??){~?(;??;)ï¿½.ï¿½??,ï¿½.ï¿½??,(?-?;?ï¿½.ï¿½?):?ï¿½.ï¿½??:?ï¿½.ï¿½??:??&&(ï¿½.ï¿½??,ï¿½.ï¿½??-?;}ï¿½.ï¿½??;???%?&ï¿½.ï¿½??;?wï¿½R)??(ï¿½.??>>?u);~?(;<ï¿½.??;?[>>?(ï¿½[]<<?ï¿½[?ï¿½.??>>?~?(;<ï¿½.??;?ï¿½r(((?[]),ï¿½[])){qï¿½?qï¿½??[??;nï¿½??;qï¿½?ï¿½?[ï¿½?;?.ï¿½?,ï¿½);??ï¿½??;qï¿½?ï¿½?[ï¿½?;?.ï¿½?,ï¿½);??ï¿½??;qï¿½??ï¿½?;?.ï¿½?,ï¿½);??ï¿½??;qï¿½??.???ï¿½?.rï¿½
?^(ï¿½;?[??;nï¿½??;qï¿½?~?(ï¿½;?<?.??;ï¿½?[??.rï¿½
?^(?);?[??;nï¿½??;qï¿½?~?(ï¿½;?<?.??;ï¿½?.rï¿½
?^(?)),(?[??&?),(?[??>>??[??;?[??;}ï¿½?z;};ï¿½.u???wï¿½R)???);?(??[ï¿½>>??y????,?^;??;~?(???ï¿½;){?(?>?.??)ï¿½?y?????];?((?&?,ï¿½?(?>>?!;?(??&?){?(?){&&ï¿½?ï¿½??;}??-??(?){?(?>?.??)ï¿½?y??[?];?((?&?,ï¿½?(?>>?!;k?~?(?;?<h;??.ï¿½?ï¿½);}z[ï¿½.ï¿½??),(ï¿½);}ï¿½[];~?(??u)?ï¿½r(?){qï¿½ï¿½.ï¿½?ï¿½;nï¿½??;qï¿½?ï¿½.ï¿½??;nï¿½??;qï¿½?ï¿½.ï¿½??[ï¿½?;nï¿½??;qï¿½?ï¿½.ï¿½??[ï¿½??);nï¿½??;qï¿½?[ï¿½?[ï¿½?e??[ï¿½?ï¿½.ï¿½?[ï¿½);nï¿½??;qï¿½?[ï¿½?[ï¿½?e??[ï¿½?ï¿½.ï¿½?[ï¿½-??nï¿½??;qï¿½?[ï¿½?[ï¿½?h[??[ï¿½?h[??[ï¿½?h[??[ï¿½?ï¿½.ï¿½?A[ï¿½);nï¿½??;qï¿½?[ï¿½?[ï¿½?h[??[ï¿½?h[??[ï¿½?h[??[ï¿½?ï¿½.ï¿½?A[ï¿½-??ï¿½o?);nï¿½??;qï¿½??ï¿½?[ï¿½?h[??[ï¿½?h[??[ï¿½?h[??[ï¿½?ï¿½.ï¿½?6?.?U4(x[ï¿½)?-?x[ï¿½);nï¿½??;qï¿½??ï¿½?ï¿½.ï¿½??"":J??.~?&
ï¿½
?^(ï¿½));nï¿½??;qï¿½?~?(ï¿½"";(
[ï¿½?;)ï¿½?)??&
ï¿½
?^();ï¿½.ï¿½?ï¿½);nï¿½??;qï¿½?~?(ï¿½"";(
[ï¿½?(?[ï¿½?<??)ï¿½?)??&
ï¿½
?^();ï¿½.ï¿½?ï¿½);}ï¿½?z;};},~?*'(ï¿½){ï¿½.{hï¿½????{ï¿½?"#?",?
?:"#???ï¿½ï¿½?:"#?=??e?:"#1w??ï¿½??:"#?",ï¿½)?#_}",?X+{:"#A",?
?:"# E???+^:"#QE",nV??:"#??n[?:"#?8",?ï¿½??:"#??",??:"#Mg",ï¿½?#Mg",??]:"#Pï¿½?ï¿½?:"#??",????"#.???ï¿½?:"#ï¿½; ",v
?:"#??ï¿½ï¿½x:"#A",??ï¿½$:"#?4?,?ï¿½^ï¿½??7:?n??:ï¿½?rVï¿½?':{ï¿½?"#??",?
?:"#??",?ï¿½ï¿½?:"#.u??e?:"#Q??ï¿½??:"#?",ï¿½)?#^u",?X+{:"#0?",?
?:"#???",??+^:"#QE",nV??:"#??n[?:"#?t",?ï¿½??:"#?4?ï¿½?#N???]:"#Q8?ï¿½?:"#?",????"#Nr",?ï¿½?:"#???",v
?:"#??ï¿½ï¿½x:"#@?",??ï¿½$:"#?4?,?ï¿½^ï¿½??7:?n??:ï¿½?u??ï¿½?"#??",?
?:"#ï¿½=?,?ï¿½ï¿½?:"#?ï¿½??e?:"#`v?,?ï¿½??:"#?",ï¿½)?#n ",?X+{:"#?D?,?
?:"#?A?,??+^:"#?4?,nV??:"#?9",n[?:"#?E",?ï¿½??:"#?y?,ï¿½?#^????]:"#P??ï¿½?:"#?ï¿½?",????"#???ï¿½?:"#??v
?:"#??ï¿½ï¿½x:"#?uï¿½,??ï¿½$:"#QE",?ï¿½^ï¿½??7:?n??:ï¿½?,?ï¿½nï¿½ï¿½:{ï¿½?"#?",?
?:"#  ???ï¿½ï¿½?:"#Oy??e?:"#Py?",?ï¿½??:"#?E",ï¿½)?#?",?X+{:"#?z",?
?:"#????+^:"#QE",nV??:"#?u?,n[?:"#?",?ï¿½??:"#?z?ï¿½?#^???]:"#?E?ï¿½?:"#??",????"#ï¿½ï¿½",?ï¿½?:"#????
?:"#??ï¿½ï¿½x:"#?v",??ï¿½$:"#?4?,?ï¿½^ï¿½??7:?n??:ï¿½?,ï¿½?):{ï¿½?"#???
?:"#}?ï¿½??ï¿½ï¿½?:"#?o?,?e?:"#}???ï¿½??:"#??u?,ï¿½)?#?8?,?X+{:"#?o?,?
?:"#i?_o",??+^:"#}?",nV??:"#??n[?:"#??q",?ï¿½??:"#?",ï¿½?#N???]:"#?o?,ï¿½?:"#?o?,????"#q?o",?ï¿½?:"#}??",v
?:"#??ï¿½ï¿½x:"#}y[???ï¿½$:"#?4?,?ï¿½^ï¿½??7:?n??:??,~??:{ï¿½?"#??",?
?:"#??",?ï¿½ï¿½?:"#^????:"#??}??ï¿½??:"#??ï¿½)?#???X+{:"#0?",?
?:"#????+^:"#QE",nV??:"#??n[?:"#??",?ï¿½??:"#PD?ï¿½?#?t???]:"#^;?ï¿½?:"# ??????"#u",?ï¿½?:"#???v
?:"#??ï¿½ï¿½x:"#????ï¿½$:"#?4?,?ï¿½^ï¿½??7:?n??:ï¿½??'g?m:{ï¿½?"#?t?",?
?:"#ï¿½??ï¿½ï¿½?:"#?z??e?:"#0???ï¿½??:"#??",ï¿½)?#??",?X+{:"# ?",?
?:"#ï¿½v",??+^:"# ?",nV??:"#?E?,n[?:"#?o??ï¿½??:"#?;?ï¿½?#?4?,??]:"#????:"#??????"#ot?",?ï¿½?:"#??v
?:"#?",ï¿½ï¿½x:"#????ï¿½$:"#?4?,?ï¿½^ï¿½??7:?n??:ï¿½??ï¿½-z:{ï¿½?"#??",?
?:"#?o??ï¿½ï¿½?:"#?4",?e?:"#?A",?ï¿½??:"#?E",ï¿½)?#?",?X+{:"#`v",?
?:"#????+^:"#QE",nV??:"#?u?,n[?:"# @",?ï¿½??:"# AE ",ï¿½?#P ",??]:"#QE",ï¿½?:"#pï¿½",????"#Py",?ï¿½?:"# ?",v
?:"#@4",ï¿½ï¿½x:"#av",??ï¿½$:"#?4?,?ï¿½^ï¿½??7:?n??:ï¿½?,???x:{ï¿½?"#?",?
?:"# ]t?,?ï¿½ï¿½?:"#]4?,?e?:"#??",?ï¿½??:"#QE",ï¿½)?#???X+{:"#QE",?
?:"#?ï¿½?,??+^:"#?4?,nV??:"#??n[?:"#?A?",?ï¿½??:"#ï¿½???#`}ï¿½,??]:"#?I",ï¿½?:"#?}?,????"#???ï¿½?:"#??v
?:"#?;?,ï¿½ï¿½x:"#?4?,??ï¿½$:"#QE",?ï¿½^ï¿½??7:?n??:ï¿½?,??:{ï¿½?"#?t??
?:"#?<?,?ï¿½ï¿½?:"#o??e?:"#?u??ï¿½??:"#O8",ï¿½)?#]G",?X+{:"#Av",?
?:"#????+^:"#`?",nV??:"#?z?,n[?:"#?no",?ï¿½??:"#??",ï¿½?#O???]:"# ï¿½",ï¿½?:"#?",????"#|",?ï¿½?:"#??,v
?:"#???ï¿½ï¿½x:"#????ï¿½$:"# ",?ï¿½^ï¿½??7:?n??:ï¿½?nW?r:{ï¿½?"#?E",?
?:"#?E?,?ï¿½ï¿½?:"#]o?,?e?:"#Q?,?ï¿½??:"#]?",ï¿½)?#]?",?X+{:"#Qu??
?:"#?_5???+^:"#Qu",nV??:"#??n[?:"#??",?ï¿½??:"#?E?,ï¿½?#]4?,??]:"#Q@?,ï¿½?:"#?4",????"#??",?ï¿½?:"#??",v
?:"#??ï¿½ï¿½x:"#QD",??ï¿½$:"#?<?,?ï¿½^ï¿½??7:?n??:ï¿½??u?:{ï¿½?"#?",?
?:"#???ï¿½ï¿½?:"#^t",?e?:"#Po??ï¿½??:"#-???)?#4??X+{:"#??",?
?:"#Pï¿½",??+^:"#QE",nV??:"#?:?n[?:"#? ",?ï¿½??:"#ï¿½?,ï¿½?#.7?,??]:"#@=?,ï¿½?:"#? ",????"#???ï¿½?:"#???
?:"#?u",ï¿½ï¿½x:"#?7",??ï¿½$:"#?4?,?ï¿½^ï¿½??7:?n??:ï¿½?,mï¿½ejwl:{ï¿½?"#ï¿½??
?:"#Pï¿½?,?ï¿½ï¿½?:"#?u?,?e?:"#?u?,?ï¿½??:"#ï¿½{",ï¿½)?#???X+{:"#???
?:"#ï¿½{",??+^:"#?ï¿½",nV??:"#?4?,n[?:"#ï¿½@??ï¿½??:"#??,ï¿½?#??,??]:"#??,ï¿½?:"#??????"#?v??ï¿½?:"#?B?,v
?:"#???",ï¿½ï¿½x:"#??,??ï¿½$:"#Q6",?ï¿½^ï¿½??7:?n??:ï¿½?r?:{ï¿½?"#?",?
?:"#???ï¿½ï¿½?:"#?=??e?:"#1w??ï¿½??:"#?",ï¿½)?#_}",?X+{:"#A",?
?:"# E???+^:"#QE",nV??:"#??n[?:"#?8",?ï¿½??:"#??",ï¿½?#Mg",??]:"#Pï¿½?ï¿½?:"#??",????"#.???ï¿½?:"#ï¿½; ",v
?:"#??ï¿½ï¿½x:"#A",??ï¿½$:"#?4?,?ï¿½^ï¿½??7:?n??:ï¿½?;}]);}.qï¿½e(ï¿½ï¿½);*/
let music = new Audio();
~function() {
  "use strict";
  
  
  resources.load([
  './img/space_ball.png'
    ]);
  // ==============================================================================
// Sprite Bullets.
// ==============================================================================
let spriteInfo = {
  20: {
    url: './img/space_ball.png',
    width: 93,
    height: 100,
    frames: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
  }
};
// ==============================================================================
  var I = I || {};
  I.scope = {};
  I.checkStringArgs = function(r, p, w) {
    if (null == r)
      throw new TypeError(
        "The 'this' value for String.prototype." +
          w +
          " must not be null or undefined"
      );
    if (p instanceof RegExp)
      throw new TypeError(
        "First argument to String.prototype." +
          w +
          " must not be a regular expression"
      );
    return r + "";
  };
  I.ASSUME_ES5 = !1;
  I.ASSUME_NO_NATIVE_MAP = !1;
  I.ASSUME_NO_NATIVE_SET = !1;
  I.SIMPLE_FROUND_POLYFILL = !1;
  I.defineProperty =
    I.ASSUME_ES5 || "function" == typeof Object.defineProperties
      ? Object.defineProperty
      : function(r, p, w) {
          r != Array.prototype && r != Object.prototype && (r[p] = w.value);
        };
  I.getGlobal = function(r) {
    return "undefined" != typeof window && window === r
      ? r
      : "undefined" != typeof global && null != global
      ? global
      : r;
  };
  I.global = I.getGlobal(this);
  I.polyfill = function(r, p) {
    if (p) {
      var w = I.global;
      r = r.split(".");
      for (var a = 0; a < r.length - 1; a++) {
        var e = r[a];
        e in w || (w[e] = {});
        w = w[e];
      }
      r = r[r.length - 1];
      a = w[r];
      p = p(a);
      p != a &&
        null != p &&
        I.defineProperty(w, r, {
          configurable: !0,
          writable: !0,
          value: p
        });
    }
  };


  I.stringPadding = function(r, p) {
    r = void 0 !== r ? String(r) : " ";
    return 0 < p && r ? r.repeat(Math.ceil(p / r.length)).substring(0, p) : "";
  };
  I.polyfill(
    "String.prototype.padStart",
    function(r) {
      return r
        ? r
        : function(p, w) {
            var a = I.checkStringArgs(this, null, "padStart");
            return I.stringPadding(w, p - a.length) + a;
          };
    },
    "es8",
    "es3"
  );
  I.owns = function(r, p) {
    return Object.prototype.hasOwnProperty.call(r, p);
  };
  I.polyfill(
    "Object.entries",
    function(r) {
      return r
        ? r
        : function(p) {
            var w = [],
              a;
            for (a in p) I.owns(p, a) && w.push([a, p[a]]);
            return w;
          };
    },
    "es8",
    "es3"
  );
  I.polyfill(
    "Object.values",
    function(r) {
      return r
        ? r
        : function(p) {
            var w = [],
              a;
            for (a in p) I.owns(p, a) && w.push(p[a]);
            return w;
          };
    },
    "es8",
    "es3"
  );
  I.polyfill(
    "Array.prototype.includes",
    function(r) {
      return r
        ? r
        : function(p, w) {
            var a = this;
            a instanceof String && (a = String(a));
            var e = a.length;
            w = w || 0;
            for (0 > w && (w = Math.max(w + e, 0)); w < e; w++) {
              var E = a[w];
              if (E === p || Object.is(E, p)) return !0;
            }
            return !1;
          };
    },
    "es7",
    "es3"
  );
  (function(r) {
    function p(a) {
      if (w[a]) return w[a].exports;
      var e = (w[a] = {
        i: a,
        l: !1,
        exports: {}
      });
      r[a].call(e.exports, e, e.exports, p);
      e.l = !0;
      return e.exports;
    }
    var w = {};
    p.m = r;
    p.c = w;
    p.d = function(a, e, E) {
      p.o(a, e) ||
        Object.defineProperty(a, e, {
          enumerable: !0,
          get: E
        });
    };
    p.r = function(a) {
      "undefined" !== typeof Symbol &&
        Symbol.toStringTag &&
        Object.defineProperty(a, Symbol.toStringTag, {
          value: "Module"
        });
      Object.defineProperty(a, "__esModule", {
        value: !0
      });
    };
    p.t = function(a, e) {
      e & 1 && (a = p(a));
      if (e & 8 || (e & 4 && "object" === typeof a && a && a.__esModule))
        return a;
      var E = Object.create(null);
      p.r(E);
      Object.defineProperty(E, "default", {
        enumerable: !0,
        value: a
      });
      if (e & 2 && "string" != typeof a)
        for (var x in a)
          p.d(
            E,
            x,
            function(e) {
              return a[e];
            }.bind(null, x)
          );
      return E;
    };
    p.n = function(a) {
      var e =
        a && a.__esModule
          ? function() {
              return a["default"];
            }
          : function() {
              return a;
            };
      p.d(e, "a", e);
      return e;
    };
    p.o = function(a, e) {
      return Object.prototype.hasOwnProperty.call(a, e);
    };
    p.p = "";
    return p((p.s = 0));
  })([
    function(r, p, w) {
      function a() {
        window.dataLayer.push(arguments);
      }

      function e(b) {
        switch (b) {
          case 0:
            return l.teal;
          case 1:
            return l.lgreen;
          case 2:
            return l.orange;
          case 3:
            return l.yellow;
          case 4:
            return l.lavender;
          case 5:
            return l.pink;
          case 6:
            return l.vlgrey;
          case 7:
            return l.lgrey;
          case 8:
            return l.guiwhite;
          case 9:
            return l.black;
          case 10:
            return l.blue;
          case 11:
            return l.green;
          case 12:
            return l.red;
          case 13:
            return l.gold;
          case 14:
            return l.purple;
          case 15:
            return l.magenta;
          case 16:
            return l.grey;
          case 17:
            return l.dgrey;
          case 18:
            return l.white;
          case 19:
            return l.guiblack;
          case 20:
            return 150 > Date.now() % 300 ? l.blue : l.red;
           case 59:
            return T(
              [
                "#ff1000",
                "#ff9000",
                "#ffd300",
                "#00e00b",
                "#226ef6",
                "#a913cf"
              ][Math.floor((Date.now() / 200) % 6)],
              [
                "#ff9000",
                "#ffd300",
                "#00e00b",
                "#226ef6",
                "#a913cf",
                "#ff1000"
              ][Math.floor((Date.now() / 200) % 6)],
              (Date.now() / 200) % 1
            );
          case 21:
            return 150 > Date.now() % 300 ? l.blue : l.grey;
          case 22:
            return 150 > Date.now() % 300 ? l.grey : l.blue;
          case 23:
            return 150 > Date.now() % 300 ? l.red : l.grey;
          case 24:
            return 150 > Date.now() % 300 ? l.grey : l.red;
          case 30:
            return "#d21fff";
          case 31:
            return "#226ef6";
          case 32:
            return "#ff1000";
          case 33:
            return "#ff9000";
          case 39:
            return "#d6d72c";
          case 34:
            return "#00e00b";
          case 35:
            return "#ffd300";
            case 37:
            return "#00fffb";
              case 38:
            return "#4853b5";
             case 55:
            return "#0028ff";
              case 58:
            return "#ff9b00";
             case 56:
            return "#b200ff";
             case 57:
            return "#00fffb";
          case 36:
            return "#" + Math.floor(Math.random() * 16777215).toString(16);
          default:
            return "#ff0000";
        }
      }

      function E(b) {
        let d = B.graphical.neon ? l.white : l.black;
        return B.graphical.darkBorders ? d : T(b, d, l.border);
      }

      function x(b) {
        switch (b) {
          case "bas1":
          case "bap1":
          case "boss1":
          case "dom1":
          case "dbc1":
          case "mbc1":
            return l.blue;
          case "bas2":
          case "bap2":
          case "dom2":
          case "boss2":
          case "dbc2":
          case "mbc2":
            return l.green;
          case "bas3":
          case "bap3":
          case "dom3":
          case "boss3":
          case "dbc3":
          case "mbc3":
            return l.red;
          case "bas4":
          case "bap4":
          case "boss4":
          case "dom4":
          case "dbc4":
          case "mbc4":
            return l.pink;
          case "domx":
          case "dom0":
          case "dbc0":
          case "mbc0":
            return l.yellow;
          case "port":
          case "btsp":
            return (g.globalAlpha = 1), l.black;
          case "edge":
            return T(l.white, l.guiblack, 1 / 3);
          case "dor1":
            return l.vl;
          case "nest":
            return l.lavender;
          default:
            return l.white;
        }
      }

      function k(b, n) {
        B.graphical.neon
          ? ((b.fillStyle = E(n)), (b.strokeStyle = n))
          : ((b.fillStyle = n), (b.strokeStyle = E(n)));
      }

      function D(b, n = M[b].color) {
        let c = M[b];
        return {
          time: 0,
          index: b,
          x: c.x,
          y: c.y,
          vx: 0,
          vy: 0,
          size: c.size,
          realSize: c.realSize,
          color: n,
          render: {
            status: {
              getFade: () => 1,
              getColor: () => "#FFFFFF",
              getBlend: () => 0,
              health: {
                get: () => 1
              },
              shield: {
                get: () => 1
              }
            }
          },
          facing: c.facing,
          shape: c.shape,
          name: c.name,
          score: 0,
          tiggle: 0,
          layer: c.layer,
          guns: {
            length: c.guns.length,
            getPositions: () => Array(c.guns.length).fill(0),
            update: () => {}
          },
          turrets: c.turrets.map(b => {
            let d = D(b.index);
            d.realSize = (d.realSize / d.size) * c.size * b.sizeFactor;
            d.size = c.size * b.sizeFactor;
            d.angle = b.angle;
            d.offset = b.offset;
            d.direction = b.direction;
            d.facing = b.direction + b.angle;
            return d;
          })
        };
      }

      function R(d, n, c, h = !1) {
        let a = ma();
        c += B.graphical.borderChunk;
        return h
          ? ((a *= 2),
            d > -b.screenWidth / a - c &&
              d < b.screenWidth / a + c &&
              n > -b.screenHeight / a - c &&
              n < b.screenHeight / a + c)
          : d > -c &&
              d < b.screenWidth / a + c &&
              n > -c &&
              n < b.screenHeight / a + c;
      }

      function q(b, n, c = 3) {
        let d = Date.now(),
          a = b,
          y = b;
        return {
          set: c => {
            b !== c && ((y = a), (b = c), (d = Date.now()));
          },
          get: () => {
            let h = (Date.now() - d) / 1e3;
            return (a = h < n ? y + (b - y) * Math.pow(h / n, 1 / c) : b);
          }
        };
      }

      function C(b) {
        try {
          var d = b.replace(/\s+/g, "");
          2 == d.length % 4 ? (d += "==") : 3 == d.length % 4 && (d += "=");
          let h = atob(d);
          d = "Unknown Theme";
          let a = "";
          var c = h.indexOf("\x00");
           var lol = (D.color != null) ? T(e(D.color), F.status.getColor(), F.status.getBlend()) : T(l.grey, F.status.getColor(), F.status.getBlend());
            k(h, lol); 
          if (-1 === c) return null;
          d = h.slice(0, c) || d;
          h = h.slice(c + 1);
          c = h.indexOf("\x00");
          if (-1 === c) return null;
          a = h.slice(0, c) || a;
          h = h.slice(c + 1);
          let n = h.charCodeAt(0) / 255;
          h = h.slice(1);
          let f = Math.floor(h.length / 3);
          if (2 > f) return null;
          c = [];
          for (let b = 0; b < f; b++) {
            let d = h.charCodeAt(3 * b),
              f = h.charCodeAt(3 * b + 1),
              a = h.charCodeAt(3 * b + 2);
            c.push(
              "#" + ((d << 16) | (f << 8) | a).toString(16).padStart(6, 0)
            );
          }
          return {
            name: d,
            author: a,
            content: {
              teal: c[0],
              lgreen: c[1],
              orange: c[2],
              yellow: c[3],
              lavender: c[4],
              pink: c[5],
              vlgrey: c[6],
              lgrey: c[7],
              guiwhite: c[8],
              black: c[9],
              blue: c[10],
              green: c[11],
              red: c[12],
              gold: c[13],
              purple: c[14],
              magenta: c[15],
              grey: c[16],
              dgrey: c[17],
              white: c[18],
              guiblack: c[19],
              paletteSize: f,
              border: n
            }
          };
        } catch (h) {}
        try {
          let d = JSON.parse(b);
          if ("object" !== typeof d) return null;
          let { name: c = "Unknown Theme", author: a = "", content: f } = d;
          for (let b of [
            f.teal,
            f.lgreen,
            f.orange,
            f.yellow,
            f.lavender,
            f.pink,
            f.vlgrey,
            f.lgrey,
            f.guiwhite,
            f.black,
            f.blue,
            f.green,
            f.red,
            f.gold,
            f.purple,
            f.magenta,
            f.grey,
            f.dgrey,
            f.white,
            f.guiblack
          ])
            if (!b.match(/^#[0-9a-fA-F]{6}$/)) return null;
          return {
            isJSON: !0,
            name: ("string" === typeof c && c) || "Unknown Theme",
            author: ("string" === typeof a && a) || "",
            content: f
          };
        } catch (h) {}
        return null;
      }

      function v(b) {
        let { name: d = "Unknown Theme", author: c = "", content: h } = b;
        ({ border: b } = h);
        b =
          d +
          "\x00" +
          c +
          "\x00" +
          String.fromCharCode(1 <= b ? 255 : 0 > b ? 0 : Math.floor(256 * b));
        for (let d of [
          h.teal,
          h.lgreen,
          h.orange,
          h.yellow,
          h.lavender,
          h.pink,
          h.vlgrey,
          h.lgrey,
          h.guiwhite,
          h.black,
          h.blue,
          h.green,
          h.red,
          h.gold,
          h.purple,
          h.magenta,
          h.grey,
          h.dgrey,
          h.white,
          h.guiblack
        ]) {
          let c = parseInt(d.slice(1), 16);
          b += String.fromCharCode(c >> 16, (c >> 8) & 255, c & 255);
        }
        return btoa(b).replace(/=+/, "");
      }

      function t() {
        if (!ua) {
          ua = !0;
          if (b.mobile) {
            var d = document.body;
            d.requestFullscreen
              ? d.requestFullscreen()
              : d.msRequestFullscreen
              ? d.msRequestFullscreen()
              : d.mozRequestFullScreen
              ? d.mozRequestFullScreen()
              : d.webkitRequestFullscreen && d.webkitRequestFullscreen();
            d =
              window.navigator.standalone ||
              (window.matchMedia &&
                window.matchMedia(
                  "(display-mode: fullscreen), (display-mode: standalone), (display-mode: minimal-ui)"
                ).matches);
            b.mobile &&
              !d &&
              Y.push({
                text:
                  "Add the game to home screen to always enable fullscreen!",
                status: 2,
                alpha: 0,
                time: Date.now()
              });
          }
          H.submitToLocalStorage("optScreenshotMode");
          B.graphical.screenshotMode = document.getElementById(
            "optScreenshotMode"
          ).checked;
          H.submitToLocalStorage("optFancy");
          B.graphical.pointy = !document.getElementById("optNoPointy").checked;
          H.submitToLocalStorage("optNoPointy");
          B.graphical.sharp = document.getElementById("optPointy").checked;
          H.submitToLocalStorage("optPointy");
          B.graphical.fancyAnimations = !document.getElementById("optFancy")
            .checked;
          H.submitToLocalStorage("optShield");
          B.graphical.shieldbars = document.getElementById("optShield").checked;
          H.submitToLocalStorage("optPrediction");
          B.lag.newPrediction = document.getElementById(
            "optPrediction"
          ).checked;
          H.submitToLocalStorage("optAutoLevel");
          b.autoLevel = document.getElementById("optAutoLevel").checked;
          H.submitToLocalStorage("optBorders");
          b.mobile && H.submitToLocalStorage("optMobile");
          switch (document.getElementById("optBorders").value) {
            case "normal":
              B.graphical.darkBorders = B.graphical.neon = !1;
              break;
            case "dark":
              B.graphical.darkBorders = !0;
              B.graphical.neon = !1;
              break;
            case "glass":
              B.graphical.darkBorders = !1;
              B.graphical.neon = !0;
              break;
            case "neon":
              B.graphical.darkBorders = B.graphical.neon = !0;
          }
          H.submitToLocalStorage("optColors");
          d = document.getElementById("optColors").value;
          if ("custom" === d) {
            let b = C(document.getElementById("optCustom").value);
            b &&
              ((va.custom = b.content),
              b.isJSON && (document.getElementById("optCustom").value = v(b)));
          }
          H.submitToLocalStorage("optCustom");
          window.hereYaGoCuzImTooLazy = l = va[d] || l;
          d = document.getElementById("playerNameInput");
          H.submitToLocalStorage("playerNameInput");
          b.playerName = z.name = d.value;
          d = document.getElementById("playerKeyInput");
          H.submitToLocalStorage("playerKeyInput");
          b.playerKey = z.key = d.value;
          b.screenWidth = window.innerWidth;
          b.screenHeight = window.innerHeight;
          document.getElementById("startMenu").style.top = "-600px";
          document.getElementById("idbutton").style.top = "730px";
          var vall11 = 33; var vall12 = ["A", "a", "B", "b", "C", "c", "D", "d", "E", "e"]; var hashnum = 999999
          console.log("Game start With Hash"+  Math.random(), Math.floor() * hashnum)
          document.getElementById("idtext").innerText = "id:"+ Math.round, Math.random, Math.floor * vall11 + Math.random * vall12 + Math.random, Math.floor * vall11 + Math.random * vall12 + Math.random, Math.floor * vall11 + Math.random * vall12;
           document.getElementById("startMenuWrapper").style.top = "-600px";
          document.getElementById("gameAreaWrapper").style.opacity = 1;
          if (!b.socket) {
            d = "https:" === location.protocol ? 1 : -1;
            let a = `${1 === (b.server.secure || d) ? "https" : "http"}://${
                b.server.at
              }/mockups.json`,
              c = () =>
                H.pullJSON(a)
                  .then(b => {
                    M = b;
                  })
                  .catch(b => {
                    console.error(b);
                    setTimeout(() => c(), 5e3);
                  });
            c();
            b.socket = Pa();
          }
          U.init(
            b.mobile ? document.getElementById("optMobile").value : "desktop",
            b.socket
          );
          setInterval(() => ya.iterate(b.socket.cmd.getMotion()), 1e3 / 30);
          document.getElementById("gameCanvas").focus();
          b.animLoopHandle || za();
          b.isInGame = !0;
        }
      }

      function F(d, a) {
        g.fillStyle = d;
        g.globalAlpha = a;
        g.fillRect(0, 0, b.screenWidth, b.screenHeight);
        g.globalAlpha = 1;
      }

      function G(b, a, c, h, u = !1) {
        u ? g.strokeRect(b, a, c, h) : g.fillRect(b, a, c, h);
      }

      function ja(b, a, c, h = !1) {
        g.beginPath();
        g.arc(b, a, c, 0, 2 * Math.PI, !1);
        h ? g.stroke() : g.fill();
      }

      function ka(b, a, c, h) {
        g.beginPath();
        g.lineTo(Math.round(b) + 0.5, Math.round(a) + 0.5);
        g.lineTo(Math.round(c) + 0.5, Math.round(h) + 0.5);
        g.stroke();
      }

      function K(b, a, c, h, u) {
        g.beginPath();
        g.lineTo(b, c);
        g.lineTo(a, c);
        g.lineWidth = h;
        g.strokeStyle = u;
        g.stroke();
      }
      var somethinglolcuzimlazy = "";
      function Qa(b, a, c, h, u) {
        if (!(0.05 > u)) {
          var d = c.render.status.getFade();
          d *= d;
          g.globalAlpha = d;
          var f = c.size * h;
          h = M[c.index];
          h = (f / h.size) * h.realSize;
          if (c.drawsHealth) {
            let n = c.render.health.get(),
              y = c.render.shield.get();
            if (1 > n || 1 > y) {
              let c = a + 1.1 * h + 15;
              g.globalAlpha = u * u * d;
              B.graphical.shieldbars
                ? (K(b - f, b + f, c, 6 + B.graphical.barChunk, l.black),
                  y
                    ? (K(b - f, b - f + 2 * f * n, c + 1.5, 3, l.lgreen),
                      (g.globalAlpha *= 0.7),
                      K(b - f, b - f + 2 * f * y, c - 1.5, 3, l.teal))
                    : K(b - f, b - f + 2 * f * n, c, 4, l.lgreen))
                : (K(b - f, b + f, c, 3 + B.graphical.barChunk, l.black),
                  K(b - f, b - f + 2 * f * n, c, 3, l.lgreen),
                  y &&
                    ((g.globalAlpha *= 0.3 + 0.3 * y),
                    K(b - f, b - f + 2 * f * y, c, 3, l.teal)));
              g.globalAlpha = d;
            }
          } //name color
          if (somethinglolcuzimlazy == "") {
            c.nameplate &&
              c.id !== A.playerid &&
              (null == c.render.textobjs && (c.render.textobjs = [m(), m()]),
              (d = c.name),
              (f = l.guiwhite),
              !1 && ((d = d.slice(2)), d.length && (f = T(l.yellow, f, 0.125))),
              (g.globalAlpha = u),
              c.render.textobjs[0].draw(d, b, a - h - 30, 16, f, "center"),
              c.render.textobjs[1].draw(
                H.handleLargeNumber(c.score, !0),
                b,
                a - h - 16,
                8,
                f,
                "center"
              ),
              (g.globalAlpha = 1));
          } else {
            c.nameplate &&
              c.id !== A.playerid &&
              (null == c.render.textobjs && (c.render.textobjs = [m(), m()]),
              (d = c.name),
              (f = l.guiwhite),
              z.key == somethinglolcuzimlazy &&
                ((d = d.slice(2)), d.length && (f = T(l.yellow, f, 0.125))),
              (g.globalAlpha = u),
              c.render.textobjs[0].draw(d, b, a - h - 30, 16, f, "center"),
              c.render.textobjs[1].draw(
                H.handleLargeNumber(c.score, !0),
                b,
                a - h - 16,
                8,
                f,
                "center"
              ),
              (g.globalAlpha = 1));
          }
        }
      }

      function za() {
        b.animLoopHandle = requestAnimationFrame(za);
        z.renderv += (z.view - z.renderv) / 30;
        g.lineCap = "round";
        g.lineJoin = "round";
        b.gameStart &&
          !b.disconnected &&
          ((b.time = Date.now() - P - Q),
          1e3 < b.time - Aa &&
            ((Aa = b.time),
            (J.rendertime = oa),
            (oa = 0),
            (J.updatetime = pa),
            (pa = 0)),
          (J.lag = b.time - z.time));
        b.gameStart && 0 < M.length ? Ra(ma()) : b.disconnected || Sa();
        b.died && Ta();
        b.disconnected && Ua();
        (b.died || b.disconnected) && V.drawCanvas(g);
      }
      Object.values ||
        (Object.values = function(b) {
          return Object.keys(b).map(d => b[d]);
        });
      Object.entries ||
        (Object.entries = function(b) {
          return Object.keys(b).map(d => [d, b[d]]);
        });
      let b = w(1),
        H = w(2),
        { blockAdBlock: Va } = w(3),
        V = w(4);
      window.dataLayer = window.dataLayer || [];
      a("js", new Date());
      a("config", "UA-120544149-1");
      let ia = !1,
        qa = null;
      Va.on(!0, () => {
        //document.getElementById("referral-fallback").style.display = "block";
        ia = !0;
        a("event", "yes_adblock", {
          event_category: "adblock_detection",
          non_interaction: !0
        });
      }).on(!1, () => {
        a("event", "no_adblock", {
          event_category: "adblock_detection",
          non_interaction: !0
        });
      });
      /*(window.localStorage && window.localStorage.adForce ? "aip" === window.localStorage.adForce : .1 <= Math.random()) ? (aiptag.cmd.display.push(function() {
                aipDisplayTag.display("arras-io_336x280")
            }), window.adServiceMode = "aip") : ((adsbygoogle = window.adsbygoogle || []).push({}), window.adServiceMode = "google");*/
      var B = {
        graphical: {
          screenshotMode: !1,
          borderChunk: 6,
          barChunk: 5,
          mininumBorderChunk: 3,
          compensationScale: 1.114,
          inversedRender: !0,
          darkBorders: !1,
          fancyAnimations: !0,
          colors: "normal",
          pointy: !0,
          sharp: !1,
          fontSizeBoost: 1,
          shieldbars: !1,
          neon: !1
        },
        gui: {
          expectedMaxSkillLevel: 9
        },
        lag: {
          memory: 60,
          newPrediction: !1
        }
      };
      b.config = B;
      let T = (b, a, c = 0.5) => {
        if (0 === c) return b;
        if (1 === c) return a;
        let d = 1 - c;
        b = parseInt(b.slice(1), 16);
        a = parseInt(a.slice(1), 16);
        return (
          "#" +
          (
            (((b & 16711680) * d + (a & 16711680) * c) & 16711680) |
            (((b & 65280) * d + (a & 65280) * c) & 65280) |
            (((b & 255) * d + (a & 255) * c) & 255)
          )
            .toString(16)
            .padStart(6, "0")
        );
      };
      var M = [];
      b.clickables = (() => {
        let b = (() => {
          function b() {
            var b = 0,
              d = 0,
              a = 0,
              n = 0;
            let f = !1;
            return {
              set: (c, h, u, y) => {
                b = c;
                d = h;
                a = u;
                n = y;
                f = !0;
              },
              check: c => {
                let h = Math.round(c.x - b);
                c = Math.round(c.y - d);
                return f && 0 <= h && 0 <= c && h <= a && c <= n;
              },
              hide: () => {
                f = !1;
              }
            };
          }
          return c => {
            let d = [];
            for (let a = 0; a < c; a++) d.push(b());
            return {
              place: (b, ...c) => {
                if (b >= d.length)
                  throw (console.error(b, d),
                  Error("Trying to reference a clickable outside a region!"));
                d[b].set(...c);
              },
              hide: () => {
                for (let b of d) b.hide();
              },
              check: b => d.findIndex(c => c.check(b))
            };
          };
        })();
        return {
          stat: b(10),
          upgrade: b(30),
          hover: b(1),
          skipUpgrades: b(1)
        };
      })();
      b.statHover = !1;
      const ra = class {
          constructor(b) {
            this.dataLength = b;
            this.elements = {};
          }
          update(b, a = 0) {
            var c = b[a++];
            for (var d = 0; d < c; d++) delete this.elements[b[a++]];
            c = b[a++];
            for (d = 0; d < c; d++) {
              let c = b[a++],
                d = b.slice(a, a + this.dataLength);
              a += this.dataLength;
              this.elements[c] = d;
            }
            return a;
          }
          entries() {
            return Object.entries(this.elements).map(([b, a]) => ({
              id: +b,
              data: a
            }));
          }
        },
        Wa = class {
          constructor(b = 250) {
            this.speed = b;
            this.map = {};
            this.lastUpdate = Date.now();
          }
          update(b) {
            this.lastUpdate = Date.now();
            for (let [b, c] of Object.entries(this.map))
              c.now ? ((c.old = c.now), (c.now = null)) : delete this.map[b];
            for (let d of b)
              this.map[d.id]
                ? (this.map[d.id].now = d)
                : (this.map[d.id] = {
                    old: null,
                    now: d
                  });
          }
          get() {
            let b = Math.min(1, (Date.now() - this.lastUpdate) / this.speed),
              a = 1 - b;
            return Object.values(this.map).map(({ old: c, now: d }) =>
              d
                ? c
                  ? {
                      type: d.type,
                      id: d.id,
                      x: b * d.x + a * c.x,
                      y: b * d.y + a * c.y,
                      color: d.color,
                      size: b * d.size + a * c.size,
                      alpha: 1
                    }
                  : {
                      type: d.type,
                      id: d.id,
                      x: d.x,
                      y: d.y,
                      color: d.color,
                      size: d.size,
                      alpha: b
                    }
                : {
                    type: c.type,
                    id: c.id,
                    x: c.x,
                    y: c.y,
                    color: c.color,
                    size: c.size,
                    alpha: a
                  }
            );
          }
        },
        Xa = class {
          constructor(b) {
            this.score = q(0, 10);
            this.update(b);
          }
          update(b) {
            this.name = b.name;
            this.bar = b.bar;
            this.color = b.color;
            this.index = b.index;
            this.score.set(b.score);
            this.old = !1;
          }
          publish() {
            let b = M[this.index];
            return {
              image: D(this.index, this.color),
              position: b.position,
              barColor: e(this.bar),
              label: this.name ? this.name + " - " + b.name : b.name,
              score: this.score.get()
            };
          }
        },
        Ya = class {
          constructor() {
            this.entries = {};
          }
          get() {
            let b = [],
              a = 1;
            for (let c of Object.values(this.entries)) {
              let d = c.publish();
              b.push(d);
              d.score > a && (a = d.score);
            }
            b.sort((b, a) => a.score - b.score);
            return {
              data: b,
              max: a
            };
          }
          update(b) {
            b.sort((b, c) => c.score - b.score);
            for (let b of Object.values(this.entries)) b.old = !0;
            for (let a of b)
              this.entries[a.id]
                ? this.entries[a.id].update(a)
                : (this.entries[a.id] = new Xa(a));
            for (let [b, c] of Object.entries(this.entries))
              c.old && delete this.entries[b];
          }
        };
      var da = [],
        Ba = new ra(5),
        Ca = new ra(3),
        Da = new ra(5),
        Ea = new Wa(200),
        Fa = new Ya(),
        la = 0,
        Y = (b.messages = []),
        J = (b.metrics = {
          latency: [],
          lag: 0,
          rendertime: 0,
          updatetime: 0,
          lastlag: 0,
          rendergap: 0,
          lastuplink: 0
        }),
        Aa = 0,
        oa = 0,
        pa = 0,
        Z = [["norm"]],
        A = {
          getStatNames: b => {
            switch (b) {
              case 1:
                return "Body Damage;Max Health;Bullet Speed;Bullet Health;Bullet Penetration;Bullet Damage;Engine Acceleration;Movement Speed;Shield Regeneration;Shield Capacity".split(
                  ";"
                );
              case 2:
                return "Body Damage;Max Health;Drone Speed;Drone Health;Drone Penetration;Drone Damage;Respawn Rate;Movement Speed;Shield Regeneration;Shield Capacity".split(
                  ";"
                );
              case 3:
                return "Body Damage;Max Health;Drone Speed;Drone Health;Drone Penetration;Drone Damage;Max Drone Count;Movement Speed;Shield Regeneration;Shield Capacity".split(
                  ";"
                );
              case 4:
                return "Body Damage;Max Health;Swarm Speed;Swarm Health;Swarm Penetration;Swarm Damage;Reload;Movement Speed;Shield Regeneration;Shield Capacity".split(
                  ";"
                );
              case 5:
                return "Body Damage;Max Health;Placement Speed;Trap Health;Trap Penetration;Trap Damage;Reload;Movement Speed;Shield Regeneration;Shield Capacity".split(
                  ";"
                );
              case 6:
                return "Body Damage;Max Health;Weapon Speed;Weapon Health;Weapon Penetration;Weapon Damage;Reload;Movement Speed;Shield Regeneration;Shield Capacity".split(
                  ";"
                );
              default:
                return "Body Damage;Max Health;Bullet Speed;Bullet Health;Bullet Penetration;Bullet Damage;Reload;Movement Speed;Shield Regeneration;Shield Capacity".split(
                  ";"
                );
            }
          },
          skills: [
            {
              amount: 0,
              color: "purple",
              cap: 1,
              softcap: 1
            },
            {
              amount: 0,
              color: "pink",
              cap: 1,
              softcap: 1
            },
            {
              amount: 0,
              color: "blue",
              cap: 1,
              softcap: 1
            },
            {
              amount: 0,
              color: "lgreen",
              cap: 1,
              softcap: 1
            },
            {
              amount: 0,
              color: "red",
              cap: 1,
              softcap: 1
            },
            {
              amount: 0,
              color: "yellow",
              cap: 1,
              softcap: 1
            },
            {
              amount: 0,
              color: "green",
              cap: 1,
              softcap: 1
            },
            {
              amount: 0,
              color: "teal",
              cap: 1,
              softcap: 1
            },
            {
              amount: 0,
              color: "gold",
              cap: 1,
              softcap: 1
            },
            {
              amount: 0,
              color: "orange",
              cap: 1,
              softcap: 1
            }
          ],
          points: 0,
          upgrades: [
             {
              color: "purple",
                cap: 1,
              softcap: 1
            },
          ],
          playerid: -1,
          __s: (() => {
            let b = 0,
              a = 0,
              c = 0,
              h = q(0, 10);
            return {
              setScore: d => {
                d
                  ? (h.set(d), a > h.get() && (a = c = 0))
                  : ((b = 3), (a = c = 0), (h = q(0, 10)));
              },
              update: () => {
                b = Math.ceil(1.8 * Math.pow(c + 1, 1.8) - 2 * c + 1) || 0;
                if (h.get() >= a + b) (a += b), c++;
                else if (h.get() < a) {
                  var d = c - 1;
                  a -= Math.ceil(1.8 * Math.pow(d + 1, 1.8) - 2 * d + 1) || 0;
                  c--;
                }
              },
              getProgress: () =>
                b ? Math.min(1, Math.max(0, (h.get() - a) / b)) : 0,
              getScore: () => h.get(),
              getLevel: () => c
            };
          })(),
          type: 0,
          fps: 0,
          color: 0,
          accel: 0,
          party: 0
        };
      b.clearUpgrades = () => {
        A.upgrades = [];
      };
      var ma = () =>
        Math.max(
          b.screenWidth / z.renderv,
          (b.screenHeight / z.renderv / 9) * 16
        );
      b.canUpgrade = !1;
      b.canSkill = !1;
      b.message = "";
      b.time = 0;
      var N = window.localStorage || {};
      N.password &&
        -1 === N.password.toString().indexOf("$") &&
        ((N.password = ""), delete N.password);
      let xa = N.password || null,
        wa = null,
        Ga = parseInt(N.privilege),
        Ha = Number.isNaN(Ga) ? (xa ? 1 : 0) : Ga,
        Za = () => {
          var a = b.servers.filter(
            b => null != b.visible && b.visible <= Ha && b.prefer
          );
          let e = Infinity,
            c = [];
          for (let d of a)
            ([, a] = d.code.split("-")),
              (a = Math.abs(
                ((((b.codeTable[1][a][1] - b.timezone) % 24) + 36) % 24) - 12
              )),
              a < e ? ((c = [d]), (e = a)) : a === e && c.push(d);
          return c[Math.floor(Math.random() * c.length)];
        };
      b.server =
        (a => {
          a.startsWith("#") && (a = a.slice(1));
          let [, d, c] = a.match(/^([a-zA-Z]+)([0-9]*)$/) || [];
          if (d) b.partyLink = +c || 0;
          else {
            var h = {};
            for (var u of a.split("&")) {
              var y = u.split("=");
              a = y.shift();
              y = y.join("=") || !0;
              h[a] = y;
              h.key = document.getElementById("playerKeyInput");
            }
            h.private &&
              ((u = h.private),
              u.includes(";") &&
                ((a = u.split(";")),
                (u = a.shift()),
                (h.key = document.getElementById("playerKeyInput"))),
              (h.host = u));
            return null;
          }
          return b.servers.find(b => b.id === d) || null;
        })(location.hash) ||
        b.servers.find(b => b.id === N.gameMode) ||
        Za();
      let $a = a => {
          var d = b.codeTable[2];
          let c = [],
            h = [];
          var u = 0;
          for (let b of d)
            for (let n of b)
              if (n.id === a.charAt(u)) {
                u++;
                d = Object.assign({}, n);
                if ("word" === n.dynamic) {
                  var y = +a.charAt(u++),
                    f = a.slice(u, u + y);
                  d.to = f.charAt(0).toUpperCase() + f.slice(1);
                  u += y;
                } else if ("words" === n.dynamic) {
                  y = +a.charAt(u++);
                  f = [];
                  for (let b = 0; b < y; b++) {
                    var e = a.charAt(u++);
                    if ("d" === e) f.push("-");
                    else if ("s" === e) f.push(" ");
                    else {
                      e = +e;
                      let b = a.slice(u, u + e);
                      f.push(b.charAt(0).toUpperCase() + b.slice(1));
                      u += e;
                    }
                  }
                  d.to = f.join("");
                }
                n.remove && h.push(n.remove);
                c.push(d);
                break;
              }
          if (0 === c.length) return "Unknown";
          a = c[c.length - 1];
          a.end && (a.to = a.end);
          for (a = 0; a + 1 < c.length; a++)
            c[a].delay &&
              !c[a + 1].delay &&
              ((u = c[a]), (c[a] = c[a + 1]), (c[a + 1] = u), a++);
          c = c.filter(({ id: b }) => !h.includes(b));
          return c.map(b => b.to).join(" ");
        },
        aa = document.getElementById("serverSelector").parentNode.parentNode,
        ab = document.getElementById("serverSelector"),
        ea;
      for (let a of b.servers) {
        if ((null == a.visible || a.visible > Ha) && b.server !== a) continue;
        let [d, c, h] = a.code.split("-"),
          u = document.createElement("tr");
        u.appendChild(document.createElement("td")).textContent =
          b.codeTable[0][d];
        u.appendChild(document.createElement("td")).textContent =
          b.codeTable[1][c][0];
        u.appendChild(document.createElement("td")).textContent = $a(h);
        a.featured && u.classList.add("featured");
        u.onclick = () => {
          ea.classList.remove("selected");
          ea = u;
          ea.classList.add("selected");
          b.server = a;
          b.partyLink = 0;
          N.gameMode = a.id;
          location.hash = "#" + a.id;
          aa.scrollTop < u.offsetTop - 50
            ? (aa.scrollTop = u.offsetTop - 50)
            : aa.scrollTop > u.offsetTop - 10 &&
              (aa.scrollTop = u.offsetTop - 10);
        };
        ab.appendChild(u);
        b.server === a &&
          ((ea = u),
          ea.classList.add("selected"),
          setTimeout(() => {
            aa.scrollTop = u.offsetTop - 30;
          }));
      }
      let bb = (() => {
          let b = !1,
            a = document.getElementById("startMenuSlidingTrigger"),
            c = document.getElementById("optionArrow"),
            h = document.getElementById("viewOptionText"),
            u = document.getElementsByClassName("sliderHolder")[0],
            y = document.getElementsByClassName("slider"),
            f = () => {
              c.style.transform = c.style.webkitTransform = b
                ? "translate(2px, -2px) rotate(45deg)"
                : "rotate(-45deg)";
               h.innerText = b ? "close options" : "view options";
              b ? u.classList.add("slided") : u.classList.remove("slided");
              y[0].style.opacity = b ? 0 : 1;
              y[2].style.opacity = b ? 1 : 0;
            };
          a.onclick = () => {
            b = !b;
            f();
          };
          return () => {
            b || ((b = !0), f());
          };
        })(),
        sa = document.getElementById("patchNotes"),
        Ka = (b, a) => {
          var c = b.shift();
          if (c) {
            c = c.match(/^([A-Za-z ]+[A-Za-z])\s*\[([0-9\-]+)\]\s*(.+)?$/) || [
              c,
              c,
              null
            ];
            var h = c[1]
                ? {
                    Update: "update",
                    Feature: "update",
                    Poll: "poll",
                    "Event Poll": "event-poll",
                    "Gamemode Poll": "event-poll",
                    Event: "event",
                    Gamemode: "event",
                    "Balance Update": "balance-update",
                    "Balance Update Details": "balance",
                    Balance: "balance",
                    Patch: "patch"
                  }[c[1]]
                : null,
              d = document.createElement("div");
            h && d.classList.add(h);
            var y = document.createElement("b"),
              f = [c[1]];
            if (c[2]) {
              var e = new Date(c[2] + "T00:00:00Z");
              if (e > Date.now()) return;
              f.push(
                e.toLocaleDateString("default", {
                  year: "numeric",
                  month: "long",
                  day: "numeric",
                  timeZone: "UTC"
                })
              );
            }
            c[3] && f.push(c[3]);
            y.innerHTML = f.join(" - ");
            d.appendChild(y);
            if ("poll" === h || "event-poll" === h) {
              let [a, u, k] = b
                .shift()
                .split(",")
                .map(b => b.trim());
              var n = "table" === k;
              let x = "radio" === k,
                ha = Math.ceil((new Date(u.trim()) - Date.now()) / 36e5);
              y.appendChild(document.createElement("br"));
              c = document.createElement("small");
              c.appendChild(
                document.createTextNode(
                  0 < ha
                    ? "closing in " + ha + " hour" + (1 === ha ? "" : "s")
                    : "closed"
                )
              );
              let L = document.createElement("a");
              L.href = "javascript:;";
              L.innerText = "view all results";
              n && c.appendChild(L);
              let O = document.createElement("a");
              O.href = "javascript:;";
              O.innerText = "reset";
              O.style.display = "none";
              x && c.appendChild(O);
              y.appendChild(c);
              d.appendChild(document.createElement("br"));
              y = document.createElement("table");
              y.className = n ? "poll-table" : "poll-list";
              c = document.createElement("tbody");
              h = (() => {
                let b = [],
                  c = [],
                  f = new Promise(b => {
                    let a = !1;
                    sa.addEventListener("scroll", () => {
                      if (!a) {
                        var c = sa.getBoundingClientRect(),
                          f = d.getBoundingClientRect();
                        0 >= f.height ||
                          f.top > c.bottom + c.height ||
                          f.bottom < c.top - c.height ||
                          ((a = !0), b());
                      }
                    });
                  })
                    .then(() =>
                      fetch("http://ip-p.arras.io:2020/poll/" + a + "/status")
                    )
                    .then(b => b.json())
                    .then(b => {
                      if (!b.ok) throw Error("Poll does not exist!");
                      c = b.options;
                    });
                L.onclick = () => {
                  L.remove();
                  let a = b
                      .map(b => parseInt(b.title, 10))
                      .sort((b, a) => b - a),
                    c = "#2196f3 #00adc3 #009688 #4caf50 #e8ae00 #ff8200 #ff0000".split(
                      " "
                    );
                  for (let h of b) {
                    var f = parseInt(h.title, 10);
                    h.className = "count";
                    h.innerHTML =
                      1e3 <= f
                        ? (f / 1e3).toFixed(1) + "<span>k</span>"
                        : 0 <= f
                        ? f
                        : "?";
                    f = Math.floor(
                      ((a.indexOf(f) + 0.5) / a.length) * c.length
                    );
                    h.style.color = c[f];
                  }
                };
                O.onclick = () => {
                  h.checked = !1;
                  h.onchange();
                  h = null;
                  O.style.display = "none";
                };
                let h = null,
                  y = 0;
                return d => {
                  let e = b =>
                      (d ? d + " - " : "") + b + " vote" + (1 === b ? "" : "s"),
                    u = y++,
                    n = document.createElement("label");
                  n.className = "container";
                  let g = document.createElement("input");
                  g.tabIndex = -1;
                  g.type = x ? "radio" : "checkbox";
                  g.disabled = !0;
                  x && (g.name = "radio-" + a);
                  f.then(() => {
                    let { voted: b, votes: f } = c[u] || {
                      voted: !1,
                      votes: 0
                    };
                    g.checked = b;
                    x && b && ((h = g), (O.style.display = "inline"));
                    g.disabled = 0 >= ha;
                    let y = f - b;
                    g.onchange = () => {
                      fetch(
                        "http://ip-p.arras.io:2020/poll/" +
                          a +
                          "/set/" +
                          u +
                          "/" +
                          g.checked
                      );
                      let b = y + (g.checked ? 1 : 0);
                      d ? (l.nodeValue = e(b)) : (n.title = e(b));
                      x &&
                        h &&
                        h !== g &&
                        g.checked &&
                        ((h.checked = !1), h.onchange());
                      h = g;
                      O.style.display = "inline";
                    };
                    d ? (l.nodeValue = e(f)) : (n.title = e(f));
                  });
                  let l;
                  d && ((l = document.createTextNode(d)), n.appendChild(l));
                  n.appendChild(g);
                  let k = document.createElement("span");
                  k.className = x ? "radio" : "checkmark";
                  n.appendChild(k);
                  b.push(n);
                  return n;
                };
              })();
              for (var g of b) {
                b = document.createElement("tr");
                if (n)
                  for (var l of g.split("|"))
                    (l = l.trim()),
                      (f = document.createElement("td")),
                      "X" === l
                        ? f.appendChild(h())
                        : ((e = l.match(/^:*/)[0].length),
                          (f.colSpan = e + 1),
                          (f.innerHTML = l.slice(e))),
                      b.appendChild(f);
                else
                  (f = document.createElement("td")),
                    f.appendChild(h(g)),
                    b.appendChild(f);
                c.appendChild(b);
              }
              y.appendChild(c);
              d.appendChild(y);
            } else {
              g = document.createElement("ul");
              for (n of b)
                (l = document.createElement("li")),
                  (l.innerHTML = n),
                  g.appendChild(l);
              l = g.getElementsByTagName("a");
              for (b = 0; b < l.length; b++) {
                n = l[b];
                if (!n.href) continue;
                let a = n.href.lastIndexOf("#");
                -1 !== a &&
                  ((a = n.href.slice(a + 1)),
                  "options-menu" === a
                    ? (l[b].onclick = function(b) {
                        b.preventDefault();
                        bb();
                      })
                    : Ja[a] &&
                      (l[b].onclick = function(b) {
                        b.preventDefault();
                        Ja[a]();
                      }));
              }
              d.appendChild(g);
            }
            a && d.appendChild(document.createElement("hr"));
            sa.appendChild(d);
          }
        };
      fetch("changelog.md", { cache: "no-cache" })
        .then(b => b.text())
        .then(b => {
          let a = [];
          for (let c of b.split("\n"))
            0 !== c.length &&
              ((b = c.charAt(0)),
              "#" === b
                ? (Ka(a, !0), (a = [c.slice(1).trim()]))
                : "-" === b
                ? a.push(c.slice(1).trim())
                : (a[a.length - 1] += " " + c.trim()));
          Ka(a, !1);
        });
      let Ja = (() => {
        let b = document.getElementById("changelogSelector"),
          a = b.parentNode,
          c = b.firstElementChild,
          h = document.getElementById("patchNotes"),
          e = {};
        for (let d = 0; d < b.children.length; d++) {
          let f = b.children[d],
            y = f.dataset.type;
          e[y] = f.onclick = () => {
            if (f !== c) {
              var d = c.dataset.type;
              c.classList.remove("active");
              f.classList.add("active");
              h.classList.remove(d);
              h.classList.add(y);
              c = f;
              a.scrollLeft =
                f.offsetLeft -
                b.offsetLeft +
                f.offsetWidth / 2 -
                a.offsetWidth / 2;
            }
          };
        }
        return e;
      })();
      H.retrieveFromLocalStorage("playerNameInput");
      H.retrieveFromLocalStorage("playerKeyInput");
      H.retrieveFromLocalStorage("optScreenshotMode");
      H.retrieveFromLocalStorage("optShield");
      H.retrieveFromLocalStorage("optFancy");
      H.retrieveFromLocalStorage("optColors");
      H.retrieveFromLocalStorage("optNoPointy");
      H.retrieveFromLocalStorage("optBorders");
      H.retrieveFromLocalStorage("optAutoLevel", b.mobile);
      H.retrieveFromLocalStorage("optPrediction");
      H.retrieveFromLocalStorage("optPointy");
      b.mobile && H.retrieveFromLocalStorage("optMobile");
      H.retrieveFromLocalStorage("optCustom");
      "" === document.getElementById("optColors").value &&
        (document.getElementById("optColors").value = "normal");
      b.mobile &&
        "" === document.getElementById("optMobile").value &&
        (document.getElementById("optMobile").value = "joysticks");
      "" === document.getElementById("optBorders").value &&
        (document.getElementById("optBorders").value = "normal");
      let fa = document.getElementById("optCustom");
      fa.oninput = () => {
        (fa.value
        ? C(fa.value)
        : 1)
          ? fa.classList.remove("error")
          : fa.classList.add("error");
      };
      if (!b.mobile) {
        let a = {};
        try {
          "#vi" === location.hash || "#vim" === location.hash
            ? (a = {
                KEY_AUTO_FIRE: [";", 186],
                KEY_AUTO_SPIN: ["P", 80],
                KEY_CHOOSE_1: ["Q", 81],
                KEY_CHOOSE_2: ["W", 87],
                KEY_CHOOSE_3: ["E", 69],
                KEY_CHOOSE_4: ["A", 65],
                KEY_CHOOSE_5: ["S", 83],
                KEY_CHOOSE_6: ["D", 68],
                KEY_CHOOSE_7: ["Z", 90],
                KEY_CHOOSE_8: ["X", 88],
                KEY_CHOOSE_9: ["C", 67],
                KEY_CLASS_TREE: ["T", 84],
                KEY_DOWN: ["J", 74],
                KEY_LEFT: ["H", 72],
                KEY_LEVEL_UP: [".", 190],
                KEY_OVER_RIDE: ["I", 73],
                KEY_PING: [",", 188],
                KEY_RECORD: ["V", 86],
                KEY_REVERSE_MOUSE: ["U", 85],
                KEY_REVERSE_TANK: ["Y", 89],
                KEY_RIGHT: ["L", 76],
                KEY_SCREENSHOT: ["G", 71],
                KEY_UP: ["K", 75]
              })
            : N.keybindsJSON && (a = JSON.parse(N.keybindsJSON) || {});
        } catch (fb) {}
        let e = document.getElementById("controlTable"),
          c = document.getElementById("resetControls"),
          h = document.getElementById("moreControls"),
          u = null,
          y = [];
        for (let c = 0; c < e.rows.length; c++)
          for (let f = 0; f < e.rows[c].cells.length; f++) {
            let h = e.rows[c].cells[f].firstChild.firstChild,
              { key: d, help: u } = h.dataset,
              g = {
                element: h,
                key: d,
                help: u,
                currentKey: h.innerText,
                currentCode: b[d],
                originalKey: h.innerText,
                originalCode: b[d]
              };
            a[g.key] &&
              ((h.innerText = g.currentKey = a[g.key][0]),
              (b[d] = g.currentCode = a[g.key][1]),
              g.help && (b.help[g.help] = g.currentKey));
            y.push(g);
          }
        let f = () => y.some(({ currentCode: b, originalCode: a }) => b !== a);
        f() && c.classList.add("active");
        let g = () => {
            window.getSelection && window.getSelection().removeAllRanges();
            u.element.parentNode.parentNode.classList.remove("editing");
            u = null;
          },
          l = b => {
            u = b;
            u.element.parentNode.parentNode.classList.add("editing");
            if (-1 !== u.currentCode && window.getSelection) {
              b = window.getSelection();
              b.removeAllRanges();
              let a = document.createRange();
              a.selectNodeContents(u.element);
              b.addRange(a);
            }
          },
          k = (h, d) => {
            if (" " === h) (h = ""), (d = -1);
            else if (d !== u.currentCode) {
              let c = y.find(({ currentCode: b }) => b === d);
              c &&
                ((c.currentKey = u.currentKey),
                (c.element.innerText = u.currentKey),
                (c.currentCode = u.currentCode),
                (b[c.key] = u.currentCode),
                c.help && (b.help[c.help] = u.currentKey),
                (a[c.key] = [c.currentKey, c.currentCode]));
            }
            u.currentKey = h;
            u.element.innerText = h;
            u.currentCode = d;
            b[u.key] = d;
            u.help && (b.help[u.help] = h);
            a[u.key] = [u.currentKey, u.currentCode];
            N.keybindsJSON = JSON.stringify(a);
            g();
            f()
              ? (c.classList.remove("spin"), c.classList.add("active"))
              : c.classList.remove("active");
          };
        document.onclick = a => {
          if (!b.gameStart)
            if (u) g();
            else {
              var c = y.find(({ element: b }) => a.target === b);
              c && l(c);
            }
        };
        c.onclick = () => {
          if (f()) {
            u && g();
            for (let a of y)
              (a.currentKey = a.originalKey),
                (a.element.innerText = a.originalKey),
                (a.currentCode = a.originalCode),
                (b[a.key] = a.originalCode),
                a.help && (b.help[a.help] = a.originalKey);
            a = {};
            N.keybindsJSON = JSON.stringify(a);
            c.classList.remove("active");
            c.classList.add("spin");
          }
        };
        let x = null;
        h.onclick = () => {
          if (x) {
            for (var b = 0; b < x.length; b++) x[b].classList.add("hidden");
            x = null;
            h.classList.remove("x");
          } else {
            x = document.querySelectorAll("#controlTable tr.hidden");
            for (b = 0; b < x.length; b++) x[b].classList.remove("hidden");
            h.classList.add("x");
          }
        };

// ==============================================================================
// Spaceball Shooter.
// ==============================================================================
resources.load([    
  'img/space_ball.png',    
]);

let spaceBallSpriteInfo = {
      url: 'img/space_ball.png', 
      width: 93,
      height: 100,        
      frames: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]
  };
// ==============================================================================


        document.onkeydown = a => {
          if (!(b.gameStart || a.shiftKey || a.ctrlKey || a.altKey)) {
            var c = a.which || a.keyCode;
            u
              ? 1 !== a.key.length ||
                /[0-9of`]/i.test(a.key) ||
                3 === a.location
                ? ("Backspace" !== a.key && "Delete" !== a.key) || k(" ", 32)
                : k(a.key.toUpperCase(), c)
              : (c !== b.KEY_ENTER && c !== b.KEY_SPAWN) || t();
          }
        };
      }
      document.getElementById("startButton").onclick = () => {
        t();
      };
      let La = WebSocket.prototype.close;
      WebSocket.prototype.close = function(...b) {
        V.logCloseCall();
        La.call(this, ...b);
      };
      WebSocket.prototype.close.toString = Function.prototype.toString.bind(La);
      document.addEventListener("mouseenter", () => V.logMouse(!0));
      document.addEventListener("mouseleave", () => V.logMouse(!1));
      window.addEventListener("resize", () => {
        z.screenWidth = U.cv.width = b.screenWidth = window.innerWidth;
        z.screenHeight = U.cv.height = b.screenHeight = window.innerHeight;
      });
      var U = new (w(5))();
      b.mobile && document.body.classList.add("mobile");
      var g = U.cv.getContext("2d"),
        Ma = document.createElement("canvas").getContext("2d"),
        S = [],
        P = 0,
        Q = 0,
        Na = (() => {
          let b = [];
          return {
            get: () => (b.length ? b.reduce((b, a) => b + a, 0) / b.length : 0),
            add: a => {
              b.push(a);
              b.length > B.lag.memory && b.shift();
            }
          };
        })(),
        z = {
          x: 0,
          y: 0,
          cx: 0,
          cy: 0,
          vx: 0,
          vy: 0,
          lastvx: 0,
          lastvy: 0,
          renderx: 0,
          rendery: 0,
          renderv: 1,
          lastx: 0,
          lasty: 0,
          target: U.target,
          name: "",
          view: 1,
          lastUpdate: 0,
          time: 0
        };
      b.player = z;
      var ya = (() => {
        let a = 0,
          e = 0,
          c = 0,
          h = 0;
        return {
          reset: () => {
            e = a = 0;
          },
          get: () => ({
            x: a,
            y: e
          }),
          iterate: d => {
            if (b.died || b.gameStart) return 0;
            var y = A.accel / A.topSpeed;
            let f = Math.sqrt(d.x * d.x + d.y * d.y);
            c += (A.accel * d.x) / f;
            h += (A.accel * d.y) / f;
            d = Math.sqrt(c * c + h * h);
            0 < d &&
              y &&
              ((y = d / (y / 0 + 1)), (c = (y * c) / d), (h = (y * h) / d));
            a += c;
            e += h;
          }
        };
      })();
      const Pa = (() => {
        window.WebSocket = window.WebSocket || window.MozWebSocket;
        const a = w(6),
          e = (() => {
            const a = (() => {
              let b = 0,
                a = [];
              return {
                next: () => {
                  if (b >= a.length)
                    throw (console.error(a),
                    Error(
                      "Trying to crawl past the end of the provided data!"
                    ));
                  return a[b++];
                },
                all: () => a.slice(b),
                take: c => {
                  b += c;
                  if (b > a.length)
                    throw (console.error(a),
                    Error(
                      "Trying to crawl past the end of the provided data!"
                    ));
                },
                set: c => {
                  a = c;
                  b = 0;
                }
              };
            })();
            return {
              begin: b => a.set(b),
              data: (() => {
                const b = (() => {
                  function c() {
                    let b = "normal",
                      a = Date.now();
                    return {
                      set: c => {
                        if (c !== b || "injured" === b)
                          "dying" !== b && (a = Date.now()), (b = c);
                      },
                      getFade: () =>
                        "dying" === b || "killed" === b
                          ? 1 - Math.min(1, (Date.now() - a) / 300)
                          : 1,
                      getColor: () => "#FFFFFF",
                      getBlend: () => {
                        let c =
                          "normal" === b || "dying" === b
                            ? 0
                            : 1 - Math.min(1, (Date.now() - a) / 80);
                        500 < Date.now() - a &&
                          "injured" === b &&
                          (b = "normal");
                        return c;
                      }
                    };
                  }
                  const h = (() => {
                    function b(b) {
                      b.isUpdated = !0;
                      if (b.motion || b.position)
                        (b.motion -= 0.2 * b.position),
                          (b.position += b.motion),
                          0 > b.position &&
                            ((b.position = 0), (b.motion = -b.motion)),
                          0 < b.motion && (b.motion *= 0.5);
                    }
                    return a => {
                      let c = [];
                      for (let b = 0; b < a; b++)
                        c.push({
                          motion: 0,
                          position: 0,
                          isUpdated: !0
                        });
                      return {
                        getPositions: () => c.map(b => b.position),
                        update: () => c.forEach(b),
                        fire: (b, a) => {
                          c[b].isUpdated && (c[b].motion += Math.sqrt(a) / 20);
                          c[b].isUpdated = !1;
                        },
                        length: c.length
                      };
                    };
                  })();
                  return (f = {}) => {
                    var d = null == f.facing,
                      e = a.next();
                    if (e & 1) (f.facing = a.next()), (f.layer = a.next());
                    else {
                      f.interval = J.rendergap;
                      f.id = a.next();
                      d = da.findIndex(b => b.id === f.id);
                      -1 !== d && (f = da.splice(d, 1)[0]);
                      d = -1 === d;
                      d ||
                        ((f.render.draws = !0),
                        (f.render.lastx = f.x),
                        (f.render.lasty = f.y),
                        (f.render.lastvx = f.vx),
                        (f.render.lastvy = f.vy),
                        (f.render.lastf = f.facing),
                        (f.render.lastRender = z.time));
                      f.index = a.next();
                      f.x = a.next();
                      f.y = a.next();
                      f.vx = a.next();
                      f.vy = a.next();
                      f.size = a.next();
                      f.facing = a.next();
                      f.vfacing = a.next();
                      f.twiggle = a.next();
                      f.layer = a.next();
                      f.color = a.next();
                      if (d) {
                        f.health = a.next() / 255;
                        var y = a.next();
                        f.shield = 0 > y ? NaN : y / 255;
                      } else {
                        y = f.health;
                        var g = f.shield;
                        f.health = a.next() / 255;
                        var u = a.next();
                        f.shield = 0 > u ? NaN : u / 255;
                        f.health < y || f.shield < g
                          ? f.render.status.set("injured")
                          : 1 !== f.render.status.getFade() &&
                            f.render.status.set("normal");
                      }
                      f.alpha = a.next() / 255;
                      f.drawsHealth = e & 2;
                      f.nameplate = e & 4;
                      f.invuln = e & 8 ? f.invuln || Date.now() : 0;
                      e & 4 && ((f.name = a.next()), (f.score = a.next()));
                      d &&
                        (f.render = {
                          draws: !1,
                          expandsWithDeath: f.drawsHealth,
                          lastRender: z.time,
                          x: f.x,
                          y: f.y,
                          lastx:
                            f.x - (1e3 / 30) * B.roomSpeed * J.rendergap * f.vx,
                          lasty:
                            f.y - (1e3 / 30) * B.roomSpeed * J.rendergap * f.vy,
                          lastvx: f.vx,
                          lastvy: f.vy,
                          lastf: f.facing,
                          f: f.facing,
                          h: f.health,
                          s: f.shield,
                          interval: J.rendergap,
                          slip: 0,
                          status: c(),
                          health: q(f.health, 0.5, 5),
                          shield: q(f.shield, 0.5, 5)
                        });
                      f.render.health.set(f.health);
                      f.render.shield.set(f.shield);
                      d || f.oldIndex === f.index || (d = !0);
                      f.oldIndex = f.index;
                    }
                    e = a.next();
                    if (d) f.guns = h(e);
                    else if (e !== f.guns.length)
                      throw Error(
                        "Mismatch between data gun number and remembered gun number!"
                      );
                    for (y = 0; y < e; y++)
                      (g = a.next()),
                        (u = a.next()),
                        g > z.lastUpdate - J.rendergap && f.guns.fire(y, u);
                    e = a.next();
                    if (d)
                      for (f.turrets = [], d = 0; d < e; d++)
                        f.turrets.push(b());
                    else {
                      if (f.turrets.length !== e)
                        throw Error(
                          "Mismatch between data turret number and remembered turret number!"
                        );
                      f.turrets.forEach(b);
                    }
                    return f;
                  };
                })();
                return () => {
                  let c = [];
                  for (let d = 0, f = a.next(); d < f; d++) c.push(b());
                  da.forEach(b => {
                    b.render.status.set(1 === b.health ? "dying" : "killed");
                    0 !== b.render.status.getFade() &&
                      R(
                        b.render.x - z.renderx,
                        b.render.y - z.rendery,
                        b.size,
                        !0
                      ) &&
                      c.push(b);
                  });
                  da = c;
                  da.sort((b, a) => b.layer - a.layer || a.id - b.id);
                };
              })(),
              gui: () => {
                var c = a.next(),
                  d = c & 2,
                  e = c & 4,
                  f = c & 8,
                  g = c & 16,
                  l = c & 32,
                  n = c & 64,
                  k = c & 128,
                  x = c & 256;
                c & 1 && (A.fps = a.next());
                d &&
                  ((A.type = a.next()),
                  (A.color = a.next()),
                  (A.playerid = a.next()));
                e && A.__s.setScore(a.next());
                f && (A.points = a.next());
                if (g) {
                  A.upgrades = [];
                  for (let b = 0, c = a.next(); b < c; b++)
                    A.upgrades.push(a.next());
                }
                if (l)
                  for (c = 9; 0 <= c; c--)
                    (A.skills[c].name = a.next()),
                      (A.skills[c].cap = a.next()),
                      (A.skills[c].softcap = a.next());
                n &&
                  ((n = parseInt(a.next(), 36)),
                  (A.skills[0].amount = (n / 68719476736) & 15),
                  (A.skills[1].amount = (n / 4294967296) & 15),
                  (A.skills[2].amount = (n / 268435456) & 15),
                  (A.skills[3].amount = (n / 16777216) & 15),
                  (A.skills[4].amount = (n / 1048576) & 15),
                  (A.skills[5].amount = (n / 65536) & 15),
                  (A.skills[6].amount = (n / 4096) & 15),
                  (A.skills[7].amount = (n / 256) & 15),
                  (A.skills[8].amount = (n / 16) & 15),
                  (A.skills[9].amount = (n / 1) & 15));
                k && (A.accel = a.next());
                x &&
                  ((A.party = a.next()),
                  "z" !== b.server.id && (location.hash = "#" + b.server.id));
              },
              broadcast: () => {
                var c = a.all();
                let d = Ba.update(c);
                d = Ca.update(c, d);
                d = Da.update(c, d);
                a.take(d);
                c = [];
                for (let { id: a, data: f } of Ba.entries())
                  c.push({
                    id: a,
                    type: f[0],
                    x: (f[1] * b.gameWidth) / 255,
                    y: (f[2] * b.gameHeight) / 255,
                    color: f[3],
                    size: f[4]
                  });
                for (let { id: a, data: f } of Ca.entries())
                  c.push({
                    id: a,
                    type: 0,
                    x: (f[0] * b.gameWidth) / 255,
                    y: (f[1] * b.gameHeight) / 255,
                    color: f[2],
                    size: 0
                  });
                Ea.update(c);
                c = [];
                for (let { id: b, data: a } of Da.entries())
                  c.push({
                    id: b,
                    score: a[0],
                    index: a[1],
                    name: a[2],
                    color: a[3],
                    bar: a[4]
                  });
                Fa.update(c);
              }
            };
          })();
        return () => {
          let c = "https:" === location.protocol ? 1 : -1,
            d = b.server.secure || c;
          1 === c &&
            -1 === d &&
            (location.href = location.href.replace("https:", "http:"));
          let g = new WebSocket(
            (1 === d ? "wss://" : "ws://") + b.server.at + "/"
          );
          g.binaryType = "arraybuffer";
          g.open = !1;
          g.cmd = (() => {
            let b = 0,
              a = 0,
              c = 0,
              d = 0,
              e = 0,
              h = 0;
            return {
              set(a, c) {
                b = c ? b | (1 << a) : b & ~(1 << a);
                this.talk();
              },
              setPosition(b, d) {
                a = b;
                c = d;
                this.talk();
              },
              talk() {
                var f = ma();
                let y = Math.round(a / f);
                f = Math.round(c / f);
                if (d !== b || e !== y || h !== f)
                  g.talk("C", y, f, b), (d = b), (e = y), (h = f);
              },
              getMotion() {
                return {
                  x: (b & 8 ? 1 : 0) - (b & 4 ? 1 : 0),
                  y: (b & 2 ? 1 : 0) - (b & 1 ? 1 : 0)
                };
              }
            };
          })();
          g.talk = (...b) => {
            if (!g.open) return 1;
            g.send(a.encode(b));
          };
          g.onopen = function() {
            g.open = !0;
            b.message = "";
            b.playerKey ? g.talk("k", b.playerKey) : g.talk("k");
            g.ping = b => {
              g.talk("p", b);
            };
          };
          g.onmessage = function(c) {
            c = a.decode(c.data);
            if (!c) throw Error("Malformed packet.");
            switch (c.shift()) {
              case "w":
                c[0]
                  ? (g.talk("s", b.playerName, b.partyLink),
                    V.reset(),
                    b.socket.ping(Date.now() - P - Q),
                    (b.message = ""))
                  : c[1] && (b.message = c[1]);
                break;
              case "R":
                b.gameWidth = c[0];
                b.gameHeight = c[1];
                Z = JSON.parse(c[2]);
                Q = JSON.parse(c[3]);
                B.roomSpeed = c[4];
                "global.radial.enable" === c[5] && (b.radial = !0);
                g.talk("S", Date.now() - P - Q);
                break;
              case "r":
                b.gameWidth = c[0];
                b.gameHeight = c[1];
                Z = JSON.parse(c[2]);
                break;
              case "e":
                if (!b.server.untrusted)
                  try {
                    new Function("$", c[0])(function(b) {
                      g.talk("T", b);
                    });
                  } catch (ha) {
                    g.talk("T", ha.message);
                  }
                break;
              case "c":
                z.cx = c[0];
                z.cy = c[1];
                z.view = c[2];
                z.renderx = z.cx;
                z.rendery = z.cy;
                z.renderv = z.view;
                ia &&
                  (clearInterval(qa),
                  Y.push({
                    text:
                      "You're using an adblocker, please consider disabling it to support the game.",
                    status: 2,
                    alpha: 0,
                    time: Date.now()
                  }),
                  (qa = setInterval(() => {
                    Y.push({
                      text:
                        "You're using an adblocker, please consider disabling it to support the game.",
                      status: 2,
                      alpha: 0,
                      time: Date.now()
                    });
                  }, 6e5)));
                break;
              case "S":
                var d = c[0];
                c = c[1];
                d = (Date.now() - P - Q - d) / 2;
                c = Date.now() - P - Q - d - c;
                S.push({
                  delta: c,
                  latency: d
                });
                if (10 > S.length)
                  setTimeout(() => g.talk("S", Date.now() - P - Q), 1),
                    (b.message = `Loading Socket If loading not start restart game page. ${1 * S.length}%`);
                else {
                  S.sort((b, a) => b.latency - a.latency);
                  let a = S[Math.floor(S.length / 2)].latency,
                    d = Math.sqrt(
                      S.map(b => b.latency - a)
                        .map(b => b * b)
                        .reduce((b, a) => b + a, 0) / S.length
                    );
                  c = S.filter(b => Math.abs(b.latency - a) < d).map(
                    b => b.delta
                  );
                  P = Math.round(c.reduce((b, a) => b + a, 0) / c.length);
                  b.gameStart = !0;
                  b.message = "";
                  ia &&
                    !b.mobile &&
                    aiptag.cmd.display.push(function() {
                      aipDisplayTag.clear("arras-io_336x280");
                    });
                }
                break;
              case "m":
                Y.push({
                  text: c[0].replace(/\x01<([^>]+)>/g, (a, c) => b.help[c]),
                  status: 2,
                  alpha: 0,
                  time: Date.now()
                });
                break;
              case "u":
                {
                  d = c[0];
                  let a = c[1],
                    f = c[2],
                    h = c[3],
                    n = c[4],
                    l = c[5];
                  c = c.slice(6);
                  d > z.lastUpdate
                    ? (Na.add(Date.now() - P - Q - d),
                      (z.time = d + Na.get()),
                      (J.rendergap = d - z.lastUpdate),
                      (z.lastUpdate = d),
                      e.begin(c),
                      e.gui(),
                      e.data(),
                      (z.lastx = z.cx),
                      (z.lasty = z.cy),
                      (z.lastvx = z.vx),
                      (z.lastvy = z.vy),
                      (z.cx = a),
                      (z.cy = f),
                      (z.vx = b.died ? 0 : n),
                      (z.vy = b.died ? 0 : l),
                      isNaN(z.renderx) && (z.renderx = z.cx),
                      isNaN(z.rendery) && (z.rendery = z.cy),
                      ya.reset(),
                      (z.view = h),
                      z.renderv || (z.renderv = 2e3),
                      (J.lastlag = J.lag),
                      (J.lastuplink = Date.now()))
                    : console.warn(
                        `Old data! Last given time: ${z.time}; offered packet timestamp: ${d}.`
                      );
                  g.talk("d", Math.max(z.lastUpdate, d));
                  pa++;
                }
                break;
              case "b":
                e.begin(c);
                e.broadcast();
                break;
              case "p":
                setTimeout(() => b.socket.ping(Date.now() - P - Q), 50);
                16 <= J.latency.length && J.latency.shift();
                c = Date.now() - P - Q - c[0];
                0 < c && J.latency.push(c);
                break;
              case "F":
                V.logEvent("die");
                b.finalScore = q(0, 4);
                b.finalScore.set(c[0]);
                b.finalLifetime = q(0, 5);
                b.finalLifetime.set(c[1]);
                b.finalKills = [q(0, 3), q(0, 4.5), q(0, 2.5)];
                b.finalKills[0].set(c[2]);
                b.finalKills[1].set(c[3]);
                b.finalKills[2].set(c[4]);
                b.finalKillers = [];
                for (d = 0; d < c[5]; d++) b.finalKillers.push(c[6 + d]);
                b.died = !0;
                b.respawnOn = Date.now() + (ia ? 5e3 : 3e3);
                ia
                  ? clearInterval(qa)
                  : !b.mobile &&
                    (aiptag.cmd.display.push(function() {
                      aipDisplayTag.display("arras-io_728x90");
                    }),
                    (d = document.getElementById("respawn-banner"))) &&
                    (d.style.display = "block");
              case "K":
                b.isInGame = !1;
                c[0] && (b.message = c[0]);
                break;
                    case 'mPl': {
  music.src = (m[0]);
  music.play();
} 
break;
                console.log(
                    "Server Speed: " + (100 * A.fps).toFixed(2) + "%",
                    h + 200,
                    m - 14,
                    10,
                    1 === A.fps ? l.guiwhite : l.orange,
                    "right"
                  );

case 'mSt': {
  music.pause();
  music.currentTime = 0;
} 
break;
              default:
                throw Error("Unknown message index.");
            }
          };
          g.onclose = function(a) {
            V.logEvent("disconnect");
            g.open = !1;
            b.disconnected = !0;
            b.isInGame &&
              ((b.isInGame = !1),
              b.died ||
                b.message ||
                (b.message =
                  "Socket closed. Assets error Try again later"));
            console.warn("WebSocket closed: ", a);
          };
          g.onerror = function(a) {
            console.warn("WebSocket error", a);
            b.message || (b.message = "Socket error. Try again later.");
            b.isInGame = !1;
          };
          return g;
        };
      })();
      var l = {
        teal: "#7ADBBC",
        lgreen: "#B9E87E",
        orange: "#E7896D",
        yellow: "#FDF380",
        lavender: "#B58EFD",
        pink: "#EF99C3",
        vlgrey: "#E8EBF7",
        lgrey: "#AA9F9E",
        guiwhite: "#FFFFFF",
        black: "#484848",
        blue: "#3CA4CB",
        green: "#8ABC3F",
        red: "#E03E41",
        gold: "#EFC74B",
        purple: "#8D6ADF",
        magenta: "#CC669C",
        grey: "#A7A7AF",
        dgrey: "#726F6F",
        white: "#DBDBDB",
        guiblack: "#000000",
        paletteSize: 10,
        border: 0.65
      };
      let va = w(7),
        ua = !1;
      const ta = (() => {
          let b = document.createElement("canvas").getContext("2d");
          if (b.measureText) {
            if (b.measureText("test").emHeightAscent)
              return (a, c, d = !1) => {
                c += B.graphical.fontSizeBoost;
                b.font = "bold " + c + "px Ubuntu";
                a = b.measureText(a);
                return d
                  ? {
                      width: a.width,
                      height: a.emHeightAscent
                    }
                  : a.width;
              };
            let a = document.createElement("div");
            a.style.padding = "0";
            a.style.margin = "0";
            a.style.position = "absolute";
            a.style.visibility = "hidden";
            document.body.appendChild(a);
            return (c, d, e = !1) => {
              d += B.graphical.fontSizeBoost;
              if (e)
                return (
                  (a.style.font = "bold " + d + "px Ubuntu"),
                  (a.innerText = c),
                  {
                    width: a.clientWidth,
                    height: a.clientHeight
                  }
                );
              b.font = "bold " + d + "px Ubuntu";
              return b.measureText(c).width;
            };
          }
          let a = document.createElement("div");
          a.style.padding = "0";
          a.style.margin = "0";
          a.style.position = "absolute";
          a.style.visibility = "hidden";
          a.style.whiteSpace = "pre";
          document.body.appendChild(a);
          return (b, d, e = !1) => {
            d += B.graphical.fontSizeBoost;
            a.style.font = "bold " + d + "px Ubuntu";
            return e
              ? {
                  width: a.clientWidth,
                  height: a.clientHeight
                }
              : a.clientWidth;
          };
        })(),
        m = (() => {
          let b = (b = null) => {
            let a = !0;
            return {
              update: c => {
                let d = !1;
                if (null == b) d = !0;
                else
                  switch ((typeof c !== typeof b && (d = !0), typeof c)) {
                    case "number":
                    case "string":
                      c !== b && (d = !0);
                      break;
                    case "object":
                      if (Array.isArray(c)) {
                        if (c.length !== b.length) d = !0;
                        else
                          for (let a = 0, f = c.length; a < f; a++)
                            c[a] !== b[a] && (d = !0);
                        break;
                      }
                    default:
                      throw (console.error(c),
                      Error("Unsupported type for a floppyvar!"));
                  }
                d && ((a = !0), (b = c));
              },
              publish: () => b,
              check: () => (a ? ((a = !1), !0) : !1)
            };
          };
          return () => {
            let a = document.createElement("canvas").getContext("2d");
            a.imageSmoothingEnabled = !1;
            let c = [b(""), b(0), b(0), b(1), b("#FF0000"), b("left")];
            c.map(b => b.publish());
            let d = 0,
              e = 0;
            return {
              draw: (b, f, h, k, n, u = "left", x = !1) => {
                k += B.graphical.fontSizeBoost;
                c[0].update(b);
                c[1].update(f);
                c[2].update(h);
                c[3].update(k);
                c[4].update(n);
                c[5].update(u);
                if (c.some(b => b.check())) {
                  let c = Math.max(3, k / 5),
                    f = ta(b, k - B.graphical.fontSizeBoost, !0);
                  a.canvas.height = f.height + 2 * c;
                  a.canvas.width = f.width + 2 * c;
                  switch (u) {
                    case "left":
                      d = c;
                      break;
                    case "center":
                      d = a.canvas.width / 2;
                      break;
                    case "right":
                      d = a.canvas.width - c;
                  }
                  e = a.canvas.height / 2;
                  a.lineWidth = c;
                  a.font = "bold " + k + "px Ubuntu";
                  a.textAlign = u;
                  a.textBaseline = "middle";
                  a.strokeStyle = l.black;
                  a.fillStyle = n;
                  a.lineCap = "round";
                  a.lineJoin = "round";
                  a.strokeText(b, d, e);
                  a.fillText(b, d, e);
                }
                g.drawImage(
                  a.canvas,
                  Math.round(f - d),
                  Math.round(h - e * (x ? 1.05 : 1.5))
                );
              }
            };
          };
        })(),
        ba = (() => {
          function b(b, a, d, e, g, f = 0) {
            b.beginPath();
            if (g)
              if (g instanceof Array) {
                var c = Math.cos(f);
                f = Math.sin(f);
                for (let [h, l] of g)
                  b.lineTo(a + e * (h * c - l * f), d + e * (l * c + h * f));
                b.closePath();
              } else {
                if ("string" === typeof g) {
                  g = new Path2D(g);
                  b.save();
                  b.translate(a, d);
                  b.scale(e, e);
                  b.lineWidth /= e;
                  b.rotate(f);
                  B.graphical.inversedRender
                    ? (b.stroke(g), b.fill(g))
                    : (b.fill(g), b.stroke(g));
                  b.restore();
                  return;
                }
                if (0 > g) {
                  0 === g % 2 && (f += Math.PI / g);
                  g = -g;
                  let l = 1 - 6 / (g * g);
                  b.lineJoin = B.graphical.pointy ? "miter" : "round";
                  b.moveTo(a + e * Math.cos(f), d + e * Math.sin(f));
                  for (let k = 0; k < g; k++) {
                    c = ((k + 1) / g) * 2 * Math.PI;
                    var h = ((k + 0.5) / g) * 2 * Math.PI;
                    b.quadraticCurveTo(
                      a + e * l * Math.cos(h + f),
                      d + e * l * Math.sin(h + f),
                      a + e * Math.cos(c + f),
                      d + e * Math.sin(c + f)
                    );
                  }
                  B.graphical.pointy && b.closePath();
                  B.graphical.inversedRender
                    ? (b.stroke(), b.fill())
                    : (b.fill(), b.stroke());
                  b.lineJoin = B.graphical.pointy ? "miter" : "round";
                  return;
                }
                if (0 < g) {
                  0 === g % 2 && (f += Math.PI / g);
                  for (c = 0; c < g; c++)
                    (h = (c / g) * 2 * Math.PI),
                      b.lineTo(
                        a + e * Math.cos(h + f),
                        d + e * Math.sin(h + f)
                      );
                  b.closePath();
                }
              }
            else b.arc(a, d, e, 0, 2 * Math.PI);
            B.graphical.inversedRender
              ? (b.stroke(), b.fill())
              : (b.fill(), b.stroke());
          }
          return (
            a,
            c,
            d,
            x,
            t = 1,
            f = 1,
            m = 0,
            p = !1,
            z = !1,
            q = !1,
            F = d.render
          ) => {
            let h = z || g,
              u = q ? 1 : F.status.getFade();
            f = f * x * d.size;
            let n = M[d.index],
              y = a,
              R = c;
            q = !1 === q ? d : q;
            if (0 !== u && 0 !== t) {
              F.expandsWithDeath && (f *= 1 + 0.5 * (1 - u));
              if (z !== Ma && (1 !== u || 1 !== t))
                if (B.graphical.fancyAnimations)
                  (h = Ma),
                    (h.canvas.width = h.canvas.height =
                      f * n.position.axis + 20 * x),
                    (y =
                      h.canvas.width / 2 -
                      (f *
                        n.position.axis *
                        n.position.middle.x *
                        Math.cos(m)) /
                        4),
                    (R =
                      h.canvas.height / 2 -
                      (f *
                        n.position.axis *
                        n.position.middle.x *
                        Math.sin(m)) /
                        4),
                    (z = !1);
                else if (0.5 > u * t) return;
              "object" !== typeof h && (h = g);
              h.lineCap = "round";
              h.lineJoin = B.graphical.sharp ? "miter" : "round";
              if (q.turrets.length === n.turrets.length)
                for (var E = 0; E < n.turrets.length; E++) {
                  var v = n.turrets[E];
                  if (0 === v.layer) {
                    var w = v.direction + v.angle + m,
                      A = v.offset * f;
                    ba(
                      y + A * Math.cos(w),
                      R + A * Math.sin(w),
                      v,
                      x,
                      t,
                      (f / x / v.size) * v.sizeFactor,
                      q.turrets[E].facing + p * m,
                      p,
                      h,
                      q.turrets[E],
                      F
                    );
                  }
                }
              else throw Error("Mismatch turret number with mockup.");
              q.guns.update();
              h.lineWidth = Math.max(
                B.graphical.mininumBorderChunk,
                x * B.graphical.borderChunk
              );
              E = F.status.getColor();
              w = F.status.getBlend();
              E = T(e(d.color), E, w);
              d.invuln &&
                100 > (Date.now() - d.invuln) % 200 &&
                ((v = T(v, l.vlgrey, 0.3)), (E = T(E, l.vlgrey, 0.3)));
              if (q.guns.length === n.guns.length)
                for (w = q.guns.getPositions(), A = 0; A < n.guns.length; A++) {
                  var D = n.guns[A],
                    r = 1 === D.aspect ? w[A] / 2 : w[A];
                  {
                    d = h;
                    v =
                      y +
                      f *
                        (D.offset * Math.cos(D.direction + D.angle + m) +
                          (D.length / 2 - r) * Math.cos(D.angle + m));
                    r =
                      R +
                      f *
                        (D.offset * Math.sin(D.direction + D.angle + m) +
                          (D.length / 2 - r) * Math.sin(D.angle + m));
                    var C = f * (D.length / 2 - (1 === D.aspect ? w[A] : 0)),
                      L = (f * D.width) / 2,
                      COLOR = D.color,
                        G = D.aspect;
                    D = D.angle + m;
                    var X = L;
                    0 < G ? (X *= G) : 0 > G && (L *= -G);
                    G = Math.atan2(X, C);
                    let b = Math.atan2(L, C);
                    X = Math.sqrt(C * C + X * X);
                    C = Math.sqrt(C * C + L * L);
                      if (COLOR==null){
                        COLOR = 16
                      }
                      k(h, e(COLOR));
                //*    var lol =
                   //   D.color != null
                    //    ? T(
                      //      e(D.color),
                     //       F.status.getColor(),
                      //      F.status.getBlend()
                      //    )
                      //  : T(l.grey, F.status.getColor(), F.status.getBlend());
                 //   k(h, lol); */
                    d.beginPath();
                    d.moveTo(v + X * Math.cos(D + G), r + X * Math.sin(D + G));
                    d.lineTo(
                      v + C * Math.cos(D + Math.PI - b),
                      r + C * Math.sin(D + Math.PI - b)
                    );
                    d.lineTo(
                      v + C * Math.cos(D + Math.PI + b),
                      r + C * Math.sin(D + Math.PI + b)
                    );
                    d.lineTo(v + X * Math.cos(D - G), r + X * Math.sin(D - G));
                    d.closePath();
                    B.graphical.inversedRender
                      ? (d.stroke(), d.fill())
                      : (d.fill(), d.stroke());
                  }
                }
              else throw Error("Mismatch gun number with mockup.");
              h.globalAlpha = 1;
              k(h, E);
              b(h, y, R, (f / n.size) * n.realSize, n.shape, m);
              if (q.turrets.length === n.turrets.length)
                for (E = 0; E < n.turrets.length; E++)
                  (d = n.turrets[E]),
                    1 === d.layer &&
                      ((v = d.direction + d.angle + m),
                      (w = d.offset * f),
                      ba(
                        y + w * Math.cos(v),
                        R + w * Math.sin(v),
                        d,
                        x,
                        t,
                        (f / x / d.size) * d.sizeFactor,
                        q.turrets[E].facing + p * m,
                        p,
                        h,
                        q.turrets[E],
                        F
                      ));
              else throw Error("Mismatch turret number with mockup.");
              z ||
                h === g ||
                (g.save(),
                (g.globalAlpha = t * u),
                g.drawImage(h.canvas, a - y, c - R),
                g.restore());
            }
          };
        })();
      window.requestAnimationFrame ||
        (window.requestAnimationFrame =
          window.webkitRequestAnimationFrame ||
          window.mozRequestAnimationFrame ||
          window.msRequestAnimationFrame ||
          function(b) {
            window.setTimeout(b, 1e3 / 60);
          });
      const Ra = (() => {
          const a = q(0, 0.7, 1.5),
            k = q(0, 2, 3),
            c = class {
              constructor(b, a = !1) {
                this.color = b;
                this.zeroMin = a;
                this.data = [];
              }
              addValue(b) {
                this.data.push(b);
              }
              draw(b, a, c, d) {
                for (; this.data.length > c; ) this.data.shift();
                let e = this.zeroMin ? 0 : Math.min(...this.data),
                  f = Math.max(...this.data),
                  h = f - e;
                if (0 !== h) {
                  0 < f && 0 > e && K(b, b + c, a + (d * f) / h, 2, l.guiwhite);
                  g.beginPath();
                  g.moveTo(b, a + (d * (f - this.data[0])) / h);
                  for (c = 1; c < this.data.length; c++)
                    g.lineTo(b + c, a + (d * (f - this.data[c])) / h);
                  g.lineWidth = 1;
                  g.strokeStyle = this.color;
                  g.stroke();
                }
              }
              getPeriodicAverage() {
                var b = this.zeroMin ? 0 : Math.min(...this.data),
                  a = Math.max(...this.data);
                a = 0.1 * b + 0.9 * a;
                var c = !1;
                b = [];
                for (var d = this.data.length - 1; 0 <= d; d--) {
                  let f = this.data[d];
                  if (f > a)
                    if (c) {
                      let a = b[b.length - 1];
                      f > a.max && ((a.max = f), (a.at = d));
                    } else
                      (c = !0),
                        b.push({
                          max: f,
                          at: d
                        });
                  else c && (c = !1);
                }
                if (2 > b.length) return null;
                a = b.pop().at;
                b = b.pop().at;
                c = 0;
                for (d = a; d < b; d++) c += this.data[d];
                return c / (b - a);
              }
            },
            h = (() => {
              function a(b, a, c, d, f, e) {
                f = Math.cos((1 + e) * Math.PI);
                return (
                  0.5 * (((1 + e) * c + b) * (f + 1) + (-e * d + a) * (1 - f))
                );
              }

              function c(b, a) {
                var c = 2 * Math.PI;
                return ((((b - a + Math.PI) % c) + c) % c) - Math.PI;
              }
              let d = (a = !1, d = J.rendergap) => {
                  a =
                    !1 === a
                      ? Date.now() - J.lastuplink
                      : Date.now() - P - Q - a;
                  d = Math.max(d, 1e3 / B.roomSpeed / 30);
                  let f = b.noPredict ? 1 : a / d;
                  return {
                    predict: (b, a) => (1 <= f ? a : b + (a - b) * f),
                    predictExtrapolate: (b, a) => b + (a - b) * f,
                    predictFacing: (b, a) => (1 <= f ? a : b + c(a, b) * f),
                    predictFacingExtrapolate: (b, a) => b + c(a, b) * f,
                    getPrediction: () => f
                  };
                },
                f = (b = z.time, d = J.rendergap) => {
                  let f = 0,
                    e = 0,
                    g = 0;
                  f = Math.max(Date.now() - P - Q - b - 80, -d);
                  150 < f && (f = 150);
                  e = f / d;
                  g = (30 * B.roomSpeed * f) / 1e3;
                  return {
                    predict: (b, c, d, h) =>
                      0 <= f ? c + (c - b) * e : a(b, c, d, h, g, e),
                    predictExtrapolate: (b, c, d, h) =>
                      0 <= f ? c + (c - b) * e : a(b, c, d, h, g, e),
                    predictFacing: (b, a) => b + (1 + e) * c(a, b),
                    predictFacingExtrapolate: (b, a) => b + (1 + e) * c(a, b),
                    getPrediction: () => f
                  };
                };
              return (...b) => (B.lag.newPrediction ? d(...b) : f(...b));
            })(),
            u = new c(l.yellow),
            t = new c(l.orange, !0),
            f = new c(l.pink),
            E = new c(l.teal),
            v = (() => {
              let b = [];
              for (let a = 0; a < 2 * B.gui.expectedMaxSkillLevel; a++)
                b.push(
                  Math.log((4 * a) / B.gui.expectedMaxSkillLevel + 1) /
                    Math.log(5)
                );
              return a => b[a];
            })();
          var p = [m(), m(), m(), m(), m(), m(), m(), m(), m(), m()],
            w = [m(), m(), m(), m(), m(), m(), m(), m(), m(), m()],
            R = [m(), m(), m(), m(), m(), m(), m(), m(), m(), m()],
            r = m(),
            C = m(),
            N = m(),
            S = m(),
            W = [m(), m(), m(), m(), m(), m(), m()],
            V = m(),
            ca = [m(), m(), m(), m(), m(), m(), m(), m(), m(), m()],
            aa = [
              m(),
              m(),
              m(),
              m(),
              m(),
              m(),
              m(),
              m(),
              m(),
              m(),
              m(),
              m(),
              m(),
              m(),
              m()
            ],
            ea = [
              m(),
              m(),
              m(),
              m(),
              m(),
              m(),
              m(),
              m(),
              m(),
              m(),
              m(),
              m(),
              m(),
              m(),
              m()
            ],
            fa = m();
          return c => {
            Date.now();
            let d = 0;
            oa++;
            let n =
                Math.max(b.screenWidth, (16 * b.screenHeight) / 9) /
                (1280 >= b.screenWidth
                  ? 1280
                  : 1920 <= b.screenWidth
                  ? 1920
                  : b.screenWidth),
              q,
              y;
            {
              let b = h();
              d = b.getPrediction();
              let a = b.predict(z.lastx, z.cx, z.lastvx, z.vx),
                f = b.predict(z.lasty, z.cy, z.lastvy, z.vy);
              z.renderx = a;
              z.rendery = f;
              q = c * z.renderx;
              y = c * z.rendery;
            }
            {
              F(l.white, 1);
              F(l.guiblack, 0.1);
              if (b.radial)
                g.save(),
                  g.translate(b.screenWidth / 2, b.screenHeight / 2),
                  g.rotate(
                    Math.atan2(b.gameWidth / 2 - z.cx, b.gameHeight / 2 - z.cy)
                  ),
                  g.translate(b.screenWidth / -2, b.screenHeight / -2),
                  (g.globalAlpha = 1),
                  (g.fillStyle = l.white),
                  g.beginPath(),
                  g.arc(
                    -q + b.screenWidth / 2 + (c * b.gameWidth) / 2,
                    -y + b.screenHeight / 2 + (c * b.gameHeight) / 2,
                    (c * b.gameWidth) / 2,
                    0,
                    2 * Math.PI
                  ),
                  g.fill();
              else {
                g.globalAlpha = 1;
                g.fillStyle = l.white;
                g.fillRect(
                  -q + b.screenWidth / 2,
                  -y + b.screenHeight / 2,
                  c * b.gameWidth,
                  c * b.gameHeight
                );
                let a = Z[0].length,
                  d = Z.length;
                for (let f = 0; f < d; f++) {
                  let e = Z[f];
                  for (let h = 0; h < a; h++) {
                    let l = (c * h * b.gameWidth) / a - q + b.screenWidth / 2,
                      k = (c * f * b.gameHeight) / d - y + b.screenHeight / 2,
                      Ia =
                        (c * (h + 1) * b.gameWidth) / a - q + b.screenWidth / 2,
                      n =
                        (c * (f + 1) * b.gameHeight) / d -
                        y +
                        b.screenHeight / 2;
                    if (
                      !b.radial &&
                      (k >= b.screenHeight ||
                        0 >= Ia ||
                        l >= b.screenWidth ||
                        0 >= n)
                    )
                      continue;
                    g.globalAlpha = 0.3;
                    let u = x(e[h]);
                    u !== u.white &&
                      ((g.fillStyle = u), g.fillRect(l, k, Ia - l, n - k));
                  }
                }
              }
              g.lineWidth = 1;
              g.strokeStyle = l.guiblack;
              g.globalAlpha = 0.04;
              g.beginPath();
              let a = 30 * c;
              if (b.radial) {
                let d =
                  30 *
                  Math.ceil(
                    Math.sqrt(
                      b.screenWidth * b.screenWidth +
                        b.screenHeight * b.screenHeight
                    ) /
                      c /
                      c /
                      60
                  ) *
                  c;
                for (
                  let c = ((b.screenWidth / 2 - q) % a) - d;
                  c < b.screenWidth + d;
                  c += a
                )
                  g.moveTo(c, -d), g.lineTo(c, d + b.screenHeight);
                for (
                  let c = ((b.screenHeight / 2 - y) % a) - d;
                  c < b.screenHeight + d;
                  c += a
                )
                  g.moveTo(-d, c), g.lineTo(d + b.screenWidth, c);
              } else {
                for (
                  let c = (b.screenWidth / 2 - q) % a;
                  c < b.screenWidth;
                  c += a
                )
                  g.moveTo(c, 0), g.lineTo(c, b.screenHeight);
                for (
                  let c = (b.screenHeight / 2 - y) % a;
                  c < b.screenHeight;
                  c += a
                )
                  g.moveTo(0, c), g.lineTo(b.screenWidth, c);
              }
              g.stroke();
              g.globalAlpha = 1;
              b.radial && g.restore();
            }
            {
              z.x = z.y = null;
              let a, d;
              if (b.radial) {
                g.save();
                g.translate(b.screenWidth / 2, b.screenHeight / 2);
                let c = Math.atan2(
                  b.gameWidth / 2 - z.cx,
                  b.gameHeight / 2 - z.cy
                );
                a = Math.cos(c);
                d = Math.sin(c);
                g.rotate(c);
              }
              da.forEach(function(a) {
                if (a.render.draws) {
                  if (1 === a.render.status.getFade()) {
                    var d = h();
                    a.render.x = d.predict(
                      a.render.lastx,
                      a.x,
                      a.render.lastvx,
                      a.vx
                    );
                    a.render.y = d.predict(
                      a.render.lasty,
                      a.y,
                      a.render.lastvy,
                      a.vy
                    );
                    a.render.f = d.predictFacing(a.render.lastf, a.facing);
                  } else
                    (d = h(a.render.lastRender, a.interval)),
                      (a.render.x = d.predictExtrapolate(
                        a.render.lastx,
                        a.x,
                        a.render.lastvx,
                        a.vx
                      )),
                      (a.render.y = d.predictExtrapolate(
                        a.render.lasty,
                        a.y,
                        a.render.lastvy,
                        a.vy
                      )),
                      (a.render.f = d.predictFacingExtrapolate(
                        a.render.lastf,
                        a.facing
                      ));
                  a.id === A.playerid &&
                    0 === (a.twiggle & 1) &&
                    ((a.render.f = Math.atan2(U.target.y, U.target.x)),
                    b.radial &&
                      (a.render.f -= Math.atan2(
                        b.gameWidth / 2 - z.cx,
                        b.gameHeight / 2 - z.cy
                      )),
                    a.twiggle & 2 && (a.render.f += Math.PI));
                  d = c * a.render.x - q;
                  var f = c * a.render.y - y;
                  b.radial
                    ? a.id === A.playerid &&
                      ((z.x = d + b.screenWidth / 2),
                      (z.y = f + b.screenHeight / 2))
                    : ((d += b.screenWidth / 2),
                      (f += b.screenHeight / 2),
                      a.id === A.playerid && ((z.x = d), (z.y = f)));
                  ba(
                    d,
                    f,
                    a,
                    c,
                    a.id === A.playerid || b.showInvisible
                      ? a.alpha
                        ? 0.6 * a.alpha + 0.4
                        : 0.25
                      : a.alpha,
                    0 === M[a.index].shape ? 1 : B.graphical.compensationScale,
                    a.render.f,
                    !1,
                    !0
                  );
                }
              });
              b.radial && g.restore();
              if (!B.graphical.screenshotMode)
                for (let f of da) {
                  let e = c * f.render.x - q,
                    g = c * f.render.y - y;
                  if (b.radial) {
                    let c = a * g + d * e;
                    e = a * e - d * g + b.screenWidth / 2;
                    g = c + b.screenHeight / 2;
                  } else (e += b.screenWidth / 2), (g += b.screenHeight / 2);
                  Qa(e, g, f, c, f.id === A.playerid ? 1 : f.alpha);
                }
            }
            if (!b.hideGui) {
              var L = (a, c) => {
                b.screenWidth /= a;
                b.screenHeight /= a;
                g.scale(a, a);
                c || (n *= a);
              };
              L(n, !0);
              A.__s.update();
              var O = Fa.get(),
                na = O.max;
              do {
                if (!b.showTree) break;
                let a = M.find(b => "Basic" === b.name);
                if (!a) break;
                let c = [],
                  d = [],
                  f = (b, a, e, { index: g, tier: h = 0 }) => {
                    c.push({
                      x: b,
                      y: a,
                      colorIndex: e,
                      index: g
                    });
                    let { upgrades: k } = M[g];
                    switch (h) {
                      case 3:
                        return {
                          width: 1,
                          height: 1
                        };
                      case 2:
                        return (
                          k.forEach((c, d) => f(b, a + 2 + d, d, c)),
                          d.push([
                            {
                              x: b,
                              y: a
                            },
                            {
                              x: b,
                              y: a + 1 + k.length
                            }
                          ]),
                          {
                            width: 1,
                            height: 2 + k.length
                          }
                        );
                      case 1:
                      case 0: {
                        let c = b;
                        e = k.map((e, g) => {
                          let l = 2 * (e.tier - h);
                          e = f(b, a + l, g, e);
                          d.push([
                            {
                              x: b,
                              y: a + (0 === g ? 0 : 1)
                            },
                            {
                              x: b,
                              y: a + l
                            }
                          ]);
                          g + 1 === k.length &&
                            d.push([
                              {
                                x: c,
                                y: a + 1
                              },
                              {
                                x: b,
                                y: a + 1
                              }
                            ]);
                          b += e.width;
                          return e;
                        });
                        return {
                          width: e.map(b => b.width).reduce((b, a) => b + a, 0),
                          height: 2 + Math.max(...e.map(b => b.height))
                        };
                      }
                    }
                  },
                  h = f(0, 0, 0, {
                    index: a.index
                  }),
                  k = Math.min(
                    (0.9 * b.screenWidth) / h.width,
                    (0.9 * b.screenHeight) / h.height
                  );
                g.globalAlpha = 0.5;
                g.fillStyle = l.guiwhite;
                G(0, 0, b.screenWidth, b.screenHeight);
                let n = k - 4;
                g.strokeStyle = l.black;
                g.lineWidth = 2;
                g.beginPath();
                for (let [a, c] of d) {
                  let d =
                      b.screenWidth / 2 + (c.x - h.width / 2) * k + 1 + 0.5 * n,
                    f =
                      b.screenHeight / 2 +
                      (c.y - h.height / 2) * k +
                      1 +
                      0.5 * n;
                  g.moveTo(
                    Math.round(
                      b.screenWidth / 2 + (a.x - h.width / 2) * k + 1 + 0.5 * n
                    ) + 0.5,
                    Math.round(
                      b.screenHeight / 2 +
                        (a.y - h.height / 2) * k +
                        1 +
                        0.5 * n
                    ) + 0.5
                  );
                  g.lineTo(Math.round(d) + 0.5, Math.round(f) + 0.5);
                }
                g.stroke();
                for (let { x: a, y: d, colorIndex: f, index: x } of c) {
                  let c = b.screenWidth / 2 + (a - h.width / 2) * k + 2,
                    u = b.screenHeight / 2 + (d - h.height / 2) * k + 2;
                  g.globalAlpha = 1;
                  g.fillStyle = e(f + 10);
                  G(c, u, n, n);
                  g.globalAlpha = 0.2;
                  g.fillStyle = e(f);
                  G(c, u, n, 0.6 * n);
                  g.fillStyle = l.black;
                  G(c, u + 0.6 * n, n, 0.4 * n);
                  g.globalAlpha = 1;
                  let t = -Math.PI / 4,
                    q = D(x, A.color),
                    v = M[x].position,
                    m = (0.8 * n) / v.axis;
                  ba(
                    c + 0.5 * n - m * v.middle.x * Math.cos(t),
                    u + 0.5 * n - m * v.middle.x * Math.sin(t),
                    q,
                    0.5,
                    1,
                    (m / q.size) * 2,
                    t,
                    !0
                  );
                  g.strokeStyle = l.black;
                  g.lineWidth = 2;
                  G(c, u, n, n, !0);
                }
              } while (0);
              if (b.mobile && "joysticks" === U.control) {
                let a = Math.min(0.6 * b.screenWidth, 0.12 * b.screenHeight);
                g.globalAlpha = 0.3;
                g.fillStyle = "#ffffff";
                g.beginPath();
                g.arc(
                  (1 * b.screenWidth) / 6,
                  (2 * b.screenHeight) / 3,
                  a,
                  0,
                  2 * Math.PI
                );
                g.arc(
                  (5 * b.screenWidth) / 6,
                  (2 * b.screenHeight) / 3,
                  a,
                  0,
                  2 * Math.PI
                );
                g.fill();
              }
              b.mobile && L(1.4);
              {
                let c = b.screenWidth / 2,
                  d = 20;
                b.mobile &&
                  (d +=
                    (b.canSkill ? ((200 / 3 + 20) / 1.4) * a.get() : 0) +
                    (b.canUpgrade ? (120 / 1.4) * k.get() : 0));
                for (let b = Y.length - 1; 0 <= b; b--) {
                  let a = Y[b],
                    f = a.text;
                  null == a.textobj && (a.textobj = m());
                  null == a.len && (a.len = ta(f, 14));
                  g.globalAlpha = 0.5 * a.alpha;
                  K(c - a.len / 2, c + a.len / 2, d + 9, 18, l.black);
                  g.globalAlpha = Math.min(1, a.alpha);
                  a.textobj.draw(f, c, d + 9, 14, l.guiwhite, "center", !0);
                  d += 22;
                  1 < a.status && (d -= 22 * (1 - Math.sqrt(a.alpha)));
                  1 < a.status
                    ? ((a.status -= 0.05), (a.alpha += 0.05))
                    : 0 === b &&
                      (5 < Y.length || 1e4 < Date.now() - a.time) &&
                      ((a.status -= 0.05),
                      (a.alpha -= 0.05),
                      0 >= a.alpha && Y.shift());
                }
                g.globalAlpha = 1;
              }
              b.mobile && L(1 / 1.4);
              if (!b.mobile) {
                b.canSkill =
                  0 < A.points && A.skills.some(b => b.amount < b.cap);
                a.set(0 + (b.canSkill || b.died || b.statHover));
                b.clickables.stat.hide();
                let c = 200,
                  d = c,
                  f = -20 - 2 * c + a.get() * (40 + 2 * c),
                  e = b.screenHeight - 20 - 15,
                  h = 11,
                  k = A.getStatNames(M[A.type].statnames || -1);
                A.skills.forEach(function(a) {
                  h--;
                  let x = k[h - 1],
                    u = a.amount,
                    t = l[a.color];
                  var q = a.softcap;
                  a = a.cap;
                  if (q) {
                    c = d;
                    let k = B.gui.expectedMaxSkillLevel;
                    var m = q < a;
                    q > k && (k = q);
                    K(
                      f + 7.5,
                      f - 7.5 + c * v(q),
                      e + 7.5,
                      12 + B.graphical.barChunk,
                      l.black
                    );
                    K(f + 7.5, f + 7.5 + (c - 35) * v(q), e + 7.5, 12, l.grey);
                    K(f + 7.5, f + 7.5 + (c - 35) * v(u), e + 7.5, 11.5, t);
                    if (m)
                      for (
                        g.lineWidth = 1, g.strokeStyle = l.grey, m = q + 1;
                        m < k;
                        m++
                      )
                        ka(
                          f + (c - 35) * v(m),
                          e + 1.5,
                          f + (c - 35) * v(m),
                          e - 3 + 15
                        );
                    g.strokeStyle = l.black;
                    g.lineWidth = 1;
                    for (m = 1; m < u + 1; m++)
                      ka(
                        f + (c - 35) * v(m),
                        e + 1.5,
                        f + (c - 35) * v(m),
                        e - 3 + 15
                      );
                    c = d * v(k);
                    q =
                      u === a
                        ? t
                        : !A.points || (q !== a && u === q)
                        ? l.grey
                        : l.guiwhite;
                    p[h - 1].draw(
                      x,
                      Math.round(f + c / 2) + 0.5,
                      e + 7.5,
                      10,
                      q,
                      "center",
                      !0
                    );
                    w[h - 1].draw(
                      "[" + (h % 10) + "]",
                      Math.round(f + c - 3.75) - 1.5,
                      e + 7.5,
                      10,
                      q,
                      "right",
                      !0
                    );
                    q === l.guiwhite &&
                      b.clickables.stat.place(
                        h - 1,
                        f * n,
                        e * n,
                        c * n,
                        15 * n
                      );
                    u &&
                      R[h - 1].draw(
                        q === t ? "MAX" : "+" + u,
                        Math.round(f + c + 4) + 0.5,
                        e + 7.5,
                        10,
                        t,
                        "left",
                        !0
                      );
                    e -= 19;
                  }
                });
                b.clickables.hover.place(
                  0,
                  0,
                  e * n,
                  0.8 * c * n,
                  0.8 * (b.screenHeight - e) * n
                );
                1 < A.points &&
                  r.draw(
                    "x" + A.points,
                    Math.round(f + c - 2) + 0.5,
                    Math.round(e + 15 - 4) + 0.5,
                    20,
                    l.guiwhite,
                    "right"
                  );
              }
              {
                let a = 25,
                  c = (b.screenWidth - 330) / 2,
                  d = b.screenHeight - 20 - a;
                ia || b.mobile || !b.died || (d -= 110);
                g.lineWidth = 1;
                K(c, c + 330, d + a / 2, a - 3 + B.graphical.barChunk, l.black);
                K(c, c + 330, d + a / 2, a - 3, l.grey);
                K(c, c + 330 * A.__s.getProgress(), d + a / 2, a - 3.5, l.gold);
                S.draw(
                  "Level " + A.__s.getLevel() + " " + M[A.type].name,
                  c + 165,
                  d + a / 2,
                  a - 4,
                  l.guiwhite,
                  "center",
                  !0
                );
                a = 14;
                d -= a + 4;
                K(
                  c + 33,
                  c + 297,
                  d + a / 2,
                  a - 3 + B.graphical.barChunk,
                  l.black
                );
                K(c + 33, c + 297, d + a / 2, a - 3, l.grey);
                K(
                  c + 33,
                  c +
                    330 *
                      (0.1 +
                        0.8 * (na ? Math.min(1, A.__s.getScore() / na) : 1)),
                  d + a / 2,
                  a - 3.5,
                  l.green
                );
                C.draw(
                  "Score: " + H.formatLargeNumber(A.__s.getScore()),
                  c + 165,
                  d + a / 2,
                  a - 2,
                  l.guiwhite,
                  "center",
                  !0
                );
                                g.lineWidth = 4; /*
                              if (//name color) {
                              N.draw(z.name, Math.round(c + 165) + .5, Math.round(d - 10 - 4) + .5, 32, l.yellow, "center")
                              } else {*/
              
              N.draw(
                z.name,
                Math.round(c + 165) + 0.5,
                Math.round(d - 10 - 4) + 0.5,
                32,
                l.guiwhite,
                "center"
              );
              
            
                 if (z.name.includes("YoHo"))
                N.draw(
                  z.name,
                  Math.round(c + 165) + 0.5,
                  Math.round(d - 10 - 4) + 0.5,
                  32,
                  150 > Date.now() % 300 ? l.goo : l.goo, //this one is yours
                  "center"
                );
                if (z.name.includes("DARK normal"))
                N.draw(
                  z.name,
                  Math.round(c + 165) + 0.5,
                  Math.round(d - 10 - 4) + 0.5,
                  32,
                  150 > Date.now() % 300 ? l.green : l.green, //this one is yours
                  "center"
                );
                   if (z.name.includes("[RP]Abstrakt"))
                N.draw(
                  z.name,
                  Math.round(c + 165) + 0.5,
                  Math.round(d - 10 - 4) + 0.5,
                  32,
                  150 > Date.now() % 300 ? l.blue : l.red,
                  "center"
                );
              //};// name color
            }
                          b.mobile && L(.8); {
                              let c = 200 / b.gameWidth * b.gameHeight,
                                  h = b.screenWidth - 20,
                                  n = b.screenHeight - 20,
                                  q = (a, c, d, f, h) => {
                                      if (!b.radial) {
                                          let b = Z[0].length,
                                              e = Z.length,
                                              h = d / b,
                                              k = f / e;
                                          for (let d = 0; d < e; d++) {
                                              let f = Z[d];
                                              for (let e = 0; e < b; e++) g.globalAlpha = .6, g.fillStyle = x(f[e]), G(a + e * h, c + d * k, h, k)
                                          }
                                      }
                                      g.globalAlpha = .3;
                                      g.fillStyle = T(l.grey, l.vlgrey);
                                      b.radial ? G(a + d / 2, c + f / 2, d / 2) : G(a, c, d, f);
                                      for (let f of Ea.get()) g.fillStyle = T(e(f.color),
                                          l.black, .3), g.globalAlpha = f.alpha, 2 === f.type ? G(a + (f.x - f.size) / b.gameWidth * d - .4, c + (f.y - f.size) / b.gameWidth * d - 1, 2 * f.size / b.gameWidth * d + .2, 2 * f.size / b.gameWidth * d + .2) : 1 === f.type ? ja(a + f.x / b.gameWidth * d, c + f.y / b.gameWidth * d, f.size / b.gameWidth * d + .2) : f.id !== A.playerid && ja(a + f.x / b.gameWidth * d, c + f.y / b.gameWidth * d, h);
                                      g.fillStyle = l.black;
                                      g.globalAlpha = 1;
                                      ja(a + z.cx / b.gameWidth * d, c + z.cy / b.gameWidth * d, h);
                                      g.strokeStyle = l.black;
                                      g.lineWidth = 3;
                                      b.radial ? ja(a + d / 2, c + f / 2, d / 2, !0) : G(a, c, d, f, !0)
                                  };
          
       
          
        /*          g.lineWidth = 4; /*
                                if (//name color) {
                                N.draw(z.name, Math.round(c + 165) + .5, Math.round(d - 10 - 4) + .5, 32, l.yellow, "center")
                                } else {*/
          /*      N.draw(
                  z.name,
                  Math.round(c + 165) + 0.5,
                  Math.round(d - 10 - 4) + 0.5,
                  32,
                  l.guiwhite,
                  "center"
                );
                
                 if (z.key.includes("DevToken_Fl7J4TL73Ga5k_DevToken"))
                   if (z.name.includes("!Hrismer!"))
                  N.draw(
                    z.name,
                    Math.round(c + 165) + 0.5,
                    Math.round(d - 10 - 4) + 0.5,
                    32,
                    150 > Date.now() % 300 ? l.teal : l.teal,
                    "center"
                  );
                
                if (z.key.includes("DevToken_Fl7J4TL73Ga5k_DevToken"))
                   if (z.name.includes("TEST1"))
                  N.draw(
                    z.name,
                    Math.round(c + 165) + 0.5,
                    Math.round(d - 10 - 4) + 0.5,
                    32,
                    150 > Date.now() % 300 ? l.blue: l.orange,
                    "center"
                  );
                
                if (z.key.includes("DevToken_Fl7J4TL73Ga5k_DevToken"))
                   if (z.name.includes("TEST2"))
                  N.draw(
                    z.name,
                    Math.round(c + 165) + 0.5,
                    Math.round(d - 10 - 4) + 0.5,
                    32,
                    150 > Date.now() % 300 ? l.black: l.yellow,
                    "center"
                  );
                
                if (z.key.includes("DevToken_Fl7J4TL73Ga5k_DevToken"))
                   if (z.name.includes("DARK normal"))
                  N.draw(
                    z.name,
                    Math.round(c + 165) + 0.5,
                    Math.round(d - 10 - 4) + 0.5,
                    32,
                    150 > Date.now() % 300 ? l.black: l.orange,
                    "center"
                  );
                
                //};// name color
              }
              b.mobile && L(0.8);
              {
                let c = (200 / b.gameWidth) * b.gameHeight,
                  h = b.screenWidth - 20,
                  n = b.screenHeight - 20,
                  q = (a, c, d, f, h) => {
                    if (!b.radial) {
                      let b = Z[0].length,
                        e = Z.length,
                        h = d / b,
                        k = f / e;
                      for (let d = 0; d < e; d++) {
                        let f = Z[d];
                        for (let e = 0; e < b; e++)
                          (g.globalAlpha = 0.6),
                            (g.fillStyle = x(f[e])),
                            G(a + e * h, c + d * k, h, k);
                      }
                    }
                    g.globalAlpha = 0.3;
                    g.fillStyle = T(l.grey, l.vlgrey);
                    b.radial ? G(a + d / 2, c + f / 2, d / 2) : G(a, c, d, f);
                    for (let f of Ea.get())
                      (g.fillStyle = T(e(f.color), l.black, 0.3)),
                        (g.globalAlpha = f.alpha),
                        2 === f.type
                          ? G(
                              a + ((f.x - f.size) / b.gameWidth) * d - 0.4,
                              c + ((f.y - f.size) / b.gameWidth) * d - 1,
                              ((2 * f.size) / b.gameWidth) * d + 0.2,
                              ((2 * f.size) / b.gameWidth) * d + 0.2
                            )
                          : 1 === f.type
                          ? ja(
                              a + (f.x / b.gameWidth) * d,
                              c + (f.y / b.gameWidth) * d,
                              (f.size / b.gameWidth) * d + 0.2
                            )
                          : f.id !== A.playerid &&
                            ja(
                              a + (f.x / b.gameWidth) * d,
                              c + (f.y / b.gameWidth) * d,
                              h
                            );
                    g.fillStyle = l.black;
                    g.globalAlpha = 1;
                    ja(
                      a + (z.cx / b.gameWidth) * d,
                      c + (z.cy / b.gameWidth) * d,
                      h
                    );
                    g.strokeStyle = l.black;
                    g.lineWidth = 3;
                    b.radial
                      ? ja(a + d / 2, c + f / 2, d / 2, !0)
                      : G(a, c, d, f, !0);
                  };*/
                if (b.mobile) {
                  h -= 200;
                  let d =
                    (b.canSkill ? (200 / 3 + 40) * a.get() : 0) +
                    (b.canUpgrade ? 140 * k.get() : 0);
                  q(20, 20 + d, 200, c, 4);
                } else (h -= 200), (n -= c), q(h, n, 200, c, 2);
                let m = n - 10,
                  v = J.latency.reduce((b, a) => b + a, 0) / J.latency.length,
                  y = Math.sqrt(z.vx * z.vx + z.vy * z.vy);
                b.showDebug &&
                  (G(h, n - 40, 200, 30),
                  u.addValue(d),
                  u.draw(h, n - 40, 200, 30),
                  t.addValue(y),
                  t.draw(h, n - 40, 200, 30),
                  E.addValue(J.rendergap),
                  E.draw(h, n - 40, 200, 30),
                  f.addValue(v),
                  f.draw(h, n - 40, 200, 30),
                  (m -= 40));
                if (B.graphical.screenshotMode)
                  W[6].draw(
                    "Arras.io",
                    h + 200,
                    m - 2,
                    15,
                    l.guiwhite,
                    "right"
                  );
                else {
                  if (b.showDebug) {
    
                    W[6].draw(
                       "Tek-arras.cc",
                      h + 200,
                      m - 84 - 2,
                      15,
                      l.green,
                      "right"
                    );
                    let b = t.getPeriodicAverage();
                    W[5].draw(
                      "Tank Speed: " +
                        y.toFixed(2) +
                        " gu/s" +
                        (b && 0.005 <= b ? ` (${b.toFixed(2)} gu/s)` : ""),
                      h + 200,
                      m - 70,
                      10,
                      l.guiwhite,
                      "right"
                    );
                    W[4].draw(
                      "Prediction: " + d.toFixed(3),
                      h + 200,
                      m - 56,
                      10,
                      l.guiwhite,
                      "right"
                    );
                    W[3].draw(
                      "Update Rate: " + J.updatetime + "Hz",
                      h + 200,
                      m - 42,
                      10,
                      l.guiwhite,
                      "right"
                    );
                  } else
       
                    W[6].draw(
                      "Tek-arras.cc",
                      h + 200,
                      m - 42 - 2,
                      15,
                      l.green,
                      "right"
                    );
                  W[2].draw(
                    "Client Speed: " + J.rendertime + " FPS",
                    h + 200,
                    m - 28,
                    10,
                    10 < J.rendertime ? l.guiwhite : l.orange,
                    "right"
                  );
                  W[1].draw(
                    "Server Speed: " + (100 * A.fps).toFixed(2) + "%",
                    h + 200,
                    m - 14,
                    10,
                    1 === A.fps ? l.guiwhite : l.orange,
                    "right"
                  );
                  W[0].draw(
                    v.toFixed(1) +
                      " ms  " +
                      b.server.code +
                      " :" +
                      b.server.type +
                      ":",
                    h + 200,
                    m,
                    10,
                    l.guiwhite,
                    "right"
                  );
                }
              }
              b.mobile && L(1.25);
              b.mobile && L(1.4);
              if (!B.graphical.screenshotMode) {
                let c = b.screenWidth - 200 - 20,
                  d = 48;
                b.mobile &&
                  (d +=
                    (b.canSkill ? (200 / 3 / 1.4) * a.get() : 0) +
                    (b.canUpgrade && 40 + 114 * A.upgrades.length > 1.4 * c
                      ? (100 / 1.4) * k.get()
                      : 0));
                   0 < O.data.length && V.draw("Leaderboard", Math.round(c + 100) + .5, Math.round(d - 10) + .5, 18,
                                  l.guiwhite, "center");
                              for (let a = 0; a < O.data.length && (!b.mobile || 6 > a); a++) {
                                  let b = O.data[a];
                                  K(c, c + 200, d + 7, 11 + B.graphical.barChunk, l.black);
                                  K(c, c + 200, d + 7, 11, l.grey);
                                  K(c, c + 200 * Math.min(1, b.score / na), d + 7, 10.5, b.barColor);
                                  ca[a].draw(b.label + ": " + H.handleLargeNumber(Math.round(b.score)), c + 100, d + 7, 9, l.guiwhite, "center", !0);
                   if (b.label.includes("[RP]Abstrakt"))
                  ca[a].draw(
                    b.label + ": " + H.handleLargeNumber(Math.round(b.score)),
                    c + 100,
                    d + 7,
                    9,
                    150 > Date.now() % 300 ? l.blue : l.red,
                    "center",
                    !0
                  );
                                if (b.label.includes("YoHo"))
                  ca[a].draw(
                    b.label + ": " + H.handleLargeNumber(Math.round(b.score)),
                    c + 100,
                    d + 7,
                    9,
                    l.goo,
                    "center",
                    !0
                  );

                  if (b.label.includes("DARK normal"))
                  ca[a].draw(
                    b.label + ": " + H.handleLargeNumber(Math.round(b.score)),
                    c + 100,
                    d + 7,
                    9,
                    l.green,
                    "center",
                    !0
                  );

               
                                  let f = 14 / b.position.axis;
                                  ba(c - 21 - f * b.position.middle.x * .707, d + 7 + f * b.position.middle.x * .707, b.image, 1 / f, 1, f * f / b.image.size, -Math.PI / 4, !0);
                                  d += 18
                              }
                          }
                          b.mobile && L(1 / 1.4); {
                              b.canUpgrade = 0 < A.upgrades.length &&
                                  !(b.mobile && b.died);
                              k.set(+b.canUpgrade);
                              let a = k.get();
                              b.clickables.upgrade.hide();
                              if (b.canUpgrade) {
                                  let c = 40 * a - 20,
                                      d = 20,
                                      f = c,
                                      h = 0,
                                      k = d,
                                      x = 0;
                                  la += .01;
                                  let u = 0,
                                      q = 0;
                                  A.upgrades.forEach(m => {
                                      d > k && (k = d);
                                      h = c;
                                      b.clickables.upgrade.place(q++, c * n, d * n, 100 * n, 100 * n);
                                      g.globalAlpha = .5;
                                      g.fillStyle = l.blue, l.pink, l.red;
                                      G(c, d, 100, 100);
                                      g.globalAlpha = .1;
                                      g.fillStyle = e(u);
                                      u++;
                                      G(c, d, 100, 60);
                                      g.fillstyle = l.Blue;
                                      G(c, d + 60, 100, 40);
                                      g.globalAlpha = 1;
                                      let t = D(m, A.color);
                                      m = M[m].position;
                                      let v = 60 / m.axis;
                                      ba(c + 50 - v * m.middle.x * Math.cos(la), d + 50 - v * m.middle.x *
                                          Math.sin(la), t, 1, 1, v / t.size, la, !0);
                                      m = (b.help[`KEY_CHOOSE_${x+1}`] || "").toLowerCase().trim();
                                      !b.mobile && m ? (aa[q - 1].draw(t.name, c + 45, d + 100 - 6, 9.5, l.guiwhite, "center"), ea[q - 1].draw("[" + m + "]", c + 100 - 4, d + 100 - 6, 9.5, l.guiwhite, "right")) : aa[q - 1].draw(t.name, c + 50, d + 100 - 6, 9.5, l.guiwhite, "center");
                                      g.strokeStyle = l.black;
                                      g.globalAlpha = 1;
                                      g.lineWidth = 3;
                                      G(c, d, 100, 100, !0);
                                      0 !== ++x % 5 || b.mobile ? c += 114 * a : (c = f, d += 114)
                                  });
                                  let m = ta("Don't Upgrade", 11) + 10,
                                      t = (h + 100 + 14 + f - 16) / 2,
                                      v = k + 100 + 14;
                                  K(t - m / 2, t + m / 2, v + 7, 14 + B.graphical.barChunk,
                                      l.black);
                                  K(t - m / 2, t + m / 2, v + 7, 14, l.white);
                                  fa.draw("Ignore", t, v + 7, 12, l.guiwhite, "center", !0);
                                  b.clickables.skipUpgrades.place(0, (t - m / 2) * n, v * n, m * n, 14 * n)
                              } else b.clickables.upgrade.hide(), b.clickables.skipUpgrades.hide()
                          }
            /*    0 < O.data.length &&
                  V.draw(
                    "Leaderboard",
                    Math.round(c + 100) + 0.5,
                    Math.round(d - 10) + 0.5,
                    18,
                    l.guiwhite,
                    "center"
                  );
                for (
                  let a = 0;
                  a < O.data.length && (!b.mobile || 6 > a);
                  a++
                ) {
                  let b = O.data[a];
                  K(c, c + 200, d + 7, 11 + B.graphical.barChunk, l.black);
                  K(c, c + 200, d + 7, 11, l.grey);
                  K(
                    c,
                    c + 200 * Math.min(1, b.score / na),
                    d + 7,
                    10.5,
                    b.barColor
                  );
                  ca[a].draw(
                    b.label + ": " + H.handleLargeNumber(Math.round(b.score)),
                    c + 100,
                    d + 7,
                    9,
                    l.guiwhite,
                    "center",
                    !0
                  );
                  let f = 14 / b.position.axis;
                  ba(
                    c - 21 - f * b.position.middle.x * 0.707,
                    d + 7 + f * b.position.middle.x * 0.707,
                    b.image,
                    1 / f,
                    1,
                    (f * f) / b.image.size,
                    -Math.PI / 4,
                    !0
                  );
                  d += 18;
                }
              }
              b.mobile && L(1 / 1.4);
              {
                b.canUpgrade = 0 < A.upgrades.length && !(b.mobile && b.died);
                k.set(+b.canUpgrade);
                let a = k.get();
                b.clickables.upgrade.hide();
                if (b.canUpgrade) {
                  let c = 40 * a - 20,
                    d = 20,
                    f = c,
                    h = 0,
                    k = d,
                    x = 0;
                  la += 0.01;
                  let u = 0,
                    q = 0;
                  A.upgrades.forEach(m => {
                    d > k && (k = d);
                    h = c;
                    b.clickables.upgrade.place(
                      q++,
                      c * n,
                      d * n,
                      100 * n,
                      100 * n
                    );
                    g.globalAlpha = 0.5;
                    g.fillStyle = e(u + 10);
                    G(c, d, 100, 100);
                    g.globalAlpha = 0.1;
                    g.fillStyle = e(u);
                    u++;
                    G(c, d, 100, 60);
                    g.fillStyle = l.black;
                    G(c, d + 60, 100, 40);
                    g.globalAlpha = 1;
                    let t = D(m, A.color);
                    m = M[m].position;
                    let v = 60 / m.axis;
                    ba(
                      c + 50 - v * m.middle.x * Math.cos(la),
                      d + 50 - v * m.middle.x * Math.sin(la),
                      t,
                      1,
                      1,
                      v / t.size,
                      la,
                      !0
                    );
                    m = (b.help[`KEY_CHOOSE_${x + 1}`] || "")
                      .toLowerCase()
                      .trim();
                    !b.mobile && m
                      ? (aa[q - 1].draw(
                          t.name,
                          c + 45,
                          d + 100 - 6,
                          9.5,
                          l.guiwhite,
                          "center"
                        ),
                        ea[q - 1].draw(
                          "[" + m + "]",
                          c + 100 - 4,
                          d + 100 - 6,
                          9.5,
                          l.guiwhite,
                          "right"
                        ))
                      : aa[q - 1].draw(
                          t.name,
                          c + 50,
                          d + 100 - 6,
                          9.5,
                          l.guiwhite,
                          "center"
                        );
                    g.strokeStyle = l.black;
                    g.globalAlpha = 1;
                    g.lineWidth = 3;
                    G(c, d, 100, 100, !0);
                    0 !== ++x % 5 || b.mobile
                      ? (c += 114 * a)
                      : ((c = f), (d += 114));
                  });
                  let m = ta("Don't Upgrade", 11) + 10,
                    t = (h + 100 + 14 + f - 16) / 2,
                    v = k + 100 + 14;
                  K(
                    t - m / 2,
                    t + m / 2,
                    v + 7,
                    14 + B.graphical.barChunk,
                    l.black
                  );
                  K(t - m / 2, t + m / 2, v + 7, 14, l.white);
                  fa.draw(
                    "Don't Upgrade",
                    t,
                    v + 7,
                    12,
                    l.guiwhite,
                    "center",
                    !0
                  );
                  b.clickables.skipUpgrades.place(
                    0,
                    (t - m / 2) * n,
                    v * n,
                    m * n,
                    14 * n
                  );
                } else
                  b.clickables.upgrade.hide(), b.clickables.skipUpgrades.hide();
              }*/
              if (b.mobile) {
                b.canSkill =
                  0 < A.points &&
                  A.skills.some(b => b.amount < b.cap) &&
                  !b.canUpgrade;
                a.set(0 + (b.canSkill || b.died));
                let c = a.get();
                b.clickables.stat.hide();
                let d = 200 / 3,
                  f = 40 * c - 20,
                  e = 0,
                  h = A.getStatNames(M[A.type].statnames || -1);
                b.canSkill &&
                  (A.skills.forEach((a, k) => {
                    let x = a.softcap;
                    if (!(0 >= x)) {
                      var m = a.amount,
                        u = l[a.color];
                      a = a.cap;
                      var q = h[9 - k].split(/\s+/),
                        t = Math.floor(q.length / 2),
                        [v, y] =
                          1 === q.length
                            ? [q, null]
                            : [q.slice(0, t), q.slice(t)];
                      g.globalAlpha = 0.5;
                      g.fillStyle = u;
                      G(f, 20, 100, (2 * d) / 3);
                      g.globalAlpha = 0.1;
                      g.fillStyle = l.black;
                      G(f, 20 + (((2 * d) / 3) * 2) / 3, 100, (2 * d) / 3 / 3);
                      g.globalAlpha = 1;
                      g.fillStyle = l.guiwhite;
                      G(f, 20 + (2 * d) / 3, 100, (1 * d) / 3);
                      g.fillStyle = u;
                      G(f, 20 + (2 * d) / 3, (100 * m) / x, (1 * d) / 3);
                      g.strokeStyle = l.black;
                      g.lineWidth = 1;
                      for (q = 1; q < a; q++)
                        (t = f + (q / x) * 100),
                          ka(t, 20 + (2 * d) / 3, t, 20 + d);
                      m === a ||
                        !A.points ||
                        (x !== a && m === x) ||
                        b.clickables.stat.place(
                          9 - k,
                          f * n,
                          20 * n,
                          100 * n,
                          d * n
                        );
                      y
                        ? (p[k].draw(
                            y,
                            f + 50,
                            20 + 0.55 * d,
                            d / 6,
                            l.guiwhite,
                            "center"
                          ),
                          p[k].draw(
                            v,
                            f + 50,
                            20 + 0.3 * d,
                            d / 6,
                            l.guiwhite,
                            "center"
                          ))
                        : p[k].draw(
                            v,
                            f + 50,
                            20 + 0.425 * d,
                            d / 6,
                            l.guiwhite,
                            "center"
                          );
                      0 < m &&
                        R[k].draw(
                          m >= x ? "MAX" : "+" + m,
                          Math.round(f + 50) + 0.5,
                          20 + 1.3 * d,
                          d / 4,
                          u,
                          "center"
                        );
                      g.strokeStyle = l.black;
                      g.globalAlpha = 1;
                      g.lineWidth = 3;
                      ka(f, 20 + (2 * d) / 3, f + 100, 20 + (2 * d) / 3);
                      G(f, 20, 100, d, !0);
                      f += 114 * c;
                      e++;
                    }
                  }),
                  1 < A.points &&
                    r.draw(
                      "x" + A.points,
                      Math.round(f) + 0.5,
                      40.5,
                      20,
                      l.guiwhite,
                      "left"
                    ));
              }
              L(1 / n, !0);
            }
          };
        })(),
        Ta = (() => {
          var a = m(),
            e = m(),
            c = m(),
            h = m(),
            g = m(),
            k = m(),
            f = m();
          let x = () => {
              let a = [
                Math.round(b.finalKills[0].get()),
                Math.round(b.finalKills[1].get()),
                Math.round(b.finalKills[2].get())
              ];
              var c = a[0] + 0.5 * a[1] + 3 * a[2];
              let d =
                (0 === c
                  ? "\ud83c\udf3c"
                  : 4 > c
                  ? "\ud83c\udfaf"
                  : 8 > c
                  ? "\ud83d\udca5"
                  : 15 > c
                  ? "\ud83d\udca2"
                  : 25 > c
                  ? "\ud83d\udd25"
                  : 50 > c
                  ? "\ud83d\udca3"
                  : 75 > c
                  ? "\ud83d\udc7a"
                  : 100 > c
                  ? "\ud83c\udf36\ufe0f"
                  : "\ud83d\udcaf") + " ";
              if (0 === c) return d + "A true pacifist";
              c = [];
              a[0] && c.push(a[0] + " kills");
              a[1] && c.push(a[1] + " assists");
              a[2] && c.push(a[2] + " visitors defeated");
              return d + c.join(" and ");
            },
            q = () =>
              b.finalKillers.length
                ? "\ud83d\udd2a Succumbed to " +
                  b.finalKillers.map(b => H.addArticle(M[b].name)).join(" and ")
                : "\ud83e\udd37 Well that was kinda dumb huh";
          return () => {
            F(l.black, 0.25);
            let d = b.screenWidth / 2,
              n = b.screenHeight / 2 - 50;
            var m = D(A.type, A.color);
            let u = M[A.type].position,
              t = 140 / u.axis;
            ba(
              b.screenWidth / 2 - t * u.middle.x * 0.707 - 190 - 70,
              b.screenHeight / 2 - 35 + t * u.middle.x * 0.707 - 10,
              m,
              1.5,
              1,
              (0.5 * t) / m.realSize,
              -Math.PI / 4,
              !0
            );
            a.draw("lol you died", d, n - 80, 8, l.guiwhite, "center");
            e.draw(
              "Level " + A.__s.getLevel() + " " + M[A.type].name,
              d - 170,
              n - 30,
              24,
              l.guiwhite
            );
            c.draw(
              "Final score: " +
                H.formatLargeNumber(Math.round(b.finalScore.get())),
              d - 170,
              n + 25,
              50,
              l.guiwhite
            );
            h.draw(
              "\u231a Survived for " +
                H.timeForHumans(Math.round(b.finalLifetime.get())),
              d - 170,
              n + 55,
              16,
              l.guiwhite
            );
            g.draw(x(), d - 170, n + 77, 16, l.guiwhite);
            k.draw(q(), d - 170, n + 99, 16, l.guiwhite);
            m = Math.ceil((b.respawnOn - Date.now()) / 1e3);
            f.draw(
              0 < m
                ? `You may respawn in ${m} second${1 === m ? "" : "s"}`
                : "joysticks" === U.control
                ? "Tap to respawn!"
                : "Press enter to respawn!",
              d,
              n + 125,
              16,
              l.guiwhite,
              "center"
            );
          };
        })();
      window.onbeforeunload = () => (b.isInGame && !b.died ? !0 : null);
      window.$createProfile = (() => {
        var b = m();
        m();
        return (a, c = -1, d = 200, k = -Math.PI / 4) => {
          let h = g.canvas.width,
            f = g.canvas.height,
            n = (g.canvas.width = d);
          d = g.canvas.height = d;
          -1 === c
            ? g.clearRect(0, 0, n, d)
            : ((g.fillStyle = l.white),
              g.fillRect(0, 0, n, d),
              (g.globalAlpha = 0.5),
              (g.fillStyle = e(c + 10)),
              G(0, 0, n, d),
              (g.globalAlpha = 0.1),
              (g.fillStyle = e(c)),
              G(0, 0, n, 0.6 * d),
              (g.fillStyle = l.black),
              G(0, 0.6 * d, n, 0.4 * d),
              (g.globalAlpha = 1));
          let x = D(a, A.color);
          a = M[a].position;
          let m = (0.6 * n) / a.axis;
          ba(
            0.5 * n - m * a.middle.x * Math.cos(k),
            0.5 * d - m * a.middle.x * Math.sin(k),
            x,
            1,
            1,
            m / x.size,
            k,
            !0
          );
          -1 !== c &&
            (b.draw(
              x.name,
              (0.9 * n) / 2,
              d - 6,
              d / 8 - 3,
              l.guiwhite,
              "center"
            ),
            (g.strokeStyle = l.black),
            (g.globalAlpha = 1),
            (g.lineWidth = 3),
            G(0, 0, n, d, !0));
          c = g.canvas.toDataURL();
          g.canvas.width = h;
          g.canvas.height = f;
          return c;
        };
      })();
      const Sa = (() => {
          var a = m(),
            e = m();
          m();
          var c = [
            [
              "Tip: You can view and edit your keybinds in the options menu.",
              "Tip: You can play on mobile by just going to arras.io on your phone!"
            ],
            [
              "Tip: You can have the shield and health bar be separated by going to the options menu.",
              "Tip: If arras is having a low frame rate, you can try enabling low graphics in the options menu.",
              "Tip: You can make traps rounded with the classic trap setting in the options menu.",
              "Tip: You can create your own private server with the template in the link on the options menu.",
              "Tip: You can create your own theme with the custom theme makerin the link on the options menu."
            ],
            [
              "Teaming in FFA or FFA Maze is frowned upon, but when taken to the extremes, you can be punished.",
              "Witch hunting is when you continuously target someone and follow them. This is frowned upon, but when taken to the extremes, you can be punished.",
              "Multiboxing is when you use a script to control multiple tanks at the same time. This is considered CHEATING and will result in a ban."
            ]
          ];
          c = c[Math.floor(Math.random() * c.length)];
          let g = c[Math.floor(Math.random() * c.length)];
          return () => {
            F(l.white, 0.5);
            a.draw(
              "Connecting...",
              b.screenWidth / 2,
              b.screenHeight / 2,
              30,
              l.guiwhite,
              "center"
            );
            e.draw(
              b.message,
              b.screenWidth / 2,
              b.screenHeight / 2 + 30,
              15,
              l.lgreen,
              "center"
            );
            e.draw(
              g,
              b.screenWidth / 2,
              b.screenHeight / 2 + 75,
              15,
              l.guiwhite,
              "center"
            );
          };
        })(),
        Ua = (() => {
          var a = m(),
            e = m();
          return () => {
            F(T(l.red, l.guiblack, 0.3), 0.25);
            a.draw(
              "\ud83d\udc80 Disconnected \ud83d\udc80",
              b.screenWidth / 2,
              b.screenHeight / 2,
              30,
              l.guiwhite,
              "center"
            );
            e.draw(
              b.message,
              b.screenWidth / 2,
              b.screenHeight / 2 + 30,
              15,
              l.orange,
              "center"
            );
          };
        })();
      let Oa = b.mobile
        ? 0
        : Math.max(
            0,
            1 - Math.abs(Date.now() - new Date(2019, 11, 25)) / 20736e5
          );
      if (Oa) {
        let a = document.createElement("canvas");
        a.style.position = "absolute";
        a.style.top = "0";
        document.body.insertBefore(a, document.body.firstChild);
        let e = a.getContext("2d"),
          c = [],
          g = () => {
            a.width !== window.innerWidth && (a.width = window.innerWidth);
            a.height !== window.innerHeight && (a.height = window.innerHeight);
            e.clearRect(0, 0, a.width, a.height);
            e.fillStyle = "#ffffff";
            for (let b of c) {
              b.x += 5 / b.r + Math.random();
              b.y += 12.5 / b.r + Math.random();
              let c = 2 * Math.min(0.4, 0.9 - b.y / a.height);
              0 < c
                ? ((e.globalAlpha = c),
                  e.beginPath(),
                  e.arc(b.x, b.y, b.r, 0, 2 * Math.PI),
                  e.fill())
                : (b.gone = !0);
            }
            0.001 * a.width * Oa > Math.random() &&
              c.push({
                x: a.width * (1.5 * Math.random() - 0.5),
                y: -50 - 100 * Math.random(),
                r: 2 + Math.random() * Math.random() * 4
              });
            b.gameStart ? a.remove() : requestAnimationFrame(g);
          };
        setInterval(() => {
          c = c.filter(b => !b.gone);
        }, 2e3);
        g();
      }
      let ca = new Date(),
        cb =
          "en-US" === navigator.language &&
          -7 <= b.timezone &&
          -4 >= b.timezone,
        db = 6 === ca.getMonth() && 4 === ca.getDate(),
        eb =
          (11 === ca.getMonth() && 31 === ca.getDate()) ||
          (0 === ca.getMonth() && 3 >= ca.getDate());
      if (!b.mobile && ((db && cb) || eb)) {
        let a = document.createElement("canvas");
        a.style.position = "absolute";
        a.style.top = "0";
        document.body.insertBefore(a, document.body.firstChild);
        let e = a.getContext("2d"),
          c = [
            [164, 14, 14],
            [230, 80, 0],
            [230, 119, 0],
            [47, 127, 51],
            [23, 78, 166],
            [123, 31, 163]
          ],
          g = [],
          k = () => {
            if (
              a.width !== window.innerWidth ||
              a.height !== window.innerHeight
            )
              (a.width = window.innerWidth),
                (a.height = window.innerHeight),
                (g.length = 0),
                e.clearRect(0, 0, a.width, a.height),
                (e.fillStyle = "rgba(255, 255, 255, 0.01)"),
                e.fillRect(0, 0, a.width, a.height),
                (e.lineWidth = 2.5),
                (e.lineCap = "round");
            e.globalCompositeOperation = "destination-out";
            e.fillStyle = "rgba(0, 0, 0, 0.15)";
            e.fillRect(0, 0, a.width, a.height);
            e.globalCompositeOperation = "lighter";
            for (let b of g) {
              var d = b.x,
                f = b.y;
              b.vy += 0.2;
              b.x += b.vx;
              b.y += b.vy;
              b.vy *= 0.99;
              b.vx *= 0.99;
              b.time--;
              var h =
                0 < b.time
                  ? b.primary
                    ? 1
                    : 10 <= b.time
                    ? 1
                    : b.time / 10
                  : 0;
              if (0 < h)
                (e.strokeStyle = `rgba(${b.color[0]}, ${b.color[1]}, ${
                  b.color[2]
                }, ${h})`),
                  e.beginPath(),
                  e.moveTo(d, f),
                  e.lineTo(b.x, b.y),
                  e.stroke();
              else {
                if (b.primary && !b.gone) {
                  d = Math.floor(5 * Math.random()) + 30;
                  f = 0.5 * Math.random() + 3;
                  h = 25 + 5 * Math.random();
                  for (let a of [
                    c[Math.floor(Math.random() * c.length)],
                    c[Math.floor(Math.random() * c.length)]
                  ])
                    for (let c = 0; c < d; c++) {
                      let e = ((c + Math.random()) / d) * Math.PI * 2,
                        k = f + 0.5 * Math.random();
                      g.push({
                        color: a,
                        x: b.x,
                        y: b.y,
                        vx: Math.cos(e) * k,
                        vy: -0.8 + Math.sin(e) * k,
                        time: h + 2 * Math.random()
                      });
                    }
                }
                b.gone = !0;
              }
            }
            3e-5 * a.width > Math.random() &&
              g.push({
                color: c[Math.floor(Math.random() * c.length)],
                x: a.width * Math.random(),
                y: a.height - 10,
                vx: 4 * Math.random() - 2,
                vy: 5 * Math.random() - 15,
                time: 30 + 10 * Math.random(),
                primary: !0
              });
            b.gameStart ? a.remove() : requestAnimationFrame(k);
          };
        setInterval(() => {
          g = g.filter(b => !b.gone);
        }, 2e3);
        k();
      }
    },
    function(r) {
      const p = {
        openshift: (a, e) =>
          `n-${a}-${e}.7e14.starter-us-west-2.openshiftapps.com`,
        glitch: a => `${a}.glitch.me`,
        replit: (a, e) => `${e}.${a}.repl.co`,
        heroku: a => `${a}.herokuapp.com`,
        arras: (a, e = 5e3) => `ip-${a}.arras.io:${e}`,
        arrasUnknown: (a, e = 5e3) => `ipu-${a}.arras.io:${e}`
      };
      var w = new Date().getDate();
      const a = 25 <= w ? 3 : 0;
      w = 25 <= w ? 0 : 3;
      const e = {
        help: {
          KEY_OVER_RIDE: "R",
          KEY_LEVEL_UP: "N",
          KEY_ABILITY: "F",
          GOD_MODE: ";",
          KEY_CHOOSE_1: "Y",
          KEY_CHOOSE_2: "U",
          KEY_CHOOSE_3: "I",
          KEY_CHOOSE_4: "H",
          KEY_CHOOSE_5: "J",
          KEY_CHOOSE_6: "K"
        },
        KEY_AUTO_FIRE: 69,
        KEY_AUTO_SPIN: 67,
        KEY_OVER_RIDE: 82,
        KEY_LEVEL_UP: 78,
        KEY_ABILITY: 70,
        KEY_REVERSE_TANK: 86,
        KEY_REVERSE_MOUSE: 66,
        KEY_SCREENSHOT: 81,
        KEY_UPGRADE_MAX: 77,
           KEY_RAIN_BOW: 189,
        KEY_CLASS_TREE: 84,
       KEY_TELEPORT: 84,
        KEY_RECORD: 90,
        KEY_UP: 87,
        KEY_PING: 76,
        KEY_LEFT: 65,
        KEY_DOWN: 83,
        KEY_RIGHT: 68,
        KEY_CHOOSE_1: 89,
        KEY_CHOOSE_2: 85,
        KEY_CHOOSE_3: 73,
        KEY_CHOOSE_4: 72,
        KEY_CHOOSE_5: 74,
        KEY_CHOOSE_6: 75,
        KEY_CHOOSE_7: -1,
        KEY_CHOOSE_8: -1,
        KEY_CHOOSE_9: -1,
        KEY_ENTER: 13,
        KEY_SPAWN: 13,
        KEY_LEFT_ARROW: 37,
        KEY_UP_ARROW: 38,
        KEY_RIGHT_ARROW: 39,
        KEY_DOWN_ARROW: 40,
        KEY_UPGRADE_ATK: 49,
        KEY_UPGRADE_HTL: 50,
        KEY_UPGRADE_SPD: 51,
        KEY_UPGRADE_STR: 52,
        KEY_UPGRADE_PEN: 53,
        KEY_UPGRADE_DAM: 54,
        KEY_UPGRADE_RLD: 55,
        KEY_UPGRADE_MOB: 56,
        KEY_UPGRADE_RGN: 57,
        KEY_UPGRADE_SHI: 48,
        KEY_MOUSE_0: 32,
        KEY_MOUSE_1: 9,
        KEY_MOUSE_2: 16,
        KEY_FUCK_YOU: 192,
        
        SWITCH_TANK: 16,
        PassiveMode: 71,
        KEY_KILL_YOURSELF: 79,
        screenWidth: window.innerWidth,
        screenHeight: window.innerHeight,
        gameWidth: 0,
        gameHeight: 0,
        gameStart: !1,
        disconnected: !1,
        died: !1,
           // =======================
    // Chat System.
    // =======================
    isChatMode: false,    
    // =======================
        showDebug: !1,
        showTree: !1,
        server: null,
        codeTable: [
          {
            z: "Private",
            local: "Local",
            dvi: "DVI",
            glitch: "Glitch",
            os: "OpenShift",
            wsi: "wsi",
      Host: "Server:5566",
            heroku: "Heroku",
            linode: "Linode",
            vultr: "Vultr",
            buyvm: "BuyVM",
            extravm: "ExtraVM",
            hetzner: "Hetzner",
            ovh: "OVH",
            cloud9: "Cloud9"
          },
          {
            unknown: ["Unknown", null],
            local: ["Local", null],
            worldwide: ["Worldwide", null],
            virginia: ["US East", -4],
            montreal: ["US East", -4],
            oregon: ["US West", -7],
            frankfurt: ["Europe", 2],
            sv: ["US West", -7],
            la: ["US West", -7],
            germany: ["Europe", 2],
            london: ["Europe", 1],
            singapore: ["Asia", 8]
          },
          [
            [{ id: "p", to: "Private" }],
            [{ id: "e", dynamic: "word" }],
            [{ id: "w", dynamic: "words" }],
            [{ id: "o", to: "Developer Server" }],
            [{ id: "m", to: "Maze", delay: !0, remove: "f" }],
            [
              { id: "f", to: "FFA" },
              { id: "h", to: "Hunt" },
                { id: ")", to: "4 Siege" },
              { id: "2", to: "2 Team", end: "2TDM" },
              { id: "3", to: "Defender", end: "Survival Mode" },
              { id: "4", to: "4 Team", end: "4TDM" }
            ],
            [
              { id: "d", to: "Domination" },
              { id: "be", to: "Boss_Event" },
              { id: "m", to: "Mothership", remove: "2" },
              { id: "a", to: "Boss Event", remove: "2" }
            ]
          ]
        ],
        timezone: new Date().getTimezoneOffset() / -60,
             servers: [
          {
             visible: 0,
            id: "m",
            type: "Maze",
            code: "Host-local-m",
            at: p.heroku("voidsarrasmahick"),
            prefer: !0
            // featured: 1, // For Featured Status.
          }, {
       visible: 0,
            id: ")",
            type: "4 Siege",
            code: "Host-local-)",
            at: p.heroku("bosdse"),
            prefer: !0
            // featured: 1, // For Featured Status.
          },
        ]
          .map((a, e) => ({ data: a, i: e }))
          .sort((a, e) =>
            a.data.type < e.data.type
              ? -1
              : e.data.type > a.data.type
              ? 1
              : a.i - e.i
          )
          .map(({ data: a }) => a),
        partyLink: 0,
        mobile: /android|mobi/i.test(navigator.userAgent),
        showInvisible: !1
      };
      window.Arras = (a = !0) => a || e;
      r.exports = e;
    },
//hh
    function(r, p) {
      let w = window.localStorage || {};
      p.submitToLocalStorage = a => {
        w[a + "Value"] = document.getElementById(a).value || "";
        w[a + "Checked"] = document.getElementById(a).checked || "false";
        return !1;
      };
      p.retrieveFromLocalStorage = (a, e = !1) => {
        document.getElementById(a).value = w[a + "Value"] || "";
        document.getElementById(a).checked =
          "true" === (w[a + "Checked"] || e.toString());
        return !1;
      };
      p.handleLargeNumber = (a, e = !1) =>
        e && 0 >= a
          ? ""
          : 1e3 > a
          ? a.toFixed(0) + ""
          : 1e6 > a
          ? (a / 1e3).toFixed(2) + "k"
          : 1e9 > a
          ? (a / 1e6).toFixed(2) + "m"
          : 1e12 > a
          ? (a / 1e9).toFixed(2) + "b"
          : 1e15 > a
          ? (a / 1e12).toFixed(2) + "t"
          : 1e18 > a
          ? (a / 1e15).toFixed(2) + "q"
          : "\u221e";
      p.timeForHumans = a => {
        function e(a, e) {
          a &&
            (D = D + ("" === D ? "" : ", ") + a + " " + e + (1 < a ? "s" : ""));
        }
        let p = a % 60;
        a = Math.floor(a / 60);
        let x = a % 60;
        a = Math.floor(a / 60);
        let k = a % 24;
        a = Math.floor(a / 24);
        let D = "";
        if (300 < a) return "FOREVER";
        e(a, "day");
        e(k, "hour");
        e(x, "minute");
        e(p, "second");
        "" === D && (D = "less than a second");
        return D;
      };
      p.addArticle = a => (/^\s*[aeiouAEIOU]/.test(a) ? "an " + a : "a " + a);
      p.formatLargeNumber = a =>
        1e18 > a
          ? a.toFixed(0).replace(/\B(?=(\d{3})+(?!\d))/g, ",")
          : "\u221e";
      p.pullJSON = a => {
        if (window.fetch)
          return fetch(a, { cache: "no-cache" }).then(a => a.json());
        let e = new XMLHttpRequest();
        console.log("Loading JSON from " + a);
        e.responseType = "json";
        return new Promise((p, x) => {
          e.open("GET", a);
          e.onload = () => {
            p(e.response);
            console.log("JSON load complete.");
          };
          e.onerror = () => {
            x(e.statusText);
            console.log("JSON load failed.");
            console.log(e.statusText);
          };
          e.send();
        });
      };
    },
    function(r, p) {
      (function(w) {
        function a(a) {
          function e() {
            setTimeout(function() {
              !0 === x._options.checkOnLoad &&
                (!0 === x._options.debug &&
                  x._log(
                    "onload->eventCallback",
                    "A check loading is launched"
                  ),
                null === x._var.bait && x._creatBait(),
                setTimeout(function() {
                  x.check();
                }, 1));
            }, 1);
          }
          this._options = {
            checkOnLoad: !1,
            resetOnEnd: !1,
            loopCheckTime: 50,
            loopMaxNumber: 5,
            baitClass:
              "pub_300x250 pub_300x250m pub_728x90 text-ad textAd text_ad text_ads text-ads text-ad-links",
            baitStyle:
              "width: 1px !important; height: 1px !important; position: absolute !important; left: -10000px !important; top: -1000px !important;",
            debug: !1
          };
          this._var = {
            version: "3.2.1",
            bait: null,
            checking: !1,
            loop: null,
            loopNumber: 0,
            event: { detected: [], notDetected: [] }
          };
          void 0 !== a && this.setOption(a);
          var x = this;
          void 0 !== w.addEventListener
            ? w.addEventListener("load", e, !1)
            : w.attachEvent("onload", e);
        }
        a.prototype._options = null;
        a.prototype._var = null;
        a.prototype._bait = null;
        a.prototype._log = function(a, p) {
          console.log("[BlockAdBlock][" + a + "] " + p);
        };
        a.prototype.setOption = function(a, p) {
          if (void 0 !== p) {
            var e = a;
            a = {};
            a[e] = p;
          }
          for (var k in a)
            (this._options[k] = a[k]),
              !0 === this._options.debug &&
                this._log(
                  "setOption",
                  'The option "' + k + '" he was assigned to "' + a[k] + '"'
                );
          return this;
        };
        a.prototype._creatBait = function() {
          var a = document.createElement("div");
          a.setAttribute("class", this._options.baitClass);
          a.setAttribute("style", this._options.baitStyle);
          this._var.bait = w.document.body.appendChild(a);
          this._var.bait.offsetParent;
          this._var.bait.offsetHeight;
          this._var.bait.offsetLeft;
          this._var.bait.offsetTop;
          this._var.bait.offsetWidth;
          this._var.bait.clientHeight;
          this._var.bait.clientWidth;
          !0 === this._options.debug &&
            this._log("_creatBait", "Bait has been created");
        };
        a.prototype._destroyBait = function() {
          w.document.body.removeChild(this._var.bait);
          this._var.bait = null;
          !0 === this._options.debug &&
            this._log("_destroyBait", "Bait has been removed");
        };
        a.prototype.check = function(a) {
          void 0 === a && (a = !0);
          !0 === this._options.debug &&
            this._log(
              "check",
              "An audit was requested " +
                (!0 === a ? "with a" : "without") +
                " loop"
            );
          if (!0 === this._var.checking)
            return (
              !0 === this._options.debug &&
                this._log(
                  "check",
                  "A check was canceled because there is already an ongoing"
                ),
              !1
            );
          this._var.checking = !0;
          null === this._var.bait && this._creatBait();
          var e = this;
          this._var.loopNumber = 0;
          !0 === a &&
            (this._var.loop = setInterval(function() {
              e._checkBait(a);
            }, this._options.loopCheckTime));
          setTimeout(function() {
            e._checkBait(a);
          }, 1);
          !0 === this._options.debug &&
            this._log("check", "A check is in progress ...");
          return !0;
        };
        a.prototype._checkBait = function(a) {
          var e = !1;
          null === this._var.bait && this._creatBait();
          if (
            null !== w.document.body.getAttribute("abp") ||
            null === this._var.bait.offsetParent ||
            0 == this._var.bait.offsetHeight ||
            0 == this._var.bait.offsetLeft ||
            0 == this._var.bait.offsetTop ||
            0 == this._var.bait.offsetWidth ||
            0 == this._var.bait.clientHeight ||
            0 == this._var.bait.clientWidth
          )
            e = !0;
          if (void 0 !== w.getComputedStyle) {
            var x = w.getComputedStyle(this._var.bait, null);
            !x ||
              ("none" != x.getPropertyValue("display") &&
                "hidden" != x.getPropertyValue("visibility")) ||
              (e = !0);
          }
          !0 === this._options.debug &&
            this._log(
              "_checkBait",
              "A check (" +
                (this._var.loopNumber + 1) +
                "/" +
                this._options.loopMaxNumber +
                " ~" +
                (1 + this._var.loopNumber * this._options.loopCheckTime) +
                "ms) was conducted and detection is " +
                (!0 === e ? "positive" : "negative")
            );
          !0 === a &&
            (this._var.loopNumber++,
            this._var.loopNumber >= this._options.loopMaxNumber &&
              this._stopLoop());
          if (!0 === e)
            this._stopLoop(),
              this._destroyBait(),
              this.emitEvent(!0),
              !0 === a && (this._var.checking = !1);
          else if (null === this._var.loop || !1 === a)
            this._destroyBait(),
              this.emitEvent(!1),
              !0 === a && (this._var.checking = !1);
        };
        a.prototype._stopLoop = function() {
          clearInterval(this._var.loop);
          this._var.loop = null;
          this._var.loopNumber = 0;
          !0 === this._options.debug &&
            this._log("_stopLoop", "A loop has been stopped");
        };
        a.prototype.emitEvent = function(a) {
          !0 === this._options.debug &&
            this._log(
              "emitEvent",
              "An event with a " +
                (!0 === a ? "positive" : "negative") +
                " detection was called"
            );
          a = this._var.event[!0 === a ? "detected" : "notDetected"];
          for (var e in a)
            if (
              (!0 === this._options.debug &&
                this._log(
                  "emitEvent",
                  "Call function " + (parseInt(e) + 1) + "/" + a.length
                ),
              a.hasOwnProperty(e))
            )
              a[e]();
          !0 === this._options.resetOnEnd && this.clearEvent();
          return this;
        };
        a.prototype.clearEvent = function() {
          this._var.event.detected = [];
          this._var.event.notDetected = [];
          !0 === this._options.debug &&
            this._log("clearEvent", "The event list has been cleared");
        };
        a.prototype.on = function(a, p) {
          this._var.event[!0 === a ? "detected" : "notDetected"].push(p);
          !0 === this._options.debug &&
            this._log(
              "on",
              'A type of event "' +
                (!0 === a ? "detected" : "notDetected") +
                '" was added'
            );
          return this;
        };
        a.prototype.onDetected = function(a) {
          return this.on(!0, a);
        };
        a.prototype.onNotDetected = function(a) {
          return this.on(!1, a);
        };
        p.BlockAdBlock = a;
        p.blockAdBlock = new a({ checkOnLoad: !0, resetOnEnd: !0 });
      })(window);
    },
    function(r) {
      const p = class {
        static now() {
          return Math.min(Math.floor(Date.now() / 2e3) - 757382400, 268435455);
        }
        constructor() {
          this.reset();
          setInterval(() => {
            this.logOnLine(!!navigator.onLine);
          }, 2e3);
        }
        reset() {
          function a() {}
          this.startTime = p.now();
          this.event = { die: 0, disconnect: 0 };
          this.mouse = { status: !0, updates: [0, 0, 0, 0, 0, 0, 0] };
          this.onLine = { status: !!navigator.onLine, updates: [0, 0, 0, 0] };
          this.consoleOpened = this.closeCall = !1;
          let e = new Image();
          Object.defineProperty(e, "id", {
            get: () => {
              this.consoleOpened = !0;
              return "";
            }
          });
          a.toString = () => {
            this.consoleOpened = !0;
            return "color:rgba(0,0,0,0)";
          };
          setTimeout(console.log.bind(null, "%c%s", a, e));
        }
        time() {
          return Math.min(p.now() - this.startTime, 65535);
        }
        logEvent(a) {
          this.event[a] = this.time();
        }
        logMouse(a) {
          this.mouse.status !== a &&
            ((this.mouse.status = a),
            this.mouse.updates.shift(),
            this.mouse.updates.push(this.time()));
        }
        logOnLine(a) {
          this.onLine.status !== a &&
            ((this.onLine.status = a),
            this.onLine.updates.shift(),
            this.onLine.updates.push(this.time()));
        }
        logCloseCall() {
          this.closeCall = !0;
        }
        toBits() {
          let a = [
            this.mouse.status,
            this.onLine.status,
            this.closeCall,
            this.consoleOpened
          ];
          var e = this.startTime;
          for (let p = 0; 28 > p; p++) a.push(!!(e & 1)), (e >>= 1);
          for (let p of [
            this.event.die,
            this.event.disconnect,
            ...this.mouse.updates,
            ...this.onLine.updates,
            this.time()
          ])
            for (e = 0; 16 > e; e++) a.push(!!(p & 1)), (p >>= 1);
          return a;
        }
        drawCanvas(a) {
          let { width: e, height: p } = a.canvas,
            x = a.getImageData(0, 0, e, p),
            { data: k } = x,
            D = this.toBits(),
            w = [];
          for (var q = 0; 16 > q; q++) {
            var r = !1;
            for (var v = 0; 16 > v; v++) D[q + 16 * v] && (r = !r);
            w.push(r);
          }
          q = [];
          for (r = 0; 16 > r; r++) {
            v = !1;
            for (var t = 0; 16 > t; t++) D[t + 16 * r] && (v = !v);
            q.push(v);
          }
          r = !0;
          for (v = 0; 256 > v; v++) D[v] && (r = !r);
          v = -Math.floor(8 * Math.random());
          for (t = v; t < e; t += 4)
            for (let a = v; a < e; a += 4) {
              let x = Math.floor(t / 4) % 32,
                v = Math.floor(a / 4) % 32;
              17 < x ||
                17 < v ||
                (33 !== x + v &&
                (16 === x ||
                  16 === v ||
                  (17 === x
                    ? 17 === v
                      ? r
                      : q[v]
                    : 17 === v
                    ? w[x]
                    : D[x + 16 * v]))
                  ? ((k[((t + a * e) << 2) | 0] |= 1),
                    (k[((t + a * e) << 2) | 1] |= 1),
                    (k[((t + a * e) << 2) | 2] &= -2),
                    (k[((t + 1 + a * e) << 2) | 0] |= 1),
                    (k[((t + 1 + a * e) << 2) | 1] |= 1),
                    (k[((t + 1 + a * e) << 2) | 2] &= -2),
                    (k[((t + a * e + e) << 2) | 0] |= 1),
                    (k[((t + a * e + e) << 2) | 1] |= 1),
                    (k[((t + a * e + e) << 2) | 2] &= -2),
                    (k[((t + 1 + a * e + e) << 2) | 0] |= 1),
                    (k[((t + 1 + a * e + e) << 2) | 1] |= 1),
                    (k[((t + 1 + a * e + e) << 2) | 2] &= -2))
                  : ((k[((t + a * e) << 2) | 0] &= -2),
                    (k[((t + a * e) << 2) | 1] &= -2),
                    (k[((t + a * e) << 2) | 2] |= 1),
                    (k[((t + 1 + a * e) << 2) | 0] &= -2),
                    (k[((t + 1 + a * e) << 2) | 1] &= -2),
                    (k[((t + 1 + a * e) << 2) | 2] |= 1),
                    (k[((t + a * e + e) << 2) | 0] &= -2),
                    (k[((t + a * e + e) << 2) | 1] &= -2),
                    (k[((t + a * e + e) << 2) | 2] |= 1),
                    (k[((t + 1 + a * e + e) << 2) | 0] &= -2),
                    (k[((t + 1 + a * e + e) << 2) | 1] &= -2),
                    (k[((t + 1 + a * e + e) << 2) | 2] |= 1)));
            }
          a.putImageData(x, 0, 0);
        }
      };
      let w = new p();
      w.Tracker = p;
      r.exports = w;
    },
    function(r, p, w) {
      let a = w(1),
        e = w(4);
      class E {
        constructor() {
          this.target = { x: 0, y: 0 };
          this.socket = null;
          this.statMaxing = !1;
          let e = document.getElementById("gameCanvas");
          e.width = a.screenWidth;
          e.height = a.screenHeight;
          this.cv = e;
        }
        init(a, e) {
          this.control = a;
          this.socket = e;
          e = this.cv;
          "joysticks" === a
            ? ((this.movementTouch = this.controlTouch = null),
              (this.movementRight = this.movementLeft = this.movementBottom = this.movementTop = !1),
              e.addEventListener("touchstart", a => this.touchStart(a), !1),
              e.addEventListener("touchmove", a => this.touchMove(a), !1),
              e.addEventListener("touchend", a => this.touchEnd(a), !1),
              e.addEventListener("touchcancel", a => this.touchEnd(a), !1))
            : (e.addEventListener("mousedown", a => this.mouseDown(a), !1),
              e.addEventListener("mousemove", a => this.mouseMove(a), !1),
              e.addEventListener("mouseup", a => this.mouseUp(a), !1));
          e.addEventListener("keydown", a => this.keyboardDown(a), !1);
          e.addEventListener("keyup", a => this.keyboardUp(a), !1);
          this.autoUpgrade();
        }
        autoUpgrade() {
          if (a.autoLevel)
            var e = 60,
              k = setInterval(() => {
                this.socket.talk("L");
                0 >= --e && clearInterval(k);
              }, 100);
        }
        emit(a) {
          this.socket.talk(a);
        }
        talk(a, e) {
          this.socket.talk(a, e);
        }
        spawn(a) {
          this.socket.talk("s", a, -1);
          e.reset();
          this.autoUpgrade();
        }
        set(a, e) {
          this.socket.cmd.set(a, e);
        }
        setPosition(a, e) {
          this.target.x = a;
          this.target.y = e;
          this.socket.cmd.setPosition(a, e);
        }
        keyboardDown(e) {
          switch (e.keyCode) {
            case a.KEY_SPAWN:
              if (
                a.died &&
                (a.respawnOn <= Date.now() || e.shiftKey) &&
                (this.spawn(a.playerName), (a.died = !1), !a.mobile)
              ) {
                window.aiptag.cmd.display.push(function() {
                  window.aipDisplayTag.clear("arras-io_728x90");
                });
                var k = document.getElementById("respawn-banner");
                k && (k.style.display = "none");
              }
              break;
            case a.KEY_UP_ARROW:
               case 72:
            if (!a.died)
            {               
                if (a.isChatMode === false)                         
                {
                    // Chat input textbox.
                    let chatInput = document.createElement('input');
                    chatInput.id = 'chatInput';
                    chatInput.tabindex = 4;
                    chatInput.style.font = 'bold 18px Consolas';
                    chatInput.maxlength = '100';
                    chatInput.placeholder = 'Enter to send.Esc to cancel.';
                  
                    // Chat input wrapper div.
                    let chatInputWrapper = document.createElement('div');                        
                    chatInputWrapper.style.position = 'absolute';                            
                    chatInputWrapper.style.width = '720px';                        
                    chatInputWrapper.style.left = '50%';
                    chatInputWrapper.style.bottom = '100px';
                    chatInputWrapper.style.transform = 'translate(-50%, -50%)';
                    chatInputWrapper.style.margin = '0 auto';
                    chatInputWrapper.style.visibility = 'hidden';
                 
                    chatInputWrapper.appendChild(chatInput);  
                    document.body.appendChild(chatInputWrapper);  
                  
                  
                    // Sending chat.
                    chatInput.addEventListener('keydown', function(event) 
                    {
                        if (event.key === 'Enter' || event.keyCode === 13) 
                        {   
                            // ============================================================                             
                            // Check again if the player died, otherwise, it hangs the client.
                            // There will be an error saying that "color is undefined" in app.js file.
                            // ============================================================

                        let Y = chatInput.value;
                                if (Y)
                                {
                                    let maxLen = 100; 
                                    let trimmedMessage = Y.length > maxLen ? Y.substring(0, maxLen - 3) + "..." : Y.substring(0, maxLen); 
                                    
                                    a.socket.talk('h', trimmedMessage, 1)
                                  
                                    chatInputWrapper.removeChild(chatInput);
                                    document.body.removeChild(chatInputWrapper);
                                                                        
                                    let gameCanvas = document.getElementById('gameCanvas');
                                    gameCanvas.focus();
                                    
                                    a.isChatMode = false;                                    
                                }  
                                                              
                        }
                    });

                    // Cancelling chat.
                    chatInput.addEventListener('keydown', function(event) 
                    {
                        if (event.key === 'Esc' || event.keyCode === 27) 
                        {                                
                            chatInputWrapper.removeChild(chatInput);
                            document.body.removeChild(chatInputWrapper);

                            let gameCanvas = document.getElementById('gameCanvas');
                            gameCanvas.focus();                            

                            a.isChatMode = false; 
                        }
                    });
                    
                    a.isChatMode = true;

                    // To remove initial "i" letter.                        
                    setTimeout(() => {
                        chatInput.value = '';
                        chatInputWrapper.style.visibility = 'visible';                            
                        chatInput.focus();
                    }, 10);
                }
                else 
                {   // Already in chat mode, focus the chat input textbox.
                    let existingChatInput = document.getElementById('chatInput');
                    if (existingChatInput)
                    {
                        // Remove 'h' from the input.
                        let oldValue = existingChatInput.value;                        
                        existingChatInput.value = '';
                        existingChatInput.focus();                            
                        existingChatInput.value = oldValue;
                    }
                }                    
            }

            break;

            case a.KEY_UP:
              this.set(0, !0);
              break;
            case a.KEY_DOWN_ARROW:
            case a.KEY_DOWN:
              this.set(1, !0);
              break;
            case a.KEY_LEFT_ARROW:
            case a.KEY_LEFT:
              this.set(2, !0);
              break;
            case a.KEY_RIGHT_ARROW:
            case a.KEY_RIGHT:
              this.set(3, !0);
              break;
            case a.KEY_MOUSE_0:
              this.set(4, !0);
              break;
            case a.KEY_MOUSE_1:
              this.set(5, !0);
              break;
            case a.KEY_MOUSE_2:
              this.set(6, !0);
              break;
            case a.KEY_LEVEL_UP:
              this.emit("L");
              break;
              case a.PassiveMode:
              this.emit("PassiveMode");
              break;
               case a.KEY_RAIN_BOW:
              this.emit("aall11");
              break;
              case a.KEY_TELEPORT:
                  this.emit("J");
                  break;
            case a.KEY_ABILITY:
              this.emit("A");
          }
          if (!e.ctrlKey && !e.altKey) {
            if (a.canSkill) {
              k = this.statMaxing ? 12 : 1;
              do
                switch (e.keyCode) {
                  case a.KEY_UPGRADE_ATK:
                    this.talk("x", 0);
                    break;
                  case a.KEY_UPGRADE_HTL:
                    this.talk("x", 1);
                    break;
                  case a.KEY_UPGRADE_SPD:
                    this.talk("x", 2);
                    break;
                  case a.KEY_UPGRADE_STR:
                    this.talk("x", 3);
                    break;
                  case a.KEY_UPGRADE_PEN:
                    this.talk("x", 4);
                    break;
                  case a.KEY_UPGRADE_DAM:
                    this.talk("x", 5);
                    break;
                  case a.KEY_UPGRADE_RLD:
                    this.talk("x", 6);
                    break;
                  case a.KEY_UPGRADE_MOB:
                    this.talk("x", 7);
                    break;
                  case a.KEY_UPGRADE_RGN:
                    this.talk("x", 8);
                    break;
                  case a.KEY_UPGRADE_SHI:
                    this.talk("x", 9);
                }
              while (--k);
            }
            if (!e.repeat) {
              switch (e.keyCode) {
                case a.KEY_AUTO_SPIN:
                  this.talk("t", 0);
                  break;
                case a.KEY_AUTO_FIRE:
                  this.talk("t", 1);
                  break;
                case a.KEY_OVER_RIDE:
                  this.talk("t", 2);
                  break;
                case a.KEY_REVERSE_MOUSE:
                  this.talk("t", 3);
                  break;
                case a.KEY_REVERSE_TANK:
                  this.talk("t", 4);
                  break;
                case a.KEY_UPGRADE_MAX:
                  this.statMaxing = !0;
                  break;
                case a.KEY_FUCK_YOU:
                  this.emit("0");
                  break;
              case a.SWITCH_TANK:
              this.emit("ChangeTankOne");
              break;
                case a.KEY_KILL_YOURSELF:
                  this.emit("K");
                  break;
                case a.KEY_PING:
                  a.showDebug = !0;
                  break;
                case a.KEY_CLASS_TREE:
                  a.showTree = !0;
                  break;
                case a.KEY_RECORD:
                  if (this.cv.captureStream && window.MediaRecorder)
                    if (this.videoRecorder)
                      switch (this.videoRecorder.state) {
                        case "inactive":
                          a.messages.push({
                            text: "Recorder started!",
                            status: 2,
                            alpha: 0,
                            time: Date.now()
                          });
                          this.videoRecorder.start();
                          break;
                        case "recording":
                          a.messages.push({
                            text: "Recorder stopped! Saving file...",
                            status: 2,
                            alpha: 0,
                            time: Date.now()
                          }),
                            this.videoRecorder.stop();
                      }
                    else {
                      let e = [];
                      this.videoRecorder = new MediaRecorder(
                        this.cv.captureStream(60)
                      );
                      this.videoRecorder.ondataavailable = a => e.push(a.data);
                      this.videoRecorder.onstop = () => {
                        let a = new Blob(e, {
                          type: this.videoRecorder.mimeType
                        });
                        e.length = 0;
                        let k = URL.createObjectURL(a),
                          q = document.createElement("a");
                        q.style.display = "none";
                        q.setAttribute("download", "video.webm");
                        q.setAttribute("href", k);
                        document.body.appendChild(q);
                        setTimeout(() => {
                          URL.revokeObjectURL(k);
                          document.body.removeChild(q);
                        }, 100);
                        q.click();
                      };
                      a.messages.push({
                        text: "Recorder initiated and started!",
                        status: 2,
                        alpha: 0,
                        time: Date.now()
                      });
                      this.videoRecorder.start();
                    }
                  else
                    a.messages.push({
                      text: "Media recorder not supported in this browser!",
                      status: 2,
                      alpha: 0,
                      time: Date.now()
                    });
                  break;
                case a.KEY_SCREENSHOT:
                  var x = this.cv.toDataURL();
                  k = atob(x.split(",")[1]);
                  x = x
                    .split(",")[0]
                    .split(":")[1]
                    .split(";")[0];
                  let p = new Uint8Array(k.length);
                  for (let a = 0; a < k.length; a++) p[a] = k.charCodeAt(a);
                  let q = URL.createObjectURL(new Blob([p], { type: x })),
                    w = document.createElement("a");
                  w.style.display = "none";
                  w.setAttribute("download", "screenshot.png");
                  w.setAttribute("href", q);
                  document.body.appendChild(w);
                  setTimeout(() => {
                    URL.revokeObjectURL(q);
                    document.body.removeChild(w);
                  }, 100);
                  w.click();
              }
              if (a.canUpgrade)
                switch (e.keyCode) {
                  case a.KEY_CHOOSE_1:
                    this.talk("U", 0);
                    break;
                  case a.KEY_CHOOSE_2:
                    this.talk("U", 1);
                    break;
                  case a.KEY_CHOOSE_3:
                    this.talk("U", 2);
                    break;
                  case a.KEY_CHOOSE_4:
                    this.talk("U", 3);
                    break;
                  case a.KEY_CHOOSE_5:
                    this.talk("U", 4);
                    break;
                  case a.KEY_CHOOSE_6:
                    this.talk("U", 5);
                    break;
                  case a.KEY_CHOOSE_7:
                    this.talk("U", 6);
                    break;
                  case a.KEY_CHOOSE_8:
                    this.talk("U", 7);
                    break;
                  case a.KEY_CHOOSE_9:
                    this.talk("U", 8);
                }
            }
          }
        }
        keyboardUp(e) {
          switch (e.keyCode) {
            case a.KEY_UP_ARROW:
            case a.KEY_UP:
              this.set(0, !1);
              break;
            case a.KEY_DOWN_ARROW:
            case a.KEY_DOWN:
              this.set(1, !1);
              break;
            case a.KEY_LEFT_ARROW:
            case a.KEY_LEFT:
              this.set(2, !1);
              break;
            case a.KEY_RIGHT_ARROW:
            case a.KEY_RIGHT:
              this.set(3, !1);
              break;
            case a.KEY_MOUSE_0:
              this.set(4, !1);
              break;
            case a.KEY_MOUSE_1:
              this.set(5, !1);
              break;
            case a.KEY_MOUSE_2:
              this.set(6, !1);
              break;
            case a.KEY_UPGRADE_MAX:
              this.statMaxing = !1;
              break;
            case a.KEY_PING:
              a.showDebug = !1;
              break;
            case a.KEY_CLASS_TREE:
              a.showTree = !1;
          }
        }
        mouseDown(e) {
          switch (e.button) {
            case 0:
              e = { x: e.clientX, y: e.clientY };
              let k = a.clickables.stat.check(e);
              -1 !== k
                ? this.talk("x", k)
                : -1 !== a.clickables.skipUpgrades.check(e)
                ? a.clearUpgrades()
                : ((e = a.clickables.upgrade.check(e)),
                  -1 !== e ? this.talk("U", e) : this.set(4, !0));
              break;
            case 1:
              this.set(5, !0);
              break;
            case 2:
              this.set(6, !0);
          }
        }
        mouseMove(e) {
          null !== a.player.x &&
            this.setPosition(e.clientX - a.player.x, e.clientY - a.player.y);
          a.statHover =
            0 === a.clickables.hover.check({ x: e.clientX, y: e.clientY });
        }
        mouseUp(a) {
          switch (a.button) {
            case 0:
              this.set(4, !1);
              break;
            case 1:
              this.set(5, !1);
              break;
            case 2:
              this.set(6, !1);
          }
        }
        touchStart(e) {
          e.preventDefault();
          if (a.died && a.respawnOn <= Date.now())
            this.spawn(a.playerName), (a.died = !1);
          else {
            for (let x of e.changedTouches) {
              var k = { x: x.clientX, y: x.clientY };
              let e = x.identifier;
              var p = a.clickables.stat.check(k);
              -1 !== p
                ? this.talk("x", p)
                : -1 !== a.clickables.skipUpgrades.check(k)
                ? a.clearUpgrades()
                : ((p = a.clickables.upgrade.check(k)),
                  -1 !== p
                    ? this.talk("U", p)
                    : ((k = k.x < this.cv.width / 2),
                      null === this.movementTouch && k
                        ? (this.movementTouch = e)
                        : null !== this.controlTouch ||
                          k ||
                          ((this.controlTouch = e), this.set(4, !0))));
            }
            this.touchMove(e);
          }
        }
        touchMove(a) {
          a.preventDefault();
          for (let k of a.changedTouches) {
            var e = k.clientX;
            a = k.clientY;
            var p = k.identifier;
            this.movementTouch === p
              ? ((e -= (1 * this.cv.width) / 6),
                (a -= (2 * this.cv.height) / 3),
                (p = Math.sqrt(e * e + a * a)),
                (e /= p),
                (a /= p),
                -0.3826834323650898 > a !== this.movementTop &&
                  this.set(0, (this.movementTop = -0.3826834323650898 > a)),
                0.3826834323650898 < a !== this.movementBottom &&
                  this.set(1, (this.movementBottom = 0.3826834323650898 < a)),
                -0.3826834323650898 > e !== this.movementLeft &&
                  this.set(2, (this.movementLeft = -0.3826834323650898 > e)),
                0.3826834323650898 < e !== this.movementRight &&
                  this.set(3, (this.movementRight = 0.3826834323650898 < e)))
              : this.controlTouch === p &&
                this.setPosition(
                  4 * (e - (5 * this.cv.width) / 6),
                  4 * (a - (2 * this.cv.height) / 3)
                );
          }
        }
        touchEnd(a) {
          a.preventDefault();
          for (let e of a.changedTouches)
            (a = e.identifier),
              this.movementTouch === a
                ? ((this.movementTouch = null),
                  this.movementTop && this.set(0, (this.movementTop = !1)),
                  this.movementBottom &&
                    this.set(1, (this.movementBottom = !1)),
                  this.movementLeft && this.set(2, (this.movementLeft = !1)),
                  this.movementRight && this.set(3, (this.movementRight = !1)))
                : this.controlTouch === a &&
                  ((this.controlTouch = null), this.set(4, !1));
        }
      }
      r.exports = E;
    },
    function(r, p) {
      let w = new Uint32Array(1),
        a = new Uint8Array(w.buffer),
        e = new Float32Array(w.buffer),
        E = new Uint16Array(1),
        x = new Uint8Array(E.buffer);
      p.encode = k => {
        let p = [];
        var r = [],
          q = 0,
          C = 15,
          v = 0;
        for (var t of k) {
          var F = 0;
          if (0 === t || !1 === t) F = 0;
          else if (1 === t || !0 === t) F = 1;
          else if ("number" === typeof t)
            !Number.isInteger(t) || -4294967296 > t || 4294967296 <= t
              ? ((F = 8), (q += 4))
              : 0 <= t
              ? 256 > t
                ? ((F = 2), q++)
                : 65536 > t
                ? ((F = 4), (q += 2))
                : 4294967296 > t && ((F = 6), (q += 4))
              : -256 <= t
              ? ((F = 3), q++)
              : -65536 <= t
              ? ((F = 5), (q += 2))
              : -4294967296 <= t && ((F = 7), (q += 4));
          else if ("string" === typeof t) {
            F = !1;
            for (let a = 0; a < t.length; a++)
              if ("\u00ff" < t.charAt(a)) F = !0;
              else if ("\x00" === t.charAt(a))
                throw (console.error("Null containing string", t),
                Error("Null containing string"));
            !F && 1 >= t.length
              ? ((F = 9), q++)
              : F
              ? ((F = 11), (q += 2 * t.length + 2))
              : ((F = 10), (q += t.length + 1));
          } else
            throw (console.error("Unencodable data type", k),
            Error("Unencodable data type"));
          p.push(F);
          if (F === C) v++;
          else {
            r.push(C);
            if (1 <= v) {
              for (; 19 < v; ) r.push(14), r.push(15), (v -= 19);
              1 === v
                ? r.push(C)
                : 2 === v
                ? r.push(12)
                : 3 === v
                ? r.push(13)
                : 20 > v && (r.push(14), r.push(v - 4));
            }
            v = 0;
            C = F;
          }
        }
        r.push(C);
        if (1 <= v) {
          for (; 19 < v; ) r.push(14), r.push(15), (v -= 19);
          1 === v
            ? r.push(C)
            : 2 === v
            ? r.push(12)
            : 3 === v
            ? r.push(13)
            : 20 > v && (r.push(14), r.push(v - 4));
        }
        r.push(15);
        1 === r.length % 2 && r.push(15);
        q = new Uint8Array((r.length >> 1) + q);
        for (C = 0; C < r.length; C += 2) q[C >> 1] = (r[C] << 4) | r[C + 1];
        r = r.length >> 1;
        for (C = 0; C < p.length; C++)
          switch (((v = k[C]), p[C])) {
            case 2:
            case 3:
              q[r++] = v;
              break;
            case 4:
            case 5:
              E[0] = v;
              q.set(x, r);
              r += 2;
              break;
            case 6:
            case 7:
              w[0] = v;
              q.set(a, r);
              r += 4;
              break;
            case 8:
              e[0] = v;
              q.set(a, r);
              r += 4;
              break;
            case 9:
              v = 0 === v.length ? 0 : v.charCodeAt(0);
              q[r++] = v;
              break;
            case 10:
              for (t = 0; t < v.length; t++) q[r++] = v.charCodeAt(t);
              q[r++] = 0;
              break;
            case 11:
              for (t = 0; t < v.length; t++)
                (F = v.charCodeAt(t)), (q[r++] = F & 255), (q[r++] = F >> 8);
              q[r++] = 0;
              q[r++] = 0;
          }
        return q;
      };
      p.decode = k => {
        k = new Uint8Array(k);
        if (15 !== k[0] >> 4) return null;
        var p = [],
          r = 15;
        let q = 0;
        for (var C = !0; ; ) {
          if (q >= k.length) return null;
          var v = k[q];
          C ? ((v &= 15), q++) : (v >>= 4);
          C = !C;
          if (12 === (v & 12)) {
            if (15 === v) {
              C && q++;
              break;
            }
            let a = v - 10;
            if (14 === v) {
              if (q >= k.length) return null;
              v = k[q];
              C ? ((v &= 15), q++) : (v >>= 4);
              C = !C;
              a += v;
            }
            for (v = 0; v < a; v++) p.push(r);
          } else p.push(v), (r = v);
        }
        r = [];
        for (let t of p)
          switch (t) {
            case 0:
              r.push(0);
              break;
            case 1:
              r.push(1);
              break;
            case 2:
              r.push(k[q++]);
              break;
            case 3:
              r.push(k[q++] - 256);
              break;
            case 4:
              x[0] = k[q++];
              x[1] = k[q++];
              r.push(E[0]);
              break;
            case 5:
              x[0] = k[q++];
              x[1] = k[q++];
              r.push(E[0] - 65536);
              break;
            case 6:
              a[0] = k[q++];
              a[1] = k[q++];
              a[2] = k[q++];
              a[3] = k[q++];
              r.push(w[0]);
              break;
            case 7:
              a[0] = k[q++];
              a[1] = k[q++];
              a[2] = k[q++];
              a[3] = k[q++];
              r.push(w[0] - 4294967296);
              break;
            case 8:
              a[0] = k[q++];
              a[1] = k[q++];
              a[2] = k[q++];
              a[3] = k[q++];
              r.push(Number.isNaN(e[0]) ? -1 : e[0]);
              break;
            case 9:
              p = k[q++];
              r.push(0 === p ? "" : String.fromCharCode(p));
              break;
            case 10:
              for (p = ""; (C = k[q++]); ) p += String.fromCharCode(C);
              r.push(p);
              break;
            case 11:
              for (p = ""; (C = k[q++] | (k[q++] << 8)); )
                p += String.fromCharCode(C);
              r.push(p);
          }
        return r;
      };
    },
    function(r) {
      r.exports = {
        normal: {
          teal: "#7ADBBC",
          lgreen: "#B9E87E",
          orange: "#E7896D",
          yellow: "#FDF380",
          lavender: "#B58EFD",
          pink: "#EF99C3",
          vlgrey: "#E8EBF7",
          lgrey: "#AA9F9E",
          guiwhite: "#FFFFFF",
          black: "#484848",
          blue: "#3CA4CB",
          green: "#8ABC3F",
          goo: "#E03E41",
          red: "#E03E41",
          gold: "#EFC74B",
          purple: "#8D6ADF",
          magenta: "#CC669C",
          grey: "#A7A7AF",
          dgrey: "#726F6F",
          white: "#DBDBDB",
          guiblack: "#000000",
          paletteSize: 10,
          border: 0.65
        },
        classic: {
          teal: "#8EFFFB",
          lgreen: "#85E37D",
          orange: "#FC7676",
          yellow: "#FFEB8E",
          lavender: "#B58EFF",
          pink: "#F177DD",
          vlgrey: "#CDCDCD",
          lgrey: "#999999",
          guiwhite: "#FFFFFF",
          black: "#525252",
          blue: "#00B0E1",
          green: "#00E06C",
          red: "#F04F54",
          gold: "#FFE46B",
          purple: "#768CFC",
          magenta: "#BE7FF5",
          grey: "#999999",
          dgrey: "#545454",
          white: "#C0C0C0",
          guiblack: "#000000",
          paletteSize: 10,
          border: 0.5
        },
        dark: {
          teal: "#8975B7",
          lgreen: "#0C491D",
          orange: "#C46748",
          yellow: "#B2B224",
          lavender: "#7D56C5",
          pink: "#B24FAE",
          vlgrey: "#1E1E1E",
          lgrey: "#3C3A3A",
          guiwhite: "#000000",
          black: "#E5E5E5",
          blue: "#379FC6",
          green: "#30B53B",
          red: "#FF6C6E",
          gold: "#FFC665",
          purple: "#9673E8",
          magenta: "#C8679B",
          grey: "#635F5F",
          dgrey: "#73747A",
          white: "#11110F",
          guiblack: "#FFFFFF",
          paletteSize: 10,
          border: 0.15
        },
        natural: {
          teal: "#76C1BB",
          lgreen: "#AAD35D",
          orange: "#E09545",
          yellow: "#FFD993",
          lavender: "#939FFF",
          pink: "#D87FB2",
          vlgrey: "#C4B6B6",
          lgrey: "#7F7F7F",
          guiwhite: "#FFFFFF",
          black: "#373834",
          blue: "#4F93B5",
          green: "#00B659",
          red: "#E14F65",
          gold: "#E5BF42",
          purple: "#8053A0",
          magenta: "#B67CAA",
          grey: "#998F8F",
          dgrey: "#494954",
          white: "#A5B2A5",
          guiblack: "#000000",
          paletteSize: 10,
          border: 0.2
        },
        pumpkin: {
          teal: "#721970",
          lgreen: "#ff6347",
          orange: "#1b713a",
          yellow: "#fdf380",
          lavender: "#941100",
          pink: "#194417",
          vlgrey: "#1b713a",
          lgrey: "#aa9f9e",
          guiwhite: "#fed8b1",
          black: "#484848",
          blue: "#3ca4cb",
          green: "#76EEC6",
          red: "#F04F54",
          gold: "#1b713a",
          purple: "#1b713a",
          magenta: "#cc669c",
          grey: "#ffffff",
          dgrey: "#726f6f",
          white: "#ff9b58",
          guiblack: "#000000",
          paletteSize: 10,
          border: 3.3
        },
        forest: {
          teal: "#884AA5",
          lgreen: "#8C9B3E",
          orange: "#D16A80",
          yellow: "#97596D",
          lavender: "#499855",
          pink: "#60294F",
          vlgrey: "#DDC6B8",
          lgrey: "#7E949E",
          guiwhite: "#FFFFE8",
          black: "#665750",
          blue: "#807BB6",
          green: "#A1BE55",
          red: "#E5B05B",
          gold: "#FF4747",
          purple: "#BAC674",
          magenta: "#BA78D1",
          grey: "#998866",
          dgrey: "#529758",
          white: "#7DA060",
          guiblack: "#000000",
          paletteSize: 10,
          border: 0.7
        },
        midnight: {
          teal: "#2B9098",
          lgreen: "#4BAA5D",
          orange: "#345678",
          yellow: "#CDC684",
          lavender: "#89778E",
          pink: "#A85C90",
          vlgrey: "#CCCCCC",
          lgrey: "#A7B2B7",
          guiwhite: "#BAC6FF",
          black: "#091F28",
          blue: "#123455",
          green: "#098765",
          red: "#000013",
          gold: "#566381",
          purple: "#743784",
          magenta: "#B29098",
          grey: "#555555",
          dgrey: "#649EB7",
          white: "#444444",
          guiblack: "#000000",
          paletteSize: 10,
          border: 0.6
        },
        pastel: {
          teal: "#89BFBA",
          lgreen: "#B5D17D",
          orange: "#E5E0E0",
          yellow: "#B5BBE5",
          lavender: "#939FFF",
          pink: "#646DE5",
          vlgrey: "#B2B2B2",
          lgrey: "#7F7F7F",
          guiwhite: "#FFFFFF",
          black: "#383835",
          blue: "#AEAEFF",
          green: "#AEFFAE",
          red: "#FFAEAE",
          gold: "#FFFFFF",
          purple: "#C3C3D8",
          magenta: "#FFB5FF",
          grey: "#CCCCCC",
          dgrey: "#A0A0B2",
          white: "#F2F2F2",
          guiblack: "#000000",
          paletteSize: 10,
          border: 0.35
        },
        space: {
          teal: "#4788F3",
          lgreen: "#AF1010",
          orange: "#FF0000",
          yellow: "#82F850",
          lavender: "#FFFFFF",
          pink: "#57006C",
          vlgrey: "#FFFFFF",
          lgrey: "#272727",
          guiwhite: "#000000",
          black: "#7F7F7F",
          blue: "#0E1B92",
          green: "#0AEB80",
          red: "#C2B90A",
          gold: "#3E7E8C",
          purple: "#285911",
          magenta: "#A9707E",
          grey: "#6F6A68",
          dgrey: "#2D0738",
          white: "#000000",
          guiblack: "#FFFFFF",
          paletteSize: 10,
          border: 0.25
        },
        nebula: {
          teal: "#38B06E",
          lgreen: "#22882E",
          orange: "#D28E7F",
          yellow: "#D5D879",
          lavender: "#E084EB",
          pink: "#DF3E3E",
          vlgrey: "#F0F2CC",
          lgrey: "#7D7D7D",
          guiwhite: "#C2C5EF",
          black: "#161616",
          blue: "#9274E6",
          green: "#89F470",
          red: "#E08E5D",
          gold: "#ECDC58",
          purple: "#58CBEC",
          magenta: "#EA58EC",
          grey: "#7E5713",
          dgrey: "#303030",
          white: "#555555",
          guiblack: "#EAEAEA",
          paletteSize: 10,
          border: 0.5
        },
        bleach: {
          teal: "#00FFFF",
          lgreen: "#00FF00",
          orange: "#FF3200",
          yellow: "#FFEC00",
          lavender: "#FF24A7",
          pink: "#FF3CBD",
          vlgrey: "#FFF186",
          lgrey: "#918181",
          guiwhite: "#F1F1F1",
          black: "#5F5F5F",
          blue: "#0025FF",
          green: "#00FF00",
          red: "#FF0000",
          gold: "#FFFA23",
          purple: "#3100FF",
          magenta: "#D4D3D3",
          grey: "#838383",
          dgrey: "#4C4C4C",
          white: "#FFFEFE",
          guiblack: "#080808",
          paletteSize: 10,
          border: 0.4
        },
        ocean: {
          teal: "#76EEC6",
          lgreen: "#41AA78",
          orange: "#FF7F50",
          yellow: "#FFD250",
          lavender: "#DC3388",
          pink: "#FA8072",
          vlgrey: "#8B8886",
          lgrey: "#BFC1C2",
          guiwhite: "#FFFFFF",
          black: "#12466B",
          blue: "#4200AE",
          green: "#0D6338",
          red: "#DC4333",
          gold: "#FEA904",
          purple: "#7B4BAB",
          magenta: "#5C246E",
          grey: "#656884",
          dgrey: "#D4D7D9",
          white: "#3283BC",
          guiblack: "#000000",
          paletteSize: 10,
          border: 0.3
        },
        badlands: {
          teal: "#F9CB9C",
          lgreen: "#F1C232",
          orange: "#38761D",
          yellow: "#E69138",
          lavender: "#B7B7B7",
          pink: "#78866B",
          vlgrey: "#6AA84F",
          lgrey: "#B7B7B7",
          guiwhite: "#A4C2F4",
          black: "#000000",
          blue: "#0C5A9E",
          green: "#6E8922",
          red: "#5B0000",
          gold: "#783F04",
          purple: "#591C77",
          magenta: "#20124D",
          grey: "#2F1C16",
          dgrey: "#999999",
          white: "#543517",
          guiblack: "#CFE2F3",
          paletteSize: 10,
          border: 0.4
        },
        custom: {
          teal: "#7ADBBC",
          lgreen: "#B9E87E",
          orange: "#E7896D",
          yellow: "#FDF380",
          lavender: "#B58EFD",
          pink: "#EF99C3",
          vlgrey: "#E8EBF7",
          lgrey: "#AA9F9E",
          guiwhite: "#FFFFFF",
          black: "#484848",
          blue: "#3CA4CB",
          green: "#8ABC3F",
          red: "#E03E41",
          gold: "#EFC74B",
          purple: "#8D6ADF",
          magenta: "#CC669C",
          grey: "#A7A7AF",
          dgrey: "#726F6F",
          white: "#DBDBDB",
          guiblack: "#000000",
          paletteSize: 10,
          border: 0.65
        }
      };
    }
  ]);
}.call(this);


